; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Connecting ...
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉>  ; Use `alt+enter` to evaluate
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :projects
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Evaluating file: project_history.cljs
nil
cljs꞉projects.components.project-history꞉>  ; Use `alt+enter` to evaluate
#js {"$$typeof" "Symbol(react.element)", :type "p", :key nil, :ref nil, :props #js {:children "project edit"}, :_owner nil, :_store #js {}}
cljs꞉projects.components.project-history꞉> 
#js {"$$typeof" "Symbol(react.element)", :type "table", :key nil, :ref nil, :props #js {:style #js {:border "1px solid black", :width "60%", :textAlign "center", :backgroundColor "grey"}, :children #js [#js {"$$typeof" "Symbol(react.element)", :type "thead", :key nil, :ref nil, :props #js {:style #js {:border "1px solid black", :backgroundColor "#BFBFBF"}, :children #js {"$$typeof" "Symbol(react.element)", :type "tr", :key "1", :ref nil, :props #js {:children #js {"$$typeof" "Symbol(react.element)", :type "th", :key "1", :ref nil, :props #js {:children 1}, :_owner nil, :_store #js {}}}, :_owner nil, :_store #js {}}}, :_owner nil, :_store #js {}} #js {"$$typeof" "Symbol(react.element)", :type "tbody", :key nil, :ref nil, :props #js {:children #js {"$$typeof" "Symbol(react.element)", :type "tr", :key "1", :ref nil, :props #js {:style #js {:border "1px solid black", :backgroundColor "#BFBFBF"}, :children #js {"$$typeof" "Symbol(react.element)", :type "td", :key "1", :ref nil, :props #js {:style #js {:border "1px solid black", :center true}, :children 1}, :_owner nil, :_store #js {}}}, :_owner nil, :_store #js {}}}, :_owner nil, :_store #js {}}]}, :_owner nil, :_store #js {}}
cljs꞉projects.components.project-history꞉> 
; Evaluating file: project_history.cljs
nil
cljs꞉projects.components.project-history꞉> 
#js {"$$typeof" "Symbol(react.element)", :type "div", :key nil, :ref nil, :props #js {:className #object[projects$components$project_history$dk]}, :_owner nil, :_store #js {}}
cljs꞉projects.components.project-history꞉> 
; nREPL Connection was closed
