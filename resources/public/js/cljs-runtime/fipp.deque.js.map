{"version":3,"sources":["fipp/deque.cljc"],"mappings":";AAKA,AAAKA,AAAOC;AAEZ,AAAA,AAAKC;AAEL,AAAA,AAAMC,AAAMC;AAAZ,AACE,AAAA,AAACC,AAAOD;;AAEV,AAAKE,AAAM,AAACC,AAAKC,AAAKN;AAEtB,AAAA,AAAMO,AAAQC,AAAEC,AAAMC;AAAtB,AACE,AAAA,AAAA,AAACC,AAAYH,AAAGC,AAAOC;;AAEzB,AAAKE,AAAOC","names":["fipp.deque/create","cljs.core/vector","fipp.deque/empty","fipp.deque/popl","v","cljs.core.subvec","fipp.deque/conjr","cljs.core.fnil","cljs.core/conj","fipp.deque/conjlr","l","deque","r","clojure.core.rrb_vector.catvec","fipp.deque/concat","clojure.core.rrb-vector/catvec"],"sourcesContent":["(ns fipp.deque\n  \"Double-sided queue built on rrb vectors.\"\n  (:refer-clojure :exclude [empty concat])\n  (:require [clojure.core.rrb-vector :as rrb]))\n\n(def create vector)\n\n(def empty [])\n\n(defn popl [v]\n  (subvec v 1))\n\n(def conjr (fnil conj empty))\n\n(defn conjlr [l deque r]\n  (rrb/catvec [l] deque [r]))\n\n(def concat rrb/catvec)\n"]}