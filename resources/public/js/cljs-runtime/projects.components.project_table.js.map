{"version":3,"sources":["projects/components/project_table.cljs"],"mappings":";AASA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAC,AAAOY;AAAP,AAAA,AAAAX,AAAA,AAAA,AAAAC,AAAAH,AAAAC;AAAAG,AAAA,AAAAC,AAAAH,AAAA,AAAA;AAAAE,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAE,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAC,AAAAJ,AAAAA;AAAA,AAAAK,AAAAL,AAAA,AAA8BU;AAA9B,AAAAL,AAAAL,AAAA,AAAsCW;AAAtC,AAAAN,AAAAL,AAAA,AAA+CY;AAA/C,AAAAP,AAAAL,AAAA,AAAsDa;AAAtD,AAAA;AA8BO,AAAA,AAAAa,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAD;;AAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAE;;AAAA,AAAAD;AAAA,AAAA,AAAAJ,AAAA,AAAA,AAAAM,AAAA,AAAA,AAAA;AAAA,AAAAA;AAvBmB,AAAClB,AACA,AAAKC,AAAEC;AAAP,AACcD,AAqBlC,AAAA,AAAAW,AAAA,AAAA,AAAAO,AAAA,AAAA;AAAA,AAAAA;AApBgCjB,AACA,AAACC,AACD,AAAA,AAAA,AAACC,AACD,AAACC;AACbT,AAEf,AAACI,AACA,AAAKC,AAAEK,AAqBP,AAAA,AAAAM,AAAA,AAAA;AArBA,AACcX,AAEqB,AAACM,AAAUN,AAUpD,AAAA,AAAAW,AAAA,AAAA,AAAAQ,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAN,AAAA,AAAA,AAAA,AAAAA;AAAA,AAAAM;;AAAA,AAAAD;AATc,AAACpB,AACA,AAAKQ,AAAEC;AAAP,AACcD,AAO7B,AAAA,AAAAI,AAAA,AAAA,AAAAU,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAR,AAAA,AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAQ;AAJwCb,AACDC,AAGvC,AAAA;AAAA,AAAAW;AAFuBb;AACJH,AACnB,AAAA,AAAAM,AAAA,AAAA,AAAAY,AAAA,AAAA,AAAA,AAAA,AAAmB,AAAA,AAACE,AACD,AAACC,AAIiB,AAAKC,AAGpC,AAAA,AAAAhB,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA;AAH+B,AACE,AAACiB,AAAgBD,AAAS/B,AAASC,AAAOC;;AANjF,AAAAyB;AAAA,AAAA,AAAA,AAAAZ,AAAA,AAAA,AAAAa,AAAA,AAAA,AAAA,AAAA,AASqC,AAAKG;AAAL,AACE,AAACE,AAAgBF,AAAS/B,AAASC,AAAOC;;AAVjF,AAAA0B;AAAA;AAYM5B;;AA1Cb,AAAA,AAAA,AAAAL;AAAA,AAAAC,AAAAZ;AAAA,AAAA,AAAAa,AAAAD,AAAA,AAAA;;AAAAA;;AAAAZ;;;;AAAA;AAAA;AAAOc","names":["G__28099","props__26411__auto__","maybe-ref__26412__auto__","vec__28103","helix.core/extract-cljs-props","map__28106","cljs.core.nth","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","goog/DEBUG","G__28146","goog.object/set","projects.components.project-table/project-table","columns","projects","action","token","cljs.core.map_indexed","i","col","cljs.core/name","clojure.string/replace","clojure.string/capitalize","project","projects.components.events/set-color","j","item","projects.components.events/change-color-on-leave","projects.components.events/change-color-on-over","helix.core/get-react","obj28123","obj28125","helix.impl.props/->js","obj28127","obj28129","obj28131","obj28133","obj28135","obj28137","obj28139","obj28141","obj28143","obj28145","cljs.core.dissoc","cljs.core/vals","response","projects.components.buttons/on-click-select","projects.components.buttons/on-click-delete"],"sourcesContent":["(ns projects.components.project-table\n  (:require [helix.dom :as d]\n            [helix.core :refer [defnc]]\n            [projects.components.buttons :refer [on-click-select on-click-delete]]\n            [projects.components.events :refer [change-color-on-over\n                                                change-color-on-leave\n                                                set-color]]\n            [clojure.string :refer [replace capitalize]]))\n\n(defnc project-table [{:keys [columns projects action token]}]\n  (d/table {:style {:border \"1px solid black\"\n                    :text-align :center\n                    :width \"100%\"}}\n           (d/thead {:style {:border \"1px solid black\"\n                             :background-color \"#BFBFBF\"}}\n                    (d/tr {:key 1}\n                          (map-indexed\n                           (fn [i col]\n                             (d/th {:key i}\n                                   (-> col\n                                       (name)\n                                       (replace \"_\" \" \")\n                                       (capitalize))))\n                           columns)))\n           (d/tbody\n            (map-indexed\n             (fn [i project]\n               (d/tr {:key i\n                      :style {:border \"1px solid black\"\n                              :background-color (set-color i)}}\n                     (map-indexed\n                      (fn [j item]\n                        (d/td {:key j\n                               :style {:border \"1px solid black\"\n                                       :center true}\n                               :on-mouse-leave change-color-on-leave\n                               :on-mouse-over change-color-on-over}\n                              item))\n                      (-> project\n                          (dissoc :id)\n                          (vals)))\n                     (d/td\n                      (d/div\n                       (d/button {:class '[bg-blue-500 text-white px-1 py-1 rounded]\n                                  :on-click (fn [response]\n                                              (on-click-select response projects action token))}\n                                 \"Select\")\n                       (d/button {:class '[bg-red-500 ml-2 text-white px-1 py-1 rounded]\n                                  :on-click (fn [response]\n                                              (on-click-delete response projects action token))}\n                                 \"Delete\")))))\n             projects))))"]}