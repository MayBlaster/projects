{"version":3,"sources":["projects/components/project_history.cljs"],"mappings":";AAKA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAC,AAAOY;AAAP,AAAA,AAAAX,AAAA,AAAA,AAAAC,AAAAH,AAAAC;AAAAG,AAAA,AAAAC,AAAAH,AAAA,AAAA;AAAAE,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAE,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAC,AAAAJ,AAAAA;AAAA,AAAAK,AAAAL,AAAA,AACWU;AADX,AAAA;AAEE,AAAMC,AAAYD,AACC,AAACE,AACD,AAAA,AAACC,AACD,AAACC;AACdC,AAAiBL,AACA,AAACE,AACD,AAAA;AANvB,AAgCK,AAAA,AAAAa,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAA,AAQM,AAAA,AAAAH,AAAA,AAAA;AARN,AAAAE;;AAAA,AAAAD;AAtBA,AAAA,AAAiBX,AAsBjB,AAAA,AAAAU,AAAA,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAQM,AAAA,AAAAH,AAAA,AAAA;AARN,AAAAK;;AAAA,AAAAD;AAAA,AAAA,AAAAJ,AAAA,AAAA,AAAAM,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAJ,AAAA;AAAA,AAAAI;;AAAA,AAAAD;AAAA,AAAA,AAAAN,AAAA,AAAA,AAAAQ,AAAA,AAAA,AAAA;AAAA,AAAAA;AAhBiB,AAACjB,AACA,AAAKC,AAAEC;AAAP,AACcD,AAchC,AAAA,AAAAQ,AAAA,AAAA,AAAAS,AAAA,AAAA;AAAA,AAAAA;AAb8BhB,AACA,AAACC,AACD,AAAA,AAAA,AAACC,AACD,AAACC;AACbV,AAEf,AAACK,AACA,AAAKC,AAAEK,AAcL,AAAA,AAAAG,AAAA,AAAA;AAdF,AACcR,AAKlB,AAAA,AAAAQ,AAAA,AAAA,AAAAU,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAR,AAAA;AAAA,AAAAQ;;AAAA,AAAAD;AAHY,AAACnB,AACA,AAAKO,AAAEC;AAAP,AACcD,AAC3B,AAAA,AAAAE,AAAA,AAAA,AAAAY,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAV,AAAA,AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAU;;AAAA,AAAAD;AACqBb;AACJF,AACA,AAAA,AAACT,AACD,AAAC0B;AACd7B;;AAvCX,AAAA,AAAA,AAAAJ;AAAA,AAAAC,AAAAZ;AAAA,AAAA,AAAAa,AAAAD,AAAA,AAAA;;AAAAA;;AAAAZ;;;;AAAA;AAAA;AAAOc","names":["G__28254","props__26411__auto__","maybe-ref__26412__auto__","vec__28255","helix.core/extract-cljs-props","map__28258","cljs.core.nth","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","goog/DEBUG","G__28284","goog.object/set","projects.components.project-history/display-history","project-history","columns","cljs.core/first","cljs.core.dissoc","cljs.core/keys","project-name","cljs.core.map_indexed","i","col","cljs.core/name","clojure.string/replace","clojure.string/capitalize","project","j","item","helix.core/get-react","obj28261","obj28263","helix.impl.props/->js","obj28265","obj28267","obj28269","obj28271","obj28273","obj28275","obj28277","obj28279","obj28281","obj28283","cljs.core/vals"],"sourcesContent":["(ns projects.components.project-history\n  (:require [helix.core :refer [defnc]]\n            [helix.dom :as d]\n            [clojure.string :refer [replace capitalize]]))\n\n(defnc display-history \n  [{:keys [project-history]}]\n  (let [columns (-> project-history\n                     (first)\n                     (dissoc :name)\n                     (keys))\n        project-name (-> project-history\n                         (first)\n                         (:name))]\n    (d/div\n     (d/p {:style {:margin-bottom \"10px\"}}\n      (d/strong\n       (str \"Project: \" project-name)))\n     (d/table {:style {:border \"1px solid black\"\n                       :width \"30%\"\n                       :text-align :center}}\n              (d/thead {:style {:border \"1px solid black\"}}\n                  (d/tr {:key 1}\n                        (map-indexed\n                         (fn [i col]\n                           (d/th {:key i}\n                                 (-> col\n                                     (name)\n                                     (replace \"_\" \" \")\n                                     (capitalize))))\n                         columns)))\n         (d/tbody\n          (map-indexed\n           (fn [i project]\n             (d/tr {:key i\n                    :style {:border \"1px soild black\"}}\n                   (map-indexed\n                    (fn [j item]\n                      (d/td {:key j\n                             :style {:border \"1px solid black\" :center true}}\n                            item))\n                    (-> project\n                        (dissoc :name)\n                        (vals)))))\n           project-history))))))\n\n"]}