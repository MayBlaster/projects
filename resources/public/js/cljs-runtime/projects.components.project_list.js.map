{"version":3,"sources":["projects/components/project_list.cljs"],"mappings":";AASA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAC,AAAOM;AAAP,AAAA,AAAAL,AAAA,AAAA,AAAAC,AAAAH,AAAAC;AAAA,AAAA;AACG,AAAAO,AAAyB,AAACI;AAA1B,AAAAH,AAAAD,AAAA,AAAA,AAAOE;AAAP,AAAAD,AAAAD,AAAA,AAAA,AAAiBG;AACXE,AAAM,AAAA,AAAQH;AACdI,AAAS,AAAA,AAAWJ;AACpBK,AAAgB,AAAA,AAAkBL;AAClCM,AAGY,AAAA,AAAAG,AAACC;AAAD,AAAS,AAAA,AAAAD,AAACE;AAHTP,AACD,AAACG,AACD,AAACC;AANnB,AA6BI,AAAA,AAAAQ,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAD;;AAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAE;;AAAA,AAAAD;AAjBcR,AAAwBN,AACCF,AACFH,AACDE,AAcpC,AAAA,AAAAa,AAAA,AAAAM,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAAA;AAbcT,AAChB,AAAI,AAACC,AAAOT,AAEPU,AAAkCV,AAUrC,AAAA,AAAAW,AAAA,AAAAO,AAAA,AAAA,AAQM,AAAA,AAAAP,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA;AARN,AAAAO;;;AA9BP,AAAA,AAAA,AAAA7B;AAAA,AAAAC,AAAAN;AAAA,AAAA,AAAAO,AAAAD,AAAA,AAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOQ","names":["G__28150","props__26411__auto__","maybe-ref__26412__auto__","vec__28151","helix.core/extract-cljs-props","goog/DEBUG","G__28169","goog.object/set","projects.components.project-list/project-list","vec__28154","cljs.core.nth","app-state","action","projects.components.state/use-app-state","token","projects","project-history","columns","cljs.core/first","cljs.core/keys","p1__28147#","cljs.core.remove","cljs.core._EQ_","projects.components.project-table/project-table","projects.components.project-form/project-form","cljs.core/empty?","projects.components.project-history/display-history","helix.core/get-react","obj28158","obj28160","helix.impl.props/->js","obj28162","obj28164","obj28166","obj28168"],"sourcesContent":["(ns projects.components.project-list\n  (:require [helix.dom :as d]\n            [helix.core :refer [defnc $]]\n            [projects.components.state :refer [use-app-state]]\n            [projects.components.project-history :refer [display-history]]\n            [projects.components.project-table :refer [project-table]]\n            [projects.components.project-form :refer [project-form]]))\n\n\n(defnc project-list []\n   (let [[app-state action] (use-app-state)\n         token (:token app-state)\n         projects (:projects app-state)\n         project-history (:project-history app-state)\n         columns (->> projects\n                     (first)\n                     (keys)\n                     (remove #(= :id %)))]\n    (d/div {:style {:overflow \"hidden\"}}\n           (d/div {:style {:float \"left\"\n                           :width \"50%\"\n                           :margin-right \"20px\"}}\n                  ($ project-table {:columns columns\n                                    :projects projects \n                                    :action action\n                                    :token token})\n                  ($ project-form))\n     (if (empty? project-history)\n       (d/p \"Click on a project to view project history\")\n       ($ display-history {:project-history project-history})))))\n"]}