shadow$provide.module$node_modules$mini_create_react_context$dist$cjs$index=function(global,require,module,exports){function _interopDefaultLegacy(e){return e&&"object"===typeof e&&"default"in e?e:{"default":e}}function createEventEmitter(value){var handlers=[];return{on:function(handler){handlers.push(handler)},off:function(handler){handlers=handlers.filter(function(h){return h!==handler})},get:function(){return value},set:function(newValue,changedBits){value=newValue;handlers.forEach(function(handler){return handler(value,
changedBits)})}}}function createReactContext(defaultValue,calculateChangedBits){var _Provider$childContex,_Consumer$contextType,contextProp="__create-react-context-"+(commonjsGlobal.__global_unique_id__=(commonjsGlobal.__global_unique_id__||0)+1)+"__",Provider=function(_Component){function Provider(){var _this=_Component.apply(this,arguments)||this;_this.emitter=createEventEmitter(_this.props.value);return _this}_inheritsLoose__default["default"](Provider,_Component);var _proto=Provider.prototype;
_proto.getChildContext=function(){var _ref;return _ref={},_ref[contextProp]=this.emitter,_ref};_proto.componentWillReceiveProps=function(nextProps){if(this.props.value!==nextProps.value){var oldValue=this.props.value,newValue=nextProps.value;if(oldValue===newValue?0===oldValue&&1/oldValue!==1/newValue:oldValue===oldValue||newValue===newValue)oldValue="function"===typeof calculateChangedBits?calculateChangedBits(oldValue,newValue):1073741823,warning__default["default"]((oldValue&1073741823)===oldValue,
"calculateChangedBits: Expected the return value to be a 31-bit integer. Instead received: "+oldValue),oldValue|=0,0!==oldValue&&this.emitter.set(nextProps.value,oldValue)}};_proto.render=function(){return this.props.children};return Provider}(React.Component);Provider.childContextTypes=(_Provider$childContex={},_Provider$childContex[contextProp]=PropTypes__default["default"].object.isRequired,_Provider$childContex);_Provider$childContex=function(_Component2){function Consumer(){var _this2=_Component2.apply(this,
arguments)||this;_this2.state={value:_this2.getValue()};_this2.onUpdate=function(newValue,changedBits){0!==((_this2.observedBits|0)&changedBits)&&_this2.setState({value:_this2.getValue()})};return _this2}_inheritsLoose__default["default"](Consumer,_Component2);var _proto2=Consumer.prototype;_proto2.componentWillReceiveProps=function(nextProps){nextProps=nextProps.observedBits;this.observedBits=void 0===nextProps||null===nextProps?1073741823:nextProps};_proto2.componentDidMount=function(){if(this.context[contextProp])this.context[contextProp].on(this.onUpdate);
var observedBits=this.props.observedBits;this.observedBits=void 0===observedBits||null===observedBits?1073741823:observedBits};_proto2.componentWillUnmount=function(){this.context[contextProp]&&this.context[contextProp].off(this.onUpdate)};_proto2.getValue=function(){return this.context[contextProp]?this.context[contextProp].get():defaultValue};_proto2.render=function(){var children=this.props.children;return(Array.isArray(children)?children[0]:children)(this.state.value)};return Consumer}(React.Component);
_Provider$childContex.contextTypes=(_Consumer$contextType={},_Consumer$contextType[contextProp]=PropTypes__default["default"].object,_Consumer$contextType);return{Provider,Consumer:_Provider$childContex}}var React=require("module$node_modules$react$index");exports=require("module$node_modules$$babel$runtime$helpers$inheritsLoose");var PropTypes=require("module$node_modules$prop_types$index");require=require("module$node_modules$tiny_warning$dist$tiny_warning_cjs");var React__default=_interopDefaultLegacy(React),
_inheritsLoose__default=_interopDefaultLegacy(exports),PropTypes__default=_interopDefaultLegacy(PropTypes),warning__default=_interopDefaultLegacy(require),commonjsGlobal="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof window?window:"undefined"!==typeof global?global:{};module.exports=React__default["default"].createContext||createReactContext}
//# sourceMappingURL=module$node_modules$mini_create_react_context$dist$cjs$index.js.map
