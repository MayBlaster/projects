{"version":3,"sources":["projects/components/login_view.cljs"],"mappings":";AAQA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAC,AAAOM;AAAP,AAAA,AAAAL,AAAA,AAAA,AAAAC,AAAAH,AAAAC;AAAA,AAAA;AACE,AAAAO,AAAwB,AAAA,AAAA,AAAA,AAAA,AAAA,AAACK;AAAzB,AAAAJ,AAAAD,AAAA,AAAA,AAAOG;AAAP,AAAAF,AAAAD,AAAA,AAAA,AAAaI;AAAbF,AAE0B,AAACM;AAF3B,AAAAP,AAAAC,AAAA,AAAA,AAEOI;AAFP,AAAAL,AAAAC,AAAA,AAAA,AAEiBK;AACXE,AAAY,AAAA,AAAcF;AAC1BG,AAAa,AAAA,AAAeH;AAC5BI,AAAK,AAAA,AAAOL;AALlB,AA8BK,AAAA,AAAAY,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAA,AAAA;AAAA,AAAAD;;AAAA,AAAAD;AApByB,AAAKP,AAoB9B,AAAA,AAAAM,AAAA,AAAA,AAAAI,AAAA,AAAA,AAQM,AAAA,AAAAJ,AAAA,AAAA;AA5BmB,AACE,AAAiBN;;AACjB,AAACC,AAAiBV,AAAMO,AAAaD;;AAkBhE,AAAAa;AAAA,AAAA,AAAAJ,AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAAL,AAAA,AAAA,AAAAM,AAAA,AAAA,AAAA;AAAA,AAAAA;AAZmC,AAAA,AAAWrB,AAY9C,AAAA,AAAA,AAAAe,AAAA,AAAA,AAAAO,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAV;AAXwC,AAAAF,AACC,AAAA,AAACC,AAAMZ,AAAgB,AAAA,AAAAa,AAUhE;AAXwC,AAAA,AAAAF,AAAAA,AAACV,AAAAA,AAAAA;;AAWzC,AAAAqB;AAAA,AAAA,AAAAP,AAAA,AAAA,AAAAS,AAAA,AAAA,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAAT,AAAA,AAAA,AAAAU,AAAA,AAAA,AAAA;AAAA,AAAAA;AAFmC,AAAA,AAAWzB,AAE9C,AAAA,AAAA,AAAAe,AAAA,AAAA,AAAAW,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI;AADwC,AAAAb,AACxC,AAAyC,AAAA,AAACF,AAAMZ,AAAgB,AAAA,AAAA2B;AADxB,AAAA,AAAAb,AAAAA,AAACb,AAAAA,AAAAA;;AACzC,AAAAyB;AAAA,AAAA,AAAAX,AAAA,AAAA,AAAAa,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAA,AAAAb,AAAA,AAAAc,AAAA,AAAA,AAMOC,AAAuCtB;AAN9C,AAAAqB;;;AA/BP,AAAA,AAAA,AAAApC;AAAA,AAAAC,AAAAN;AAAA,AAAA,AAAAO,AAAAD,AAAA,AAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOQ","names":["G__33095","props__26411__auto__","maybe-ref__26412__auto__","vec__33096","helix.core/extract-cljs-props","goog/DEBUG","G__33162","goog.object/set","projects.components.login-view/login-page","vec__33099","cljs.core.nth","vec__33102","state","set-state","helix.hooks/use-state","app-state","actions","projects.components.state/use-app-state","set-message","authenticate","user","e","projects.components.back-end/autheticate-user","G__33127","cljs.core.assoc","p1__33091#","G__33155","helix.core/get-react","obj33106","obj33108","helix.impl.props/->js","obj33110","obj33112","obj33122","obj33126","helix.impl.props/or-undefined","obj33131","obj33143","obj33154","p1__33092#","obj33159","obj33161","projects.components.buttons/login-project-buttons-component"],"sourcesContent":["(ns projects.components.login-view\n  (:require [helix.core :refer [defnc $]]\n            [helix.dom :as d]\n            [helix.hooks :as hooks]\n            [projects.components.back-end :refer [autheticate-user]]\n            [projects.components.state :refer [use-app-state]]\n            [projects.components.buttons :refer [login-project-buttons-component]]))\n\n(defnc login-page []\n  (let [[state set-state] (hooks/use-state {:username \"\"\n                                            :password \"\"})\n        [app-state actions] (use-app-state)\n        set-message (:set-message actions)\n        authenticate (:authenticate actions)\n        user (:user app-state)]\n\n    (d/div {:style {:text-align \"center\"\n                    :margin-top \"20px\"}}\n           (d/div\n            (d/form {:on-submit (fn [e]\n                                  (.preventDefault e)\n                                  (autheticate-user state authenticate set-message))}\n                    (d/p {:key 0}\n                         (d/label {:for \"username\"}\n                                  \"Username: \")\n                         (d/input {:class '[shadow border rounded py-2 px-3 mb-3]\n                                   :id \"username\"\n                                   :value (:username state)\n                                   :on-change #(set-state\n                                                (assoc state :username (.. %\n                                                                           -target\n                                                                           -value)))}))\n                    (d/p {:key 1}\n                         (d/label {:for \"password\"}\n                                  \"Password: \")\n                         (d/input {:class '[shadow border rounded py-2 px-3 mb-3]\n                                   :id \"password\"\n                                   :value (:password state)\n                                   :on-change #(set-state\n                                                (assoc state :password (.. %\n                                                                           -target\n                                                                           -value)))}))\n                    (d/button {:class '[bg-green-500 text-white px-1 py-1 rounded mb-2 mt-2]\n                               :type \"submit\"}\n                              \"Authenticate\")))\n           ($ login-project-buttons-component {:user user}))))\n"]}