{"version":3,"sources":["projects/router.cljs"],"mappings":";;AAaA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAC,AAAOM;AAAP,AAAA,AAAAL,AAAA,AAAA,AAAAC,AAAAH,AAAAC;AAAA,AAAA;AACE,AAAAO,AAAoB,AAACI;AAArB,AAAAH,AAAAD,AAAA,AAAA,AAAOE;AAAP,AAAAD,AAAAD,AAAA,AAAA,AAAiBG;AAAjB,AACKE,AAEIC,AACAC,AACGC,AAoBP,AAAA,AAAAO,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAAA,AAAAQ,AAAA,AAAA,AAAA,AAAAR,AAAA,AAAA,AAAA,AAAAA,AAAA;AARN,AAAAC;AAnBUP,AACHD,AAkBP,AAAA,AAAAO,AAAA,AAAAE,AAAA,AAAA,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAF,AAAA;AARN,AAAAE;AAjBUP,AACHF,AAgBP,AAAA,AAAAO,AAAA,AAAAG,AAAA,AAAA,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAH,AAAA;AARN,AAAAG;AAfUP,AACHH,AAcP,AAAA,AAAAO,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAJ,AAAA;AARN,AAAAI;AAbUP,AACHJ,AAYP,AAAA,AAAAO,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAL,AAAA;AARN,AAAAK;AAXUP,AACHL,AAUP,AAAA,AAAAO,AAAA,AAAAM,AAAA,AAAA,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAN,AAAA;AARN,AAAAM;AATO,AAAI,AAAA,AAAOnB,AACNY,AAELN,AAMP,AAAA,AAAAO,AAAA,AAAAO,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAP,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA;AARN,AAAAO;AAQM,AAAA,AAAAP,AAAA,AAAA,AAAA;;AAlCb,AAAA,AAAA,AAAAnB;AAAA,AAAAC,AAAAN;AAAA,AAAA,AAAAO,AAAAD,AAAA,AAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOQ","names":["G__28172","props__26411__auto__","maybe-ref__26412__auto__","vec__28173","helix.core/extract-cljs-props","goog/DEBUG","G__28193","goog.object/set","projects.router/routes","vec__28176","cljs.core.nth","app-state","_","projects.components.state/use-app-state","js/module$node_modules$react_router_dom$index.BrowserRouter","projects.components.nav/nav","js/module$node_modules$react_router_dom$index.Switch","js/module$node_modules$react_router_dom$index.Route","projects.components.register-view/register","projects.components.user-view/view-user","projects.components.edit-user-view/edit-user","projects.components.login-view/login-page","projects.components.home-view/home-page","projects.components.projects-view/projects","helix.core/get-react","obj28180","obj28182","obj28184","obj28186","obj28188","obj28190","obj28192","helix.core/Fragment"],"sourcesContent":["(ns projects.router\n  (:require [\"react-router-dom\" :as rr]\n            [helix.core :refer [defnc $ <>]]\n            [helix.dom :as d]\n            [projects.components.nav :refer [nav]]\n            [projects.components.state :refer [use-app-state]]\n            [projects.components.home-view :refer [home-page]]\n            [projects.components.login-view :refer [login-page]]\n            [projects.components.projects-view :refer [projects]]\n            [projects.components.user-view :refer [view-user]]\n            [projects.components.register-view :refer [register]]\n            [projects.components.edit-user-view :refer [edit-user]]))\n\n(defnc routes []\n  (let [[app-state _] (use-app-state)]\n    ($ rr/BrowserRouter\n       (<>\n        ($ nav)\n        ($ rr/Switch\n           ($ rr/Route {:path \"/register\" :exact true}\n              ($ register))\n           ($ rr/Route {:path \"/user/:id\" :exact true}\n              ($ view-user))\n           ($ rr/Route {:path \"/user/:id/edit\" :exact true}\n              ($ edit-user))\n           ($ rr/Route {:path \"/login\" :exact true}\n              ($ login-page))\n           ($ rr/Route {:path \"/\" :exact true}\n              ($ home-page))\n           ($ rr/Route {:path \"/projects\" :exact true}\n              (if (:user app-state)\n                ($ projects)\n                (d/div)))\n           ($ rr/Route {:path \"/dummy\"}\n              (d/h1 \"dummy\")))))))"]}