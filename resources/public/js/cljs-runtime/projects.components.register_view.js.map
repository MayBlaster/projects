{"version":3,"sources":["projects/components/register_view.cljs"],"mappings":";AAQA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAC,AAAOM;AAAP,AAAA,AAAAL,AAAA,AAAA,AAAAC,AAAAH,AAAAC;AAAA,AAAA;AACE,AAAAO,AAAwB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACK;AAAzB,AAAAJ,AAAAD,AAAA,AAAA,AAAOG;AAAP,AAAAF,AAAAD,AAAA,AAAA,AAAaI;AAAbF,AAG0B,AAACM;AAH3B,AAAAP,AAAAC,AAAA,AAAA,AAGOI;AAHP,AAAAL,AAAAC,AAAA,AAAA,AAGiBK;AACXE,AAAY,AAAA,AAAcF;AAC1BG,AAAK,AAAA,AAAOJ;AALlB,AA8BK,AAAA,AAAAY,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA;AAAA,AAAAA;AAvBwB,AAAKR,AAuB7B,AAAA,AAAAO,AAAA,AAAA,AAAAE,AAAA,AAAA;AAvBwB,AACE,AAAiBT;;AACjB,AAACC,AAAcT,AAAMM;;AAqB/C,AAAAW;AAAA,AAAA,AAAAF,AAAA,AAAA,AAAAG,AAAA,AAAA,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAD;;AAAA,AAAAD;AAdkC,AAAA,AAAWnB,AAc7C,AAAA,AAAA,AAAAe,AAAA,AAAA,AAAAO,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAX;AAbuC,AAAAF,AAAW,AAAA,AAACC,AAAMX,AAAgB,AAAA,AAAAY,AAazE;AAbuC,AAAA,AAAAF,AAAAA,AAACT,AAAAA,AAAAA;;AAaxC,AAAAqB;AAAA,AAAA,AAAAP,AAAA,AAAA,AAAAS,AAAA,AAAA,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAAT,AAAA,AAAA,AAAAU,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAL,AAAA;AAAA,AAAAK;;AAAA,AAAAD;AAJkC,AAAA,AAAWzB,AAI7C,AAAA,AAAA,AAAAe,AAAA,AAAA,AAAAY,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAJ,AAAA,AAAA,AAAAT;AAHuC,AAAAD,AAAW,AAAA,AAACF,AAAMX,AAAgB,AAAA,AAAAc,AAGzE;AAHuC,AAAA,AAAAD,AAAAA,AAACZ,AAAAA,AAAAA;;AAGxC,AAAA0B;AAAA,AAAA,AAAAZ,AAAA,AAAA,AAAAa,AAAA,AAAA,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAAb,AAAA,AAAA,AAAAc,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAT,AAAA;AAAA,AAAAS;;AAAA,AAAAD;AAAA,AAAA,AAAA,AAAAd,AAAA,AAAA,AAAAgB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAR,AAAA,AAAA,AAAAS,AAMkC,AAAA,AAAQhC;AAN1C,AAOuC,AAAAmC,AAAW,AAAA,AAACxB,AAAMX,AAAa,AAAA,AAAAgC;AAA/B,AAAA,AAAAG,AAAAA,AAAClC,AAAAA,AAAAA;;AAPxC,AAAA8B;AAAA,AAAA,AAAAhB,AAAA,AAAA,AAAAkB,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAA,AAAAlB,AAAA,AAAAmB,AAAA,AAAA,AAaOE,AAAuC7B;AAb9C,AAAA2B;;;AA/BP,AAAA,AAAA,AAAAzC;AAAA,AAAAC,AAAAN;AAAA,AAAA,AAAAO,AAAAD,AAAA,AAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOQ","names":["G__33197","props__26411__auto__","maybe-ref__26412__auto__","vec__33198","helix.core/extract-cljs-props","goog/DEBUG","G__33275","goog.object/set","projects.components.register-view/register","vec__33201","cljs.core.nth","vec__33204","state","set-state","helix.hooks/use-state","app-state","actions","projects.components.state/use-app-state","set-message","user","e","projects.components.back-end/register-user","G__33238","cljs.core.assoc","p1__33192#","G__33249","p1__33193#","helix.core/get-react","obj33208","obj33212","obj33214","obj33216","obj33218","helix.impl.props/->js","obj33237","helix.impl.props/or-undefined","obj33240","obj33244","obj33246","obj33248","obj33257","obj33259","obj33261","obj33265","p1__33194#","obj33271","obj33274","G__33266","projects.components.buttons/login-project-buttons-component"],"sourcesContent":["(ns projects.components.register-view\n  (:require [helix.core :refer [defnc $]]\n            [helix.dom :as d]\n            [helix.hooks :as hooks]\n            [projects.components.back-end :refer [register-user]]\n            [projects.components.state :refer [use-app-state]]\n            [projects.components.buttons :refer [login-project-buttons-component]]))\n\n(defnc register []\n  (let [[state set-state] (hooks/use-state {:username \"\"\n                                            :password \"\"\n                                            :email \"\"})\n        [app-state actions] (use-app-state)\n        set-message (:set-message actions)\n        user (:user app-state)]\n    (d/div {:class \"container pt-4\"}\n           (d/form {:on-submit (fn [e]\n                                 (.preventDefault e)\n                                 (register-user state set-message))}\n                   (d/p {:key 0}\n                        (d/label {:for \"username\"\n                                  :style {:margin-right \"20px\"}}\n                                 \"Username: \")\n                        (d/input {:class '[shadow border rounded py-2 px-3 mb-3]\n                                  :id \"username\"\n                                  :value (:username state)\n                                  :on-change #(set-state (assoc state :username (.. %\n                                                                                    -target\n                                                                                    -value)))}))\n                   (d/p {:key 1}\n                        (d/label {:for \"password\"\n                                  :style {:margin-right \"20px\"}}\n                                 \"Password: \")\n                        (d/input {:class '[shadow border rounded py-2 px-3 mb-3]\n                                  :id \"password\"\n                                  :value (:password state)\n                                  :on-change #(set-state (assoc state :password (.. %\n                                                                                    -target\n                                                                                    -value)))}))\n                   (d/p {:key 2}\n                        (d/label {:for \"email\"\n                                  :style {:margin-right \"20px\"}}\n                                 \"Email: \")\n                        (d/input {:class '[shadow border rounded py-2 px-3 mb-3]\n                                  :id \"email\"\n                                  :value (:email state)\n                                  :on-change #(set-state (assoc state :email (.. %\n                                                                                 -target\n                                                                                 -value)))}))\n                   (d/button {:class '[bg-green-500 text-white px-1 py-1 rounded mb-2 mt-2]\n                              :type \"submit\"}\n                             \"Submit\"))\n           ($ login-project-buttons-component {:user user}))))"]}