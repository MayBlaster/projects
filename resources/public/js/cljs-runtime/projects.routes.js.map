{"version":3,"sources":["projects/routes.cljs"],"mappings":";;AAQA,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAC,AAAOM;AAAP,AAAA,AAAAL,AAAA,AAAA,AAAAC,AAAAH,AAAAC;AAAA,AAAA;AACE,AAAAO,AAAoBI;AAApB,AAAAH,AAAAD,AAAA,AAAA,AAAOE;AAAP,AAAAD,AAAAD,AAAA,AAAA,AAAiBG;AAAjB,AACKE,AAEIC,AACAC,AACGC,AAyBP,AAAA,AAAAO,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAAA,AAAAQ,AAAA,AAAA,AAAA,AAAAR,AAAA,AAAA,AAAA,AAAAA,AAAA;AARN,AAAAC;AAxBUP,AACHD,AAuBP,AAAA,AAAAO,AAAA,AAAAE,AAAA,AAAA,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAF,AAAA;AARN,AAAAE;AAtBUP,AACHF,AAqBP,AAAA,AAAAO,AAAA,AAAAG,AAAA,AAAA,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAH,AAAA;AARN,AAAAG;AApBUP,AACHH,AAmBP,AAAA,AAAAO,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAJ,AAAA;AARN,AAAAI;AAlBUP,AACHJ,AAiBP,AAAA,AAAAO,AAAA,AAAAK,AAAA,AAAA,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAL,AAAA;AARN,AAAAK;AAhBUP,AACHL,AAeP,AAAA,AAAAO,AAAA,AAAAM,AAAA,AAAA,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAN,AAAA;AARN,AAAAM;AAdO,AAAA,AAAI,AAAA,AAAOnB,AACNY,AACLN,AAYP,AAAA,AAAAO,AAAA,AAAAO,AAAA,AAAA,AAAA,AAQM,AAAA,AAAAP,AAAA;AARN,AAAAO;AAQM,AAAA,AAAAP,AAAA,AAAA,AAAA;;AAvCb,AAAA,AAAA,AAAAnB;AAAA,AAAAC,AAAAN;AAAA,AAAA,AAAAO,AAAAD,AAAA,AAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOQ","names":["G__28143","props__26411__auto__","maybe-ref__26412__auto__","vec__28144","helix.core/extract-cljs-props","goog/DEBUG","G__28164","goog.object/set","projects.routes/route","vec__28147","cljs.core.nth","app-state","_","projects.components.state/use-app-state","js/module$node_modules$react_router_dom$index.BrowserRouter","projects.components.nav/nav","js/module$node_modules$react_router_dom$index.Switch","js/module$node_modules$react_router_dom$index.Route","projects.components.temp/register","projects.components.temp/view-user","projects.components.temp/edit-user","projects.components.temp/login-page","projects.components.temp/home-page","projects.components.temp/projects","helix.core/get-react","obj28151","obj28153","obj28155","obj28157","obj28159","obj28161","obj28163","helix.core/Fragment"],"sourcesContent":["(ns projects.routes\n  (:require [\"react-router-dom\" :as rr]\n            [projects.components.temp :as c]\n            [helix.core :refer [defnc $ <>]]\n            [helix.dom :as d]\n            [projects.components.nav :refer [nav]]\n            [projects.components.state :refer [use-app-state]]))\n\n(defnc route []\n  (let [[app-state _] use-app-state]\n    ($ rr/BrowserRouter\n       (<>\n        ($ nav)\n        ($ rr/Switch\n           ($ rr/Route {:path \"/register\" :exact true}\n              ($ c/register))\n           ($ rr/Route {:path \"/user/:id\" :exact true}\n              ($ c/view-user))\n           ($ rr/Route {:path \"/user/:id/edit\" :exact true}\n              ($ c/edit-user))\n           ($ rr/Route {:path \"/login\" :exact true}\n              ($ c/login-page))\n           ($ rr/Route {:path \"/\" :exact true}\n              ($ c/home-page))\n           ($ rr/Route {:path \"/projects\" :exact true}\n              (if (:user app-state)\n                ($ c/projects)))\n           ($ rr/Route {:path \"/dummy\"}\n              (d/h1 \"dummy\")))))))"]}