{"version":3,"sources":["projects/components/nav.cljs"],"mappings":"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","names":["G__29419","props__26411__auto__","maybe-ref__26412__auto__","vec__29420","helix.core/extract-cljs-props","map__29423","cljs.core.nth","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","goog/DEBUG","G__29429","goog.object/set","projects.components.nav/alert-success","action","message","js/setTimeout","G__29432","vec__29433","map__29436","G__29442","projects.components.nav/alert-danger","G__29445","vec__29446","G__29490","projects.components.nav/nav","vec__29449","app-state","actions","projects.components.state/use-app-state","user","set-message","sign-out","helix.core/get-react","obj29426","obj29428","helix.impl.props/->js","obj29439","obj29441","obj29453","obj29455","obj29457","obj29459","obj29461","obj29463","obj29465","obj29467","obj29469","obj29471","obj29473","obj29475","obj29477","obj29479","obj29481","obj29483","obj29485","obj29487","obj29489","js/module$node_modules$react_router_dom$index.NavLink","_","cljs.core._EQ_"],"sourcesContent":["(ns projects.components.nav\n  (:require [helix.core :refer [defnc $]]\n            [helix.dom :as d]\n            [\"react-router-dom\" :as rr]\n            [projects.components.state :refer [use-app-state]]))\n\n(defnc alert-success [{:keys [action message]}]\n  (js/setTimeout #(action nil) 3000)\n  (d/div {:class '[alert alert-success]\n          :style {:float \"right\"\n                  :width \"60%\"}}\n         (d/strong \"Success! \") message))\n\n(defnc alert-danger [{:keys [action message]}]\n  (js/setTimeout #(action nil) 3000)\n  (d/div {:class '[alert alert-danger]\n          :style {:float \"right\"\n                  :width \"60%\"}}\n         (d/strong \"Fail! \") message))\n\n(defnc nav\n  []\n  (let [[app-state actions] (use-app-state)\n        user (:user app-state)\n        set-message (:set-message actions)\n        message (:message app-state)\n        sign-out (:sign-out actions)]\n    (d/nav {:class \"py-4 shadow\"\n          :style {:overflow \"hidden\"}}\n         \n         (d/div {:class \"container-fluid pt-4\"\n                 :style {:width \"95%\"\n                         :margin-left \"5%\"\n                         :margin-right \"1%\"}}\n                (d/div {:style {:width \"40%\"\n                                :float \"left\"}}\n                       (d/h2 {:class \"text-xl\"}\n                             \"Projects\")\n                       (if user\n                         (d/div\n                          (d/h2 {:class \"py-1\"\n                                 :style {:display \"inline-block\"\n                                         :margin-right \"10px\"}}\n                                \"Anv\u00e4ndare: \" (d/strong (:username user)))\n                          ($ rr/NavLink {:to (str \"/user/\" (:username user))}\n                             (d/button {:class '[bg-green-500 text-white px-1 py-1 rounded]\n                                        :style {:display \"inline-block\"\n                                                :margin-right \"10px\"}}\n                                       \"Edit user\"))\n                          ($ rr/NavLink {:to (str \"/\")}\n                             (d/button {:class '[bg-green-500 text-white px-1 py-1 rounded]\n                                        :style {:display \"inline-block\"}\n                                        :on-click (fn [_]\n                                                    (sign-out))}\n                                       \"Sign out\")))\n                         (d/div\n                          (d/h2 {:class \"py-1\"\n                                 :style {:display \"inline-block\"\n                                         :margin-right \"10px\"}}\n                                \"Ej Inloggad\"))))\n                \n                (cond\n                  (nil? (:status message)) (d/div)\n                  (= true (:status message)) ($ alert-success {:action set-message\n                                                               :message (:message message)}) \n                  (= false (:status message)) ($ alert-danger {:action set-message\n                                                               :message (:message message)}))))))"]}