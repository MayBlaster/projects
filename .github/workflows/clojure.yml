name: Clojure CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Prepare java
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Install clojure tools
      uses: DeLaGuardo/setup-clojure@3.4
      with:
        # Install just one or all simultaneously
        cli: 1.10.1.693     # Clojure CLI based on tools.deps
        lein: 2.9.1     # or use 'latest' to always provision latest version of leiningen
        boot: 2.8.3     # or use 'latest' to always provision latest version of boot
    
    - name: Run tests
      run: clojure -A:test
    - name: Build backend
      run: clojure -A:package -m projects.package
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: .
        file: backend.dockerfile
        tags: denniskaranda/projects-backend:latest
        
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
  
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: .
        file: frontend.dockerfile
        tags: denniskaranda/projects-frontend:latest
        
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
