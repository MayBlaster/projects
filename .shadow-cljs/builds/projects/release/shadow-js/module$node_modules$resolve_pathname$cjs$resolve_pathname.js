["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/resolve-pathname/cjs/resolve-pathname.js"],"~:js","shadow$provide[22]=function(J,D,P,l){function H(p,x){for(var K=x+1,C=p.length;K<C;x+=1,K+=1)p[x]=p[K];p.pop()}P.exports=function(p,x){void 0===x&&(x=\"\");var K=p&&p.split(\"/\")||[],C=x&&x.split(\"/\")||[],L=p&&\"/\"===p.charAt(0);x=x&&\"/\"===x.charAt(0);L=L||x;p&&\"/\"===p.charAt(0)?C=K:K.length&&(C.pop(),C=C.concat(K));if(!C.length)return\"/\";C.length?(p=C[C.length-1],p=\".\"===p||\"..\"===p||\"\"===p):p=!1;K=0;for(x=C.length;0<=x;x--){var U=C[x];\".\"===U?H(C,x):\"..\"===U?(H(C,x),K++):K&&(H(C,x),K--)}if(!L)for(;K--;K)C.unshift(\"..\");\n!L||\"\"===C[0]||C[0]&&\"/\"===C[0].charAt(0)||C.unshift(\"\");C=C.join(\"/\");p&&\"/\"!==C.substr(-1)&&(C+=\"/\");return C}}","~:source","shadow$provide[22] = function(global,require,module,exports) {\n'use strict';\n\nfunction isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n\n  var toParts = (to && to.split('/')) || [];\n  var fromParts = (from && from.split('/')) || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');\n\n  if (\n    mustEndAbs &&\n    fromParts[0] !== '' &&\n    (!fromParts[0] || !isAbsolute(fromParts[0]))\n  )\n    fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\nmodule.exports = resolvePathname;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1623701842683,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$resolve_pathname$cjs$resolve_pathname.js\",\n\"lineCount\":2,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/resolve-pathname/cjs/resolve-pathname.js\"],\n\"sourcesContent\":[\"shadow$provide[22] = function(global,require,module,exports) {\\n'use strict';\\n\\nfunction isAbsolute(pathname) {\\n  return pathname.charAt(0) === '/';\\n}\\n\\n// About 1.5x faster than the two-arg version of Array#splice()\\nfunction spliceOne(list, index) {\\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\\n    list[i] = list[k];\\n  }\\n\\n  list.pop();\\n}\\n\\n// This implementation is based heavily on node's url.parse\\nfunction resolvePathname(to, from) {\\n  if (from === undefined) from = '';\\n\\n  var toParts = (to && to.split('/')) || [];\\n  var fromParts = (from && from.split('/')) || [];\\n\\n  var isToAbs = to && isAbsolute(to);\\n  var isFromAbs = from && isAbsolute(from);\\n  var mustEndAbs = isToAbs || isFromAbs;\\n\\n  if (to && isAbsolute(to)) {\\n    // to is absolute\\n    fromParts = toParts;\\n  } else if (toParts.length) {\\n    // to is relative, drop the filename\\n    fromParts.pop();\\n    fromParts = fromParts.concat(toParts);\\n  }\\n\\n  if (!fromParts.length) return '/';\\n\\n  var hasTrailingSlash;\\n  if (fromParts.length) {\\n    var last = fromParts[fromParts.length - 1];\\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\\n  } else {\\n    hasTrailingSlash = false;\\n  }\\n\\n  var up = 0;\\n  for (var i = fromParts.length; i >= 0; i--) {\\n    var part = fromParts[i];\\n\\n    if (part === '.') {\\n      spliceOne(fromParts, i);\\n    } else if (part === '..') {\\n      spliceOne(fromParts, i);\\n      up++;\\n    } else if (up) {\\n      spliceOne(fromParts, i);\\n      up--;\\n    }\\n  }\\n\\n  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');\\n\\n  if (\\n    mustEndAbs &&\\n    fromParts[0] !== '' &&\\n    (!fromParts[0] || !isAbsolute(fromParts[0]))\\n  )\\n    fromParts.unshift('');\\n\\n  var result = fromParts.join('/');\\n\\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\\n\\n  return result;\\n}\\n\\nmodule.exports = resolvePathname;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"spliceOne\",\"list\",\"index\",\"k\",\"i\",\"n\",\"length\",\"pop\",\"resolvePathname\",\"to\",\"from\",\"undefined\",\"toParts\",\"split\",\"fromParts\",\"isToAbs\",\"charAt\",\"isFromAbs\",\"mustEndAbs\",\"concat\",\"last\",\"hasTrailingSlash\",\"up\",\"part\",\"unshift\",\"pathname\",\"result\",\"join\",\"substr\"]\n}\n"]