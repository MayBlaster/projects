["^ ","~:output",["^ ","~:js","goog.provide('promesa.exec');\nif((typeof promesa !== 'undefined') && (typeof promesa.exec !== 'undefined') && (typeof promesa.exec.default_scheduler !== 'undefined')){\n} else {\npromesa.exec.default_scheduler = (new cljs.core.Delay((function (){\nreturn (promesa.exec.__GT_ScheduledExecutor.cljs$core$IFn$_invoke$arity$0 ? promesa.exec.__GT_ScheduledExecutor.cljs$core$IFn$_invoke$arity$0() : promesa.exec.__GT_ScheduledExecutor.call(null));\n}),null));\n}\nif((typeof promesa !== 'undefined') && (typeof promesa.exec !== 'undefined') && (typeof promesa.exec.default_executor !== 'undefined')){\n} else {\npromesa.exec.default_executor = (new cljs.core.Delay((function (){\nreturn (promesa.exec.__GT_MicrotaskExecutor.cljs$core$IFn$_invoke$arity$0 ? promesa.exec.__GT_MicrotaskExecutor.cljs$core$IFn$_invoke$arity$0() : promesa.exec.__GT_MicrotaskExecutor.call(null));\n}),null));\n}\nif((typeof promesa !== 'undefined') && (typeof promesa.exec !== 'undefined') && (typeof promesa.exec.current_thread_executor !== 'undefined')){\n} else {\npromesa.exec.current_thread_executor = (new cljs.core.Delay((function (){\nreturn (promesa.exec.__GT_CurrentThreadExecutor.cljs$core$IFn$_invoke$arity$0 ? promesa.exec.__GT_CurrentThreadExecutor.cljs$core$IFn$_invoke$arity$0() : promesa.exec.__GT_CurrentThreadExecutor.call(null));\n}),null));\n}\npromesa.exec.resolve_executor = (function promesa$exec$resolve_executor(var_args){\nvar G__27266 = arguments.length;\nswitch (G__27266) {\ncase 0:\nreturn promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$0 = (function (){\nif(cljs.core.delay_QMARK_(promesa.exec.default_executor)){\nreturn cljs.core.deref(promesa.exec.default_executor);\n} else {\nreturn promesa.exec.default_executor;\n}\n}));\n\n(promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$1 = (function (executor){\nif(cljs.core.delay_QMARK_(executor)){\nreturn cljs.core.deref(executor);\n} else {\nreturn executor;\n}\n}));\n\n(promesa.exec.resolve_executor.cljs$lang$maxFixedArity = 1);\n\npromesa.exec.resolve_scheduler = (function promesa$exec$resolve_scheduler(var_args){\nvar G__27270 = arguments.length;\nswitch (G__27270) {\ncase 0:\nreturn promesa.exec.resolve_scheduler.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn promesa.exec.resolve_scheduler.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(promesa.exec.resolve_scheduler.cljs$core$IFn$_invoke$arity$0 = (function (){\nif(cljs.core.delay_QMARK_(promesa.exec.default_scheduler)){\nreturn cljs.core.deref(promesa.exec.default_scheduler);\n} else {\nreturn promesa.exec.default_scheduler;\n}\n}));\n\n(promesa.exec.resolve_scheduler.cljs$core$IFn$_invoke$arity$1 = (function (scheduler){\nif(cljs.core.delay_QMARK_(scheduler)){\nreturn cljs.core.deref(scheduler);\n} else {\nreturn scheduler;\n}\n}));\n\n(promesa.exec.resolve_scheduler.cljs$lang$maxFixedArity = 1);\n\n/**\n * Run the task in the provided executor.\n */\npromesa.exec.run_BANG_ = (function promesa$exec$run_BANG_(var_args){\nvar G__27273 = arguments.length;\nswitch (G__27273) {\ncase 1:\nreturn promesa.exec.run_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn promesa.exec.run_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(promesa.exec.run_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (task){\nreturn promesa.protocols._run_BANG_(promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$0(),task);\n}));\n\n(promesa.exec.run_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (executor,task){\nreturn promesa.protocols._run_BANG_(promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$1(executor),task);\n}));\n\n(promesa.exec.run_BANG_.cljs$lang$maxFixedArity = 2);\n\n/**\n * Submit a task to be executed in a provided executor\n *   and return a promise that will be completed with\n *   the return value of a task.\n * \n *   A task is a plain clojure function.\n */\npromesa.exec.submit_BANG_ = (function promesa$exec$submit_BANG_(var_args){\nvar G__27275 = arguments.length;\nswitch (G__27275) {\ncase 1:\nreturn promesa.exec.submit_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn promesa.exec.submit_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(promesa.exec.submit_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (task){\nreturn promesa.protocols._submit_BANG_(promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$0(),task);\n}));\n\n(promesa.exec.submit_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (executor,task){\nreturn promesa.protocols._submit_BANG_(promesa.exec.resolve_executor.cljs$core$IFn$_invoke$arity$1(executor),task);\n}));\n\n(promesa.exec.submit_BANG_.cljs$lang$maxFixedArity = 2);\n\n/**\n * Schedule a callable to be executed after the `ms` delay\n *   is reached.\n * \n *   In JVM it uses a scheduled executor service and in JS\n *   it uses the `setTimeout` function.\n */\npromesa.exec.schedule_BANG_ = (function promesa$exec$schedule_BANG_(var_args){\nvar G__27279 = arguments.length;\nswitch (G__27279) {\ncase 2:\nreturn promesa.exec.schedule_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn promesa.exec.schedule_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(promesa.exec.schedule_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (ms,task){\nreturn promesa.protocols._schedule_BANG_(promesa.exec.resolve_scheduler.cljs$core$IFn$_invoke$arity$0(),ms,task);\n}));\n\n(promesa.exec.schedule_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (scheduler,ms,task){\nreturn promesa.protocols._schedule_BANG_(promesa.exec.resolve_scheduler.cljs$core$IFn$_invoke$arity$1(scheduler),ms,task);\n}));\n\n(promesa.exec.schedule_BANG_.cljs$lang$maxFixedArity = 3);\n\n\n/**\n* @constructor\n * @implements {promesa.protocols.IExecutor}\n*/\npromesa.exec.MicrotaskExecutor = (function (){\n});\n(promesa.exec.MicrotaskExecutor.prototype.promesa$protocols$IExecutor$ = cljs.core.PROTOCOL_SENTINEL);\n\n(promesa.exec.MicrotaskExecutor.prototype.promesa$protocols$IExecutor$_run_BANG_$arity$2 = (function (this$,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn promesa.protocols._mapErr(promesa.protocols._map(promesa.protocols._promise(null),(function (_){\n(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n\nreturn null;\n})),(function (e){\nsetTimeout((function (){\nthrow e;\n}));\n\nreturn null;\n}));\n}));\n\n(promesa.exec.MicrotaskExecutor.prototype.promesa$protocols$IExecutor$_submit_BANG_$arity$2 = (function (this$,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn promesa.protocols._mapErr(promesa.protocols._map(promesa.protocols._promise(null),(function (_){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n})),(function (e){\nsetTimeout((function (){\nthrow e;\n}));\n\nreturn null;\n}));\n}));\n\n(promesa.exec.MicrotaskExecutor.getBasis = (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(promesa.exec.MicrotaskExecutor.cljs$lang$type = true);\n\n(promesa.exec.MicrotaskExecutor.cljs$lang$ctorStr = \"promesa.exec/MicrotaskExecutor\");\n\n(promesa.exec.MicrotaskExecutor.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"promesa.exec/MicrotaskExecutor\");\n}));\n\n/**\n * Positional factory function for promesa.exec/MicrotaskExecutor.\n */\npromesa.exec.__GT_MicrotaskExecutor = (function promesa$exec$__GT_MicrotaskExecutor(){\nreturn (new promesa.exec.MicrotaskExecutor());\n});\n\n\n/**\n* @constructor\n * @implements {promesa.protocols.IExecutor}\n*/\npromesa.exec.CurrentThreadExecutor = (function (){\n});\n(promesa.exec.CurrentThreadExecutor.prototype.promesa$protocols$IExecutor$ = cljs.core.PROTOCOL_SENTINEL);\n\n(promesa.exec.CurrentThreadExecutor.prototype.promesa$protocols$IExecutor$_run_BANG_$arity$2 = (function (this$,f){\nvar self__ = this;\nvar this$__$1 = this;\n(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n\nreturn promesa.protocols._promise(null);\n}));\n\n(promesa.exec.CurrentThreadExecutor.prototype.promesa$protocols$IExecutor$_submit_BANG_$arity$2 = (function (this$,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn promesa.protocols._promise((f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)));\n}));\n\n(promesa.exec.CurrentThreadExecutor.getBasis = (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(promesa.exec.CurrentThreadExecutor.cljs$lang$type = true);\n\n(promesa.exec.CurrentThreadExecutor.cljs$lang$ctorStr = \"promesa.exec/CurrentThreadExecutor\");\n\n(promesa.exec.CurrentThreadExecutor.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"promesa.exec/CurrentThreadExecutor\");\n}));\n\n/**\n * Positional factory function for promesa.exec/CurrentThreadExecutor.\n */\npromesa.exec.__GT_CurrentThreadExecutor = (function promesa$exec$__GT_CurrentThreadExecutor(){\nreturn (new promesa.exec.CurrentThreadExecutor());\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IPending}\n * @implements {promesa.protocols.ICancellable}\n*/\npromesa.exec.ScheduledTask = (function (state){\nthis.state = state;\nthis.cljs$lang$protocol_mask$partition1$ = 1;\nthis.cljs$lang$protocol_mask$partition0$ = 0;\n});\n(promesa.exec.ScheduledTask.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nvar done_iref = goog.object.get(self__.state,\"done\");\nreturn cljs.core.deref(done_iref);\n}));\n\n(promesa.exec.ScheduledTask.prototype.promesa$protocols$ICancellable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(promesa.exec.ScheduledTask.prototype.promesa$protocols$ICancellable$_cancelled_QMARK_$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn goog.object.get(self__.state,\"cancelled\");\n}));\n\n(promesa.exec.ScheduledTask.prototype.promesa$protocols$ICancellable$_cancel_BANG_$arity$1 = (function (self){\nvar self__ = this;\nvar self__$1 = this;\nif(cljs.core.truth_(self__$1.promesa$protocols$ICancellable$_cancelled_QMARK_$arity$1(null))){\nreturn null;\n} else {\nvar cancel_fn = goog.object.get(self__.state,\"cancel-fn\");\ngoog.object.set(self__.state,\"cancelled\",true);\n\nreturn (cancel_fn.cljs$core$IFn$_invoke$arity$0 ? cancel_fn.cljs$core$IFn$_invoke$arity$0() : cancel_fn.call(null));\n}\n}));\n\n(promesa.exec.ScheduledTask.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null)], null);\n}));\n\n(promesa.exec.ScheduledTask.cljs$lang$type = true);\n\n(promesa.exec.ScheduledTask.cljs$lang$ctorStr = \"promesa.exec/ScheduledTask\");\n\n(promesa.exec.ScheduledTask.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"promesa.exec/ScheduledTask\");\n}));\n\n/**\n * Positional factory function for promesa.exec/ScheduledTask.\n */\npromesa.exec.__GT_ScheduledTask = (function promesa$exec$__GT_ScheduledTask(state){\nreturn (new promesa.exec.ScheduledTask(state));\n});\n\n\n/**\n* @constructor\n * @implements {promesa.protocols.IScheduler}\n*/\npromesa.exec.ScheduledExecutor = (function (){\n});\n(promesa.exec.ScheduledExecutor.prototype.promesa$protocols$IScheduler$ = cljs.core.PROTOCOL_SENTINEL);\n\n(promesa.exec.ScheduledExecutor.prototype.promesa$protocols$IScheduler$_schedule_BANG_$arity$3 = (function (_,ms,f){\nvar self__ = this;\nvar ___$1 = this;\nvar done = cljs.core.volatile_BANG_(false);\nvar task = (function (){\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {cljs.core.vreset_BANG_(done,true);\n}});\nvar tid = setTimeout(task,ms);\nvar cancel = (function (){\nreturn clearTimeout(tid);\n});\nreturn promesa.exec.__GT_ScheduledTask(({\"done\": done, \"cancelled\": false, \"cancel-fn\": cancel}));\n}));\n\n(promesa.exec.ScheduledExecutor.getBasis = (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(promesa.exec.ScheduledExecutor.cljs$lang$type = true);\n\n(promesa.exec.ScheduledExecutor.cljs$lang$ctorStr = \"promesa.exec/ScheduledExecutor\");\n\n(promesa.exec.ScheduledExecutor.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"promesa.exec/ScheduledExecutor\");\n}));\n\n/**\n * Positional factory function for promesa.exec/ScheduledExecutor.\n */\npromesa.exec.__GT_ScheduledExecutor = (function promesa$exec$__GT_ScheduledExecutor(){\nreturn (new promesa.exec.ScheduledExecutor());\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Executors & Schedulers facilities.","~:file","promesa/exec.cljc","~:line",25,"~:column",5,"~:end-line",25,"~:end-column",17],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core","~$cljs.core"],"~:use-macros",null,"~:excludes",["~#set",["~$run!"]],"~:name","~$promesa.exec","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$promesa.protocols","^O","~$pt","^O","~$promesa.util","^Q","~$pu","^Q","~$goog.object","^S","~$gobj","^S","^D","^D","~$goog","^U"],"~:seen",["^G",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^D","^D"],"~:form",["~#list",["~$ns","^J","Executors & Schedulers facilities.",["^[",["~:refer-clojure","~:exclude",["^H"]]],["^[",["^W",["^O","~:as","^P"],["^Q","^13","^R"],["^S","^13","^T"]]]]],"~:flags",["^ ","^W",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^U","^D","^O","^Q","^S"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","promesa/exec.cljc"],"~:compiled-at",1620045995327,"~:resource-name","promesa/exec.cljc","~:warnings",[],"~:source",";; Copyright (c) 2019-2020 Andrey Antukh <niwi@niwi.nz>\n;; All rights reserved.\n;;\n;; Redistribution and use in source and binary forms, with or without\n;; modification, are permitted provided that the following conditions\n;; are met:\n;;\n;; 1. Redistributions of source code must retain the above copyright\n;;    notice, this list of conditions and the following disclaimer.\n;; 2. Redistributions in binary form must reproduce the above copyright\n;;    notice, this list of conditions and the following disclaimer in the\n;;    documentation and/or other materials provided with the distribution.\n;;\n;; THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n;; IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n;; OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n;; IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n;; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n;; NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n;; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n;; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n;; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n;; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n(ns promesa.exec\n  \"Executors & Schedulers facilities.\"\n  (:refer-clojure :exclude [run!])\n  (:require [promesa.protocols :as pt]\n            [promesa.util :as pu]\n            #?(:cljs [goog.object :as gobj]))\n  #?(:clj\n     (:import\n      java.util.concurrent.atomic.AtomicLong\n      java.util.concurrent.Callable\n      java.util.concurrent.CompletableFuture\n      java.util.concurrent.Executor\n      java.util.concurrent.ExecutorService\n      java.util.concurrent.Executors\n      java.util.concurrent.ForkJoinPool\n      java.util.concurrent.ForkJoinPool\n      java.util.concurrent.ForkJoinPool$ForkJoinWorkerThreadFactory\n      java.util.concurrent.Future\n      java.util.concurrent.ScheduledExecutorService\n      java.util.concurrent.ThreadFactory\n      java.util.concurrent.TimeUnit\n      java.util.concurrent.TimeoutException\n      java.util.function.Supplier)))\n\n;; --- Globals & Defaults (with CLJS Impl)\n\n#?(:clj (declare scheduled-pool)\n   :cljs (declare ->ScheduledExecutor))\n\n#?(:cljs (declare ->MicrotaskExecutor))\n\n(declare ->CurrentThreadExecutor)\n\n(defonce default-scheduler\n  (delay #?(:clj (scheduled-pool)\n            :cljs (->ScheduledExecutor))))\n\n(defonce default-executor\n  (delay #?(:clj (ForkJoinPool/commonPool)\n            :cljs (->MicrotaskExecutor))))\n\n(defonce current-thread-executor\n  (delay (->CurrentThreadExecutor)))\n\n(defn resolve-executor\n  ([] (if (delay? default-executor) @default-executor default-executor))\n  ([executor] (if (delay? executor) @executor executor)))\n\n(defn resolve-scheduler\n  ([] (if (delay? default-scheduler) @default-scheduler default-scheduler))\n  ([scheduler] (if (delay? scheduler) @scheduler scheduler)))\n\n#?(:clj\n   (defonce processors\n     (delay (.availableProcessors (Runtime/getRuntime)))))\n\n;; --- Public Api\n\n(defn run!\n  \"Run the task in the provided executor.\"\n  ([task] (pt/-run! (resolve-executor) task))\n  ([executor task] (pt/-run! (resolve-executor executor) task)))\n\n(defn submit!\n  \"Submit a task to be executed in a provided executor\n  and return a promise that will be completed with\n  the return value of a task.\n\n  A task is a plain clojure function.\"\n  ([task]\n   (pt/-submit! (resolve-executor) task))\n  ([executor task]\n   (pt/-submit! (resolve-executor executor) task)))\n\n(defn schedule!\n  \"Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function.\"\n  ([ms task]\n   (pt/-schedule! (resolve-scheduler) ms task))\n  ([scheduler ms task]\n   (pt/-schedule! (resolve-scheduler scheduler) ms task)))\n\n;; --- Pool constructorls\n\n(declare resolve-thread-factory)\n\n#?(:clj\n   (defn cached-pool\n     \"A cached thread pool constructor.\"\n     ([]\n      (Executors/newCachedThreadPool))\n     ([opts]\n      (let [factory (resolve-thread-factory opts)]\n        (Executors/newCachedThreadPool factory)))))\n\n#?(:clj\n   (defn fixed-pool\n     \"A fixed thread pool constructor.\"\n     ([n]\n      (Executors/newFixedThreadPool (int n)))\n     ([n opts]\n      (let [factory (resolve-thread-factory opts)]\n        (Executors/newFixedThreadPool (int n) factory)))))\n\n#?(:clj\n   (defn single-pool\n     \"A single thread pool constructor.\"\n     ([]\n      (Executors/newSingleThreadExecutor))\n     ([opts]\n      (let [factory (resolve-thread-factory opts)]\n        (Executors/newSingleThreadExecutor factory)))))\n\n#?(:clj\n   (defn scheduled-pool\n     \"A scheduled thread pool constructo.\"\n     ([] (Executors/newScheduledThreadPool (int 0)))\n     ([n] (Executors/newScheduledThreadPool (int 0)))\n     ([n opts]\n      (let [factory (resolve-thread-factory opts)]\n        (Executors/newScheduledThreadPool (int n) factory)))))\n\n#?(:clj\n   (defn work-stealing-pool\n     \"Creates a work-stealing thread pool.\"\n     ([] (Executors/newWorkStealingPool))\n     ([n] (Executors/newWorkStealingPool (int n)))))\n\n#?(:clj\n   (defn forkjoin-pool\n     [{:keys [factory async? parallelism]\n       :or {async? true}\n       :as opts}]\n     (let [parallelism (or parallelism @processors)\n           factory (cond\n                     (instance? ForkJoinPool$ForkJoinWorkerThreadFactory factory) factory\n                     (nil? factory) ForkJoinPool/defaultForkJoinWorkerThreadFactory\n                     :else (throw (ex-info \"Unexpected thread factory\" {:factory factory})))]\n       (ForkJoinPool. (or parallelism @processors) factory nil async?))))\n\n\n;; --- Impl\n\n#?(:clj\n   (defn- thread-factory-adapter\n     \"Adapt a simple clojure function into a\n     ThreadFactory instance.\"\n     [func]\n     (reify ThreadFactory\n       (^Thread newThread [_ ^Runnable runnable]\n        (func runnable)))))\n\n#?(:clj\n   (defn counted-thread-factory\n     [name daemon]\n     (let [along (AtomicLong. 0)]\n       (reify ThreadFactory\n         (newThread [this runnable]\n           (doto (Thread. ^Runnable runnable)\n             (.setDaemon ^Boolean daemon)\n             (.setName (format name (.getAndIncrement along)))))))))\n\n#?(:clj\n   (defn forkjoin-named-thread-factory\n     [name]\n     (reify ForkJoinPool$ForkJoinWorkerThreadFactory\n       (newThread [this pool]\n         (let [wth (.newThread ForkJoinPool/defaultForkJoinWorkerThreadFactory pool)]\n           (.setName wth (str name \":\" (.getPoolIndex wth)))\n           wth)))))\n\n#?(:clj\n   (defn- thread-factory\n     [{:keys [daemon priority]\n       :or {daemon true\n            priority Thread/NORM_PRIORITY}}]\n     (thread-factory-adapter\n      (fn [runnable]\n        (let [thread (Thread. ^Runnable runnable)]\n          (.setDaemon thread daemon)\n          (.setPriority thread priority)\n          thread)))))\n\n#?(:clj\n   (defn- resolve-thread-factory\n     [opts]\n     (cond\n       (map? opts) (thread-factory opts)\n       (fn? opts) (thread-factory-adapter opts)\n       (instance? ThreadFactory opts) opts\n       :else (throw (ex-info \"Invalid thread factory\" {})))))\n\n#?(:clj\n   (extend-protocol pt/IExecutor\n     Executor\n     (-run! [this f]\n       (CompletableFuture/runAsync ^Runnable f\n                                   ^Executor this))\n     (-submit! [this f]\n       (CompletableFuture/supplyAsync ^Supplier (pu/->SupplierWrapper f)\n                                      ^Executor this))))\n\n\n\n;; Default executor that executes cljs/js tasks in the microtask\n;; queue.\n#?(:cljs\n   (deftype MicrotaskExecutor []\n     pt/IExecutor\n     (-run! [this f]\n       (-> (pt/-promise nil)\n           (pt/-map (fn [_] (f) nil))\n           (pt/-mapErr (fn [e] (js/setTimeout #(throw e)) nil))))\n\n     (-submit! [this f]\n       (-> (pt/-promise nil)\n           (pt/-map (fn [_] (f)))\n           (pt/-mapErr (fn [e] (js/setTimeout #(throw e)) nil))))))\n\n;; Executor that executes the task in the calling thread\n#?(:clj\n   (deftype CurrentThreadExecutor []\n     Executor\n     (^void execute [_ ^Runnable f]\n       (.run f)))\n\n   :cljs\n   (deftype CurrentThreadExecutor []\n     pt/IExecutor\n     (-run! [this f]\n       (f)\n       (pt/-promise nil))\n\n     (-submit! [this f]\n       (pt/-promise (f)))))\n\n;; --- Scheduler & ScheduledTask\n\n#?(:clj\n   (deftype ScheduledTask [^Future fut]\n     clojure.lang.IDeref\n     (deref [_] (.get fut))\n\n     clojure.lang.IBlockingDeref\n     (deref [_ ms default]\n       (try\n         (.get fut ms TimeUnit/MILLISECONDS)\n         (catch TimeoutException e\n           default)))\n\n     clojure.lang.IPending\n     (isRealized [_] (and (.isDone fut)\n                          (not (.isCancelled fut))))\n\n     pt/ICancellable\n     (-cancelled? [_]\n       (.isCancelled fut))\n     (-cancel! [_]\n       (when-not (.isCancelled fut)\n         (.cancel fut true)))\n\n     Future\n     (get [_] (.get fut))\n     (get [_ timeout unit] (.get fut timeout unit))\n     (isCancelled [_] (.isCancelled fut))\n     (isDone [_] (.isDone fut))\n     (cancel [_ interrupt?] (.cancel fut interrupt?)))\n\n   :cljs\n   (deftype ScheduledTask [state]\n     cljs.core/IPending\n     (-realized? [_]\n       (let [done-iref (gobj/get state \"done\")]\n         (deref done-iref)))\n\n     pt/ICancellable\n     (-cancelled? [_]\n       (gobj/get state \"cancelled\"))\n     (-cancel! [self]\n       (when-not (pt/-cancelled? self)\n         (let [cancel-fn (gobj/get state \"cancel-fn\")]\n           (gobj/set state \"cancelled\" true)\n           (cancel-fn))))))\n\n#?(:clj\n   (extend-type ScheduledExecutorService\n     pt/IScheduler\n     (-schedule! [this ms f]\n       (let [fut (.schedule this ^Callable f ^long ms TimeUnit/MILLISECONDS)]\n         (ScheduledTask. fut)))))\n\n#?(:cljs\n   (deftype ScheduledExecutor []\n     pt/IScheduler\n     (-schedule! [_ ms f]\n       (let [done (volatile! false)\n             task #(try\n                     (f)\n                     (finally\n                       (vreset! done true)))\n             tid (js/setTimeout task ms)\n             cancel #(js/clearTimeout tid)]\n         (->ScheduledTask #js {:done done\n                               :cancelled false\n                               :cancel-fn cancel})))))\n","~:reader-features",["^G",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAmDS,AAAA,AAEA,AAAA,AAET,AAAA,AAEA,AAAA,AAAAA,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AACP,AAAAC,AAAA;AAAA,AACgB,AAACC,AAAAA,AAAAA;AADjB;;AAGF,AAAA,AAAAL,AAAAC,AAAAK;AAAA;AAAA,AAAA,AAASC,AACP,AAAAH,AAAA;AAAA,AACgB,AAACI,AAAAA,AAAAA;AADjB;;AAGF,AAAA,AAAAR,AAAAC,AAAAQ;AAAA;AAAA,AAAA,AAASC,AACP,AAAAN,AAAA;AAAA,AAAO,AAACO,AAAAA,AAAAA;AAAR;;AAEF,AAAA,AAAA,AAAAC,AAAME;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD;AAAN,AACM,AAAI,AAACG,AAAOV;AAAZ,AAAAS,AAA+BT;;AAAiBA;;;;AADtD,AAAA,AAAA,AAAMO,AAEFI;AAFJ,AAEc,AAAI,AAACD,AAAOC;AAAZ,AAAAF,AAAuBE;;AAASA;;;;AAF9C,AAAA,AAAA,AAAMJ;;AAAN,AAIA,AAAA,AAAA,AAAAF,AAAMQ;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAL,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMK;AAAN,AACM,AAAI,AAACH,AAAOd;AAAZ,AAAAa,AAAgCb;;AAAkBA;;;;AADxD,AAAA,AAAA,AAAMiB,AAEFC;AAFJ,AAEe,AAAI,AAACJ,AAAOI;AAAZ,AAAAL,AAAwBK;;AAAUA;;;;AAFjD,AAAA,AAAA,AAAMD;;AAAN,AAUA,AAAA;;;AAAA,AAAAR,AAAMW;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAR,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMQ,AAEFC;AAFJ,AAEU,AAACC,AAAS,AAACC,AAAkBF;;;AAFvC,AAAA,AAAA,AAAMD,AAGFL,AAASM;AAHb,AAGmB,AAACC,AAAS,AAACC,AAAiBR,AAAUM;;;AAHzD,AAAA,AAAA,AAAMD;;AAAN,AAKA,AAAA;;;;;;;AAAA,AAAAX,AAAMgB;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAb,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMa,AAMFJ;AANJ,AAOG,AAACK,AAAY,AAACH,AAAkBF;;;AAPnC,AAAA,AAAA,AAAMI,AAQFV,AAASM;AARb,AASG,AAACK,AAAY,AAACH,AAAiBR,AAAUM;;;AAT5C,AAAA,AAAA,AAAMI;;AAAN,AAWA,AAAA;;;;;;;AAAA,AAAAhB,AAAMmB;AAAN,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAhB,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMgB,AAMFC,AAAGR;AANP,AAOG,AAACS,AAAc,AAACC,AAAmBF,AAAGR;;;AAPzC,AAAA,AAAA,AAAMO,AAQFV,AAAUW,AAAGR;AARjB,AASG,AAACS,AAAc,AAACC,AAAkBb,AAAWW,AAAGR;;;AATnD,AAAA,AAAA,AAAMO;;AAAN,AAaA,AAAA,AA2HG,AAAA;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAI,AAASK;;AAAT,AAAA,AAAA,AAAA,AAASA,AAECC,AAAKC;;AAFf,AAAA,AAAA,AAEUD;AAFV,AAGQ,AAAA,AAACE,AACD,AAACC,AAAQ,AAAKC,AACd,AAACC;AADQ,AAAQ,AAACJ,AAAAA,AAAAA;;AAAT;AACG,AAAKK;AAAL,AAAQ,AAAA,AAACC;AAAD,AAAgB,AAAOD;;;AAA/B;;;;AALpB,AAAA,AAAA,AAAA,AAASP,AAOIC,AAAKC;;AAPlB,AAAA,AAAA,AAOaD;AAPb,AAQQ,AAAA,AAACE,AACD,AAACC,AAAQ,AAAKC,AACd,AAACC;AADQ,AAAQ,AAACJ,AAAAA,AAAAA;AACN,AAAKK;AAAL,AAAQ,AAAA,AAACC;AAAD,AAAgB,AAAOD;;;AAA/B;;;;AAVpB,AAAA,AAAA,AAASP;AAAT,AAAA,AAAA;;;AAAA,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAAAJ,AAAAC,AAAAC,AAASE;AAAT,AAAA,AAAAD,AAAAF,AAAA;;;AAAA;;;AAAA,AAAS7B;AAAT,AAAA,AAAAgC;;;AAASA,AAoBT,AAAA;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAL,AAASc;;AAAT,AAAA,AAAA,AAAA,AAASA,AAECR,AAAKC;;AAFf,AAAA,AAAA,AAEUD;AAFV,AAGI,AAACC,AAAAA,AAAAA;;AACD,AAAA,AAACC;;;AAJL,AAAA,AAAA,AAAA,AAASM,AAMIR,AAAKC;;AANlB,AAAA,AAAA,AAMaD;AANb,AAOI,AAACE,AAAY,AAACD,AAAAA,AAAAA;;;AAPlB,AAAA,AAAA,AAASO;AAAT,AAAA,AAAA;;;AAAA,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAAAb,AAAAC,AAAAC,AAASW;AAAT,AAAA,AAAAV,AAAAF,AAAA;;;AAAA;;;AAAA,AAAS1B;AAAT,AAAA,AAAAsC;;;AAASA,AA0CT,AAAA;;;;;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAA,AAASC,AAEML;;AAFf,AAAA,AAAA,AAEeA;AAFf,AAGI,AAAMQ,AAAU,AAAA,AAACC,AAASF;AAA1B,AACE,AAACpC,AAAMqC;;;AAJb,AAAA,AAAA,AAAAlB,AAASe;;AAAT,AAAA,AAAA,AAAA,AAASA,AAOOL;;AAPhB,AAAA,AAAA,AAOgBA;AAPhB,AAQI,AAAA,AAACS,AAASF;;;AARd,AAAA,AAAA,AAAA,AAASF,AASIK;;AATb,AAAA,AAAA,AASaA;AATb,AAUI,AAAU,AAAgBA;AAA1B;;AAAA,AACE,AAAMC,AAAU,AAAA,AAACF,AAASF;AAA1B,AACE,AAAA,AAAA,AAACK,AAASL;;AACV,AAACI,AAAAA,AAAAA;;;;AAbT,AAAA,AAAA,AAASN;AAAT,AAAA,AAAA;;;AAAA,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAAAd,AAAAC,AAAAC,AAASY;AAAT,AAAA,AAAAX,AAAAF,AAAA;;;AAAA;;;AAAA,AAASc,AAAeC;AAAxB,AAAA,AAAAF,AAAwBE;;;AAAfF,AAuBT,AAAA;;;;;;;AAAA,AAAA,AAAA,AAAA,AAAAf,AAASuB;;AAAT,AAAA,AAAA,AAAA,AAASA,AAEMb,AAAEb,AAAGU;;AAFpB,AAAA,AAAA,AAEeG;AAFf,AAGI,AAAMc,AAAK,AAAA,AAACC;AAAZ,AACMpC;AADN,AACY,AAAA,AACE,AAACkB,AAAAA,AAAAA;AADH,AAGI,AAAA,AAACmB,AAAQF;;AACnBG,AAAI,AAACd,AAAcxB,AAAKQ;AAL9B,AAMM+B;AANN,AAMc,AAACC,AAAgBF;;AAN/B,AAOE,AAAA,AAAA,AAACX,AAA2BQ,AAEKI;;;AAZvC,AAAA,AAAA,AAASL;AAAT,AAAA,AAAA;;;AAAA,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAASA;;AAAT,AAAA,AAAA,AAAAtB,AAAAC,AAAAC,AAASoB;AAAT,AAAA,AAAAnB,AAAAF,AAAA;;;AAAA;;;AAAA,AAAShC;AAAT,AAAA,AAAAqD;;;AAASA","names",["js/promesa","js/promesa.exec","js/promesa.exec.default-scheduler","promesa.exec/default-scheduler","cljs.core/Delay","promesa.exec/->ScheduledExecutor","js/promesa.exec.default-executor","promesa.exec/default-executor","promesa.exec/->MicrotaskExecutor","js/promesa.exec.current-thread-executor","promesa.exec/current-thread-executor","promesa.exec/->CurrentThreadExecutor","var_args","G__27266","promesa.exec/resolve-executor","js/Error","cljs.core/deref","cljs.core/delay?","executor","G__27270","promesa.exec/resolve-scheduler","scheduler","G__27273","promesa.exec/run!","task","promesa.protocols/-run!","promesa.exec.resolve_executor","G__27275","promesa.exec/submit!","promesa.protocols/-submit!","G__27279","promesa.exec/schedule!","ms","promesa.protocols/-schedule!","promesa.exec.resolve_scheduler","cljs.core/PROTOCOL_SENTINEL","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","cljs.core/-write","promesa.exec/MicrotaskExecutor","this","f","promesa.protocols/-promise","promesa.protocols/-map","_","promesa.protocols/-mapErr","e","js/setTimeout","promesa.exec/CurrentThreadExecutor","promesa.exec/ScheduledTask","promesa.exec/->ScheduledTask","state","done-iref","goog.object/get","self","cancel-fn","goog.object/set","promesa.exec/ScheduledExecutor","done","cljs.core/volatile!","cljs.core/vreset!","tid","cancel","js/clearTimeout"]],"~:used-vars",["^G",["~$cljs.core/PROTOCOL_SENTINEL","~$promesa.exec/->CurrentThreadExecutor","~$promesa.protocols/-map","~$promesa.exec/resolve-executor","~$cljs.core/-write","~$promesa.protocols/-schedule!","~$cljs.core/deref","~$promesa.exec/ScheduledExecutor","~$promesa.exec/resolve-thread-factory","~$promesa.protocols/-run!","~$cljs.core/Delay","~$promesa.protocols/-promise","~$promesa.exec/CurrentThreadExecutor","~$promesa.exec/submit!","~$js/setTimeout","~$js/promesa.exec.current-thread-executor","~$promesa.protocols/-submit!","~$promesa.exec/default-executor","~$js/promesa.exec.default-executor","~$promesa.protocols/-cancelled?","~$goog.object/set","~$promesa.exec/->ScheduledTask","~$promesa.exec/ScheduledTask","~$promesa.exec/->MicrotaskExecutor","~$js/promesa.exec","~$promesa.exec/MicrotaskExecutor","~$js/promesa","~$promesa.exec/default-scheduler","~$promesa.protocols/-mapErr","~$cljs.core/delay?","~$promesa.exec/schedule!","~$js/Error","~$js/promesa.exec.default-scheduler","~$promesa.exec/current-thread-executor","~$promesa.exec/->ScheduledExecutor","~$promesa.exec/resolve-scheduler","~$promesa.exec/run!","~$goog.object/get"]]],"~:cache-keys",["~#cmap",[["^18","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^G",[]],"~:deps-syms",["^U","~$goog.dom.HtmlElement"]]],["^18","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","~$goog.array","~$goog.asserts"]]],["^18","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U"]]],["^18","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2E","~$goog.labs.userAgent.util","^S","~$goog.string.internal"]]],["^18","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2F","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2H"]]],["^18","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2F"]]],["^18","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U"]]],["^18","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U"]]],["^18","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U"]]],["^18","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U"]]],["^18","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2F"]]],"~:SHADOW-TIMESTAMP",[1615899884000,1615899884000,1614681766000],["^18","promesa/util.cljc"],["e5ea1b8885415d318d6dd745d782bfbe99067cd4","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^D"]]],["^18","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2F","~$goog.reflect"]]],["^18","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2F","~$goog.html.trustedtypes","^2K","^2L","^2M","^2N"]]],["^18","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U"]]],["^18","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U"]]],["^18","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2E","^2F","~$goog.html.SafeUrl","^2M","^2N","^2H"]]],["^18","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2F","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^2R","^2J","~$goog.html.uncheckedconversions","^2M","^2H"]]],["^18","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^18","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2E","^2F","~$goog.dom.TagName","~$goog.dom.tags","^2V","^2W","~$goog.html.SafeStyleSheet","^2R","^2J","^2Q","^2K","^2L","~$goog.labs.userAgent.browser","^S","^2M","^2N","^2H"]]],["^18","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^S"]]],["^18","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^18","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2E","^2F","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^18","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U"]]],["^18","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U"]]],["^18","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",[]]],["^18","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2E","^S"]]],["^18","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","~$goog.dom.safe","^2X","^2M","^2H"]]],["^18","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U"]]],["^18","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2H"]]],["^18","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U"]]],["^18","promesa/protocols.cljc"],["e5ea1b8885415d318d6dd745d782bfbe99067cd4","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^D"]]],["^18","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2E","^2F","^2T","~$goog.math"]]],["^18","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2F","^2U","^2V","^2W","^31","^2R","^2J","^2M","^2H"]]],["^18","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U"]]],["^18","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","~$goog.math.Long","~$goog.math.Integer","^35","^S","^2E","~$goog.Uri","~$goog.string.StringBuffer"]]],["^18","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2F","^2Q","^2M","^2N"]]],["^18","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2E","^2F","^2W","^S","^2M","^2N","^2H"]]],["^18","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2P"]]],["^18","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2E","^2F","^35"]]],["^18","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^2F","^2N"]]],["^18","promesa/exec.cljc"],["e5ea1b8885415d318d6dd745d782bfbe99067cd4","^2@",["^ ","^2A",null,"^2B",["^G",[]],"^2C",["^U","^D","^O","^Q","^S"]]]]],"~:clj-info",["^ ","jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1606738673000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Executors & Schedulers facilities.","^7","promesa/exec.cljc","^8",25,"^9",5,"^:",25,"^;",17],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",null,"^F",["^G",["^H"]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^O","^Q","^Q","^R","^Q","^S","^S","^T","^S","^D","^D","^U","^U"],"^V",["^G",["^W"]],"~:shadow/js-access-global",["^G",["clearTimeout","Error","setTimeout"]],"^X",null,"~:defs",["^ ","~$ScheduledTask",["^ ","~:num-fields",1,"~:protocols",["^G",["~$cljs.core/IPending","~$promesa.protocols/ICancellable"]],"^I","^1Z","^7","promesa/exec.cljc","^;",26,"~:type",true,"^9",13,"^8",297,"~:record",false,"^:",297,"~:tag","~$function","~:skip-protocol-flag",["^G",["^44"]]],"~$->MicrotaskExecutor",["^ ","~:protocol-inline",null,"^5",["^ ","^43",["^G",["~$promesa.protocols/IExecutor"]],"^7","promesa/exec.cljc","^;",30,"^9",13,"~:factory","~:positional","^8",235,"^:",235,"~:arglists",["^[",["~$quote",["^[",[[]]]]],"^4:",null,"^6","Positional factory function for promesa.exec/MicrotaskExecutor."],"^43",["^G",["^4="]],"^I","^1[","^7","promesa/exec.cljc","^;",30,"~:method-params",["^[",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^9",4,"~:variadic?",false,"^4>","^4?","^8",235,"~:ret-tag","^21","^:",235,"~:max-fixed-arity",0,"~:fn-var",true,"^4@",["^[",["^4A",["^[",[[]]]]],"^4:",null,"^6","Positional factory function for promesa.exec/MicrotaskExecutor."],"~$MicrotaskExecutor",["^ ","^42",0,"^43",["^G",["^4="]],"^I","^21","^7","promesa/exec.cljc","^;",30,"^46",true,"^9",13,"^8",235,"^47",false,"^:",235,"^48","^49","^4:",null],"~$default-scheduler",["^ ","^I","^23","^7","promesa/exec.cljc","^8",58,"^9",1,"^:",58,"^;",27,"^5",["^ ","^7","promesa/exec.cljc","^8",58,"^9",10,"^:",58,"^;",27],"^48","^1N"],"~$->CurrentThreadExecutor",["^ ","^4<",null,"^5",["^ ","^43",["^G",["^4="]],"^7","promesa/exec.cljc","^;",34,"^9",13,"^4>","^4?","^8",255,"^:",255,"^4@",["^[",["^4A",["^[",[[]]]]],"^4:",null,"^6","Positional factory function for promesa.exec/CurrentThreadExecutor."],"^43",["^G",["^4="]],"^I","^1E","^7","promesa/exec.cljc","^;",34,"^4B",["^[",[[]]],"^4C",null,"^4D",["^[",[null,null]],"^9",4,"^4E",false,"^4>","^4?","^8",255,"^4F","^1P","^:",255,"^4G",0,"^4H",true,"^4@",["^[",["^4A",["^[",[[]]]]],"^4:",null,"^6","Positional factory function for promesa.exec/CurrentThreadExecutor."],"~$schedule!",["^ ","^4<",null,"^5",["^ ","^7","promesa/exec.cljc","^8",99,"^9",7,"^:",99,"^;",16,"^4@",["^[",["^4A",["^[",[["~$ms","~$task"],["~$scheduler","^4M","^4N"]]]]],"^6","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function.","~:top-fn",["^ ","^4E",false,"~:fixed-arity",3,"^4G",3,"^4B",[["^4M","^4N"],["^4O","^4M","^4N"]],"^4@",["^[",[["^4M","^4N"],["^4O","^4M","^4N"]]],"^4D",["^[",[null,null]]]],"^I","^26","^7","promesa/exec.cljc","^;",16,"^4P",["^ ","^4E",false,"^4Q",3,"^4G",3,"^4B",[["^4M","^4N"],["^4O","^4M","^4N"]],"^4@",["^[",[["^4M","^4N"],["^4O","^4M","^4N"]]],"^4D",["^[",[null,null]]],"^4B",[["^4M","^4N"],["^4O","^4M","^4N"]],"^4C",null,"^4Q",3,"^4D",["^[",[null,null]],"^9",1,"^4E",false,"~:methods",[["^ ","^4Q",2,"^4E",false,"^48","~$any"],["^ ","^4Q",3,"^4E",false,"^48","^4S"]],"^8",99,"^:",99,"^4G",3,"^4H",true,"^4@",["^[",[["^4M","^4N"],["^4O","^4M","^4N"]]],"^6","Schedule a callable to be executed after the `ms` delay\n  is reached.\n\n  In JVM it uses a scheduled executor service and in JS\n  it uses the `setTimeout` function."],"~$->ScheduledExecutor",["^ ","^4<",null,"^5",["^ ","^43",["^G",["~$promesa.protocols/IScheduler"]],"^7","promesa/exec.cljc","^;",30,"^9",13,"^4>","^4?","^8",320,"^:",320,"^4@",["^[",["^4A",["^[",[[]]]]],"^4:",null,"^6","Positional factory function for promesa.exec/ScheduledExecutor."],"^43",["^G",["^4U"]],"^I","^2:","^7","promesa/exec.cljc","^;",30,"^4B",["^[",[[]]],"^4C",null,"^4D",["^[",[null,null]],"^9",4,"^4E",false,"^4>","^4?","^8",320,"^4F","^1K","^:",320,"^4G",0,"^4H",true,"^4@",["^[",["^4A",["^[",[[]]]]],"^4:",null,"^6","Positional factory function for promesa.exec/ScheduledExecutor."],"~$resolve-executor",["^ ","^4<",null,"^5",["^ ","^7","promesa/exec.cljc","^8",69,"^9",7,"^:",69,"^;",23,"^4@",["^[",["^4A",["^[",[[],["~$executor"]]]]],"^4P",["^ ","^4E",false,"^4Q",1,"^4G",1,"^4B",[[],["^4W"]],"^4@",["^[",[[],["^4W"]]],"^4D",["^[",[null,null]]]],"^I","^1G","^7","promesa/exec.cljc","^;",23,"^4P",["^ ","^4E",false,"^4Q",1,"^4G",1,"^4B",[[],["^4W"]],"^4@",["^[",[[],["^4W"]]],"^4D",["^[",[null,null]]],"^4B",[[],["^4W"]],"^4C",null,"^4Q",1,"^4D",["^[",[null,null]],"^9",1,"^4E",false,"^4R",[["^ ","^4Q",0,"^4E",false,"^48",["^G",["^4S","^1N"]]],["^ ","^4Q",1,"^4E",false,"^48",["^G",[null,"^4S"]]]],"^8",69,"^:",69,"^4G",1,"^4H",true,"^4@",["^[",[[],["^4W"]]]],"~$current-thread-executor",["^ ","^I","^29","^7","promesa/exec.cljc","^8",66,"^9",1,"^:",66,"^;",33,"^5",["^ ","^7","promesa/exec.cljc","^8",66,"^9",10,"^:",66,"^;",33],"^48","^1N"],"~$ScheduledExecutor",["^ ","^42",0,"^43",["^G",["^4U"]],"^I","^1K","^7","promesa/exec.cljc","^;",30,"^46",true,"^9",13,"^8",320,"^47",false,"^:",320,"^48","^49","^4:",null],"~$resolve-scheduler",["^ ","^4<",null,"^5",["^ ","^7","promesa/exec.cljc","^8",73,"^9",7,"^:",73,"^;",24,"^4@",["^[",["^4A",["^[",[[],["^4O"]]]]],"^4P",["^ ","^4E",false,"^4Q",1,"^4G",1,"^4B",[[],["^4O"]],"^4@",["^[",[[],["^4O"]]],"^4D",["^[",[null,null]]]],"^I","^2;","^7","promesa/exec.cljc","^;",24,"^4P",["^ ","^4E",false,"^4Q",1,"^4G",1,"^4B",[[],["^4O"]],"^4@",["^[",[[],["^4O"]]],"^4D",["^[",[null,null]]],"^4B",[[],["^4O"]],"^4C",null,"^4Q",1,"^4D",["^[",[null,null]],"^9",1,"^4E",false,"^4R",[["^ ","^4Q",0,"^4E",false,"^48",["^G",["^4S","^1N"]]],["^ ","^4Q",1,"^4E",false,"^48",["^G",[null,"^4S"]]]],"^8",73,"^:",73,"^4G",1,"^4H",true,"^4@",["^[",[[],["^4O"]]]],"~$default-executor",["^ ","^I","^1U","^7","promesa/exec.cljc","^8",62,"^9",1,"^:",62,"^;",26,"^5",["^ ","^7","promesa/exec.cljc","^8",62,"^9",10,"^:",62,"^;",26],"^48","^1N"],"^H",["^ ","^4<",null,"^5",["^ ","^7","promesa/exec.cljc","^8",83,"^9",7,"^:",83,"^;",11,"^4@",["^[",["^4A",["^[",[["^4N"],["^4W","^4N"]]]]],"^6","Run the task in the provided executor.","^4P",["^ ","^4E",false,"^4Q",2,"^4G",2,"^4B",[["^4N"],["^4W","^4N"]],"^4@",["^[",[["^4N"],["^4W","^4N"]]],"^4D",["^[",[null,null]]]],"^I","^2<","^7","promesa/exec.cljc","^;",11,"^4P",["^ ","^4E",false,"^4Q",2,"^4G",2,"^4B",[["^4N"],["^4W","^4N"]],"^4@",["^[",[["^4N"],["^4W","^4N"]]],"^4D",["^[",[null,null]]],"^4B",[["^4N"],["^4W","^4N"]],"^4C",null,"^4Q",2,"^4D",["^[",[null,null]],"^9",1,"^4E",false,"^4R",[["^ ","^4Q",1,"^4E",false,"^48","^4S"],["^ ","^4Q",2,"^4E",false,"^48","^4S"]],"^8",83,"^:",83,"^4G",2,"^4H",true,"^4@",["^[",[["^4N"],["^4W","^4N"]]],"^6","Run the task in the provided executor."],"~$resolve-thread-factory",["^ ","^I","^1L","^7","promesa/exec.cljc","^8",112,"^9",1,"^:",112,"^;",32,"~:declared",true,"^5",["^ ","^7","promesa/exec.cljc","^8",112,"^9",10,"^:",112,"^;",32,"^51",true]],"~$CurrentThreadExecutor",["^ ","^42",0,"^43",["^G",["^4="]],"^I","^1P","^7","promesa/exec.cljc","^;",34,"^46",true,"^9",13,"^8",255,"^47",false,"^:",255,"^48","^49","^4:",null],"~$submit!",["^ ","^4<",null,"^5",["^ ","^7","promesa/exec.cljc","^8",88,"^9",7,"^:",88,"^;",14,"^4@",["^[",["^4A",["^[",[["^4N"],["^4W","^4N"]]]]],"^6","Submit a task to be executed in a provided executor\n  and return a promise that will be completed with\n  the return value of a task.\n\n  A task is a plain clojure function.","^4P",["^ ","^4E",false,"^4Q",2,"^4G",2,"^4B",[["^4N"],["^4W","^4N"]],"^4@",["^[",[["^4N"],["^4W","^4N"]]],"^4D",["^[",[null,null]]]],"^I","^1Q","^7","promesa/exec.cljc","^;",14,"^4P",["^ ","^4E",false,"^4Q",2,"^4G",2,"^4B",[["^4N"],["^4W","^4N"]],"^4@",["^[",[["^4N"],["^4W","^4N"]]],"^4D",["^[",[null,null]]],"^4B",[["^4N"],["^4W","^4N"]],"^4C",null,"^4Q",2,"^4D",["^[",[null,null]],"^9",1,"^4E",false,"^4R",[["^ ","^4Q",1,"^4E",false,"^48","^4S"],["^ ","^4Q",2,"^4E",false,"^48","^4S"]],"^8",88,"^:",88,"^4G",2,"^4H",true,"^4@",["^[",[["^4N"],["^4W","^4N"]]],"^6","Submit a task to be executed in a provided executor\n  and return a promise that will be completed with\n  the return value of a task.\n\n  A task is a plain clojure function."],"~$->ScheduledTask",["^ ","^4<",null,"^5",["^ ","^43",["^G",["^44","^45"]],"^7","promesa/exec.cljc","^;",26,"^9",13,"^4>","^4?","^8",297,"^:",297,"^4@",["^[",["^4A",["^[",[["~$state"]]]]],"^4:",["^G",["^44"]],"^6","Positional factory function for promesa.exec/ScheduledTask."],"^43",["^G",["^44","^45"]],"^I","^1Y","^7","promesa/exec.cljc","^;",26,"^4B",["^[",[["^55"]]],"^4C",null,"^4D",["^[",[null,null]],"^9",4,"^4E",false,"^4>","^4?","^8",297,"^4F","^1Z","^:",297,"^4G",1,"^4H",true,"^4@",["^[",["^4A",["^[",[["^55"]]]]],"^4:",["^G",["^44"]],"^6","Positional factory function for promesa.exec/ScheduledTask."]],"^Y",["^ ","^D","^D"],"~:cljs.analyzer/constants",["^ ","^V",["^G",["^55"]],"~:order",["^55"]],"^14",["^ ","^W",["^G",[]]],"^15",["^ "],"^16",["^U","^D","^O","^Q","^S"]],"^L","^J","~:ns-specs",["^ "],"~:ns-spec-vars",["^G",[]],"~:compiler-options",["^2?",[["^5:","~:static-fns"],true,["^5:","~:shadow-tweaks"],null,["^5:","~:source-map-inline"],null,["^5:","~:elide-asserts"],false,["^5:","~:optimize-constants"],null,["^5:","^1;"],null,["^5:","~:external-config"],null,["^5:","~:tooling-config"],null,["^5:","~:emit-constants"],null,["^5:","~:load-tests"],null,["^5:","~:form-size-threshold"],null,["^5:","~:data-readers"],null,["^5:","~:infer-externs"],"~:auto",["^5:","^1="],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5:","~:fn-invoke-direct"],null,["^5:","~:source-map"],"/dev/null"]]]