["^ ","~:output",["^ ","~:js","goog.provide('shadow.object');\nshadow.object.console_friendly = shadow.util.console_friendly;\nshadow.object.log = shadow.util.log;\nshadow.object.debug = shadow.util.log;\nshadow.object.info = shadow.util.log;\nshadow.object.warn = shadow.util.log;\nshadow.object.error = shadow.util.log;\nshadow.object.obj_id = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\nshadow.object.next_id = (function shadow$object$next_id(){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(shadow.object.obj_id,cljs.core.inc);\n});\nshadow.object.object_defs = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nshadow.object.behavior_fns = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nshadow.object.instances = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nshadow.object.instance_parent = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nshadow.object.instance_children = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nshadow.object.events = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nshadow.object.define_event = (function shadow$object$define_event(event_name,desc,args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(shadow.object.events,cljs.core.assoc,event_name,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),event_name,new cljs.core.Keyword(null,\"description\",\"description\",-1428560544),desc,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null));\n});\nshadow.object.unmunge = (function shadow$object$unmunge(s){\nreturn clojure.string.replace(clojure.string.replace(s,/_DOT_/,\".\"),/_/,\"-\");\n});\nshadow.object.define_event(new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),\"object initialization\",cljs.core.PersistentVector.EMPTY);\nshadow.object.define_event(new cljs.core.Keyword(null,\"destroy\",\"destroy\",-843660405),\"object descruction\",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cause\",\"cause\",231901252),\"cause of destruction, :parent means the parent was destroyed, :direct is default\"], null)], null));\nshadow.object.define_event(new cljs.core.Keyword(\"dom\",\"init\",\"dom/init\",-1875647652),\"called after the dom was created but has not entered the document yet\",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"dom\",\"dom\",-1236537922),\"the dom that was created\"], null)], null));\nshadow.object.define_event(new cljs.core.Keyword(\"dom\",\"entered\",\"dom/entered\",506699596),\"should be called whenever a dom node is added to the document, since that\\n   is not in control of this library its up to you to call this\\n   use (so/notify-tree! your-obj :dom/entered) to notify the node and every child you created\",cljs.core.PersistentVector.EMPTY);\nshadow.object.define_event(new cljs.core.Keyword(null,\"bind-children-update\",\"bind-children-update\",-1610690160),\"need to rethink this\",cljs.core.PersistentVector.EMPTY);\n\n/**\n * @interface\n */\nshadow.object.IObject = function(){};\n\nvar shadow$object$IObject$_id$dyn_33636 = (function (this$){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (shadow.object._id[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4429__auto__.call(null,this$));\n} else {\nvar m__4426__auto__ = (shadow.object._id[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4426__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IObject.-id\",this$);\n}\n}\n});\nshadow.object._id = (function shadow$object$_id(this$){\nif((((!((this$ == null)))) && ((!((this$.shadow$object$IObject$_id$arity$1 == null)))))){\nreturn this$.shadow$object$IObject$_id$arity$1(this$);\n} else {\nreturn shadow$object$IObject$_id$dyn_33636(this$);\n}\n});\n\nvar shadow$object$IObject$_type$dyn_33637 = (function (this$){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (shadow.object._type[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4429__auto__.call(null,this$));\n} else {\nvar m__4426__auto__ = (shadow.object._type[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4426__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IObject.-type\",this$);\n}\n}\n});\nshadow.object._type = (function shadow$object$_type(this$){\nif((((!((this$ == null)))) && ((!((this$.shadow$object$IObject$_type$arity$1 == null)))))){\nreturn this$.shadow$object$IObject$_type$arity$1(this$);\n} else {\nreturn shadow$object$IObject$_type$dyn_33637(this$);\n}\n});\n\nvar shadow$object$IObject$_data$dyn_33638 = (function (this$){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (shadow.object._data[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4429__auto__.call(null,this$));\n} else {\nvar m__4426__auto__ = (shadow.object._data[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4426__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IObject.-data\",this$);\n}\n}\n});\nshadow.object._data = (function shadow$object$_data(this$){\nif((((!((this$ == null)))) && ((!((this$.shadow$object$IObject$_data$arity$1 == null)))))){\nreturn this$.shadow$object$IObject$_data$arity$1(this$);\n} else {\nreturn shadow$object$IObject$_data$dyn_33638(this$);\n}\n});\n\nvar shadow$object$IObject$_update$dyn_33639 = (function (this$,update_fn){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (shadow.object._update[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(this$,update_fn) : m__4429__auto__.call(null,this$,update_fn));\n} else {\nvar m__4426__auto__ = (shadow.object._update[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(this$,update_fn) : m__4426__auto__.call(null,this$,update_fn));\n} else {\nthrow cljs.core.missing_protocol(\"IObject.-update\",this$);\n}\n}\n});\n/**\n * update and notify watches\n */\nshadow.object._update = (function shadow$object$_update(this$,update_fn){\nif((((!((this$ == null)))) && ((!((this$.shadow$object$IObject$_update$arity$2 == null)))))){\nreturn this$.shadow$object$IObject$_update$arity$2(this$,update_fn);\n} else {\nreturn shadow$object$IObject$_update$dyn_33639(this$,update_fn);\n}\n});\n\nvar shadow$object$IObject$_destroy_BANG_$dyn_33640 = (function (this$,cause){\nvar x__4428__auto__ = (((this$ == null))?null:this$);\nvar m__4429__auto__ = (shadow.object._destroy_BANG_[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(this$,cause) : m__4429__auto__.call(null,this$,cause));\n} else {\nvar m__4426__auto__ = (shadow.object._destroy_BANG_[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(this$,cause) : m__4426__auto__.call(null,this$,cause));\n} else {\nthrow cljs.core.missing_protocol(\"IObject.-destroy!\",this$);\n}\n}\n});\nshadow.object._destroy_BANG_ = (function shadow$object$_destroy_BANG_(this$,cause){\nif((((!((this$ == null)))) && ((!((this$.shadow$object$IObject$_destroy_BANG_$arity$2 == null)))))){\nreturn this$.shadow$object$IObject$_destroy_BANG_$arity$2(this$,cause);\n} else {\nreturn shadow$object$IObject$_destroy_BANG_$dyn_33640(this$,cause);\n}\n});\n\nshadow.object.get_type = (function shadow$object$get_type(this$){\nreturn shadow.object._type(this$);\n});\nshadow.object.get_type_attr = (function shadow$object$get_type_attr(var_args){\nvar G__33451 = arguments.length;\nswitch (G__33451) {\ncase 2:\nreturn shadow.object.get_type_attr.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn shadow.object.get_type_attr.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.object.get_type_attr.cljs$core$IFn$_invoke$arity$2 = (function (oref,key){\nif((oref == null)){\nreturn null;\n} else {\nvar type_id = (((oref instanceof cljs.core.Keyword))?oref:shadow.object._type(oref));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(shadow.object.object_defs),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type_id,key], null));\n}\n}));\n\n(shadow.object.get_type_attr.cljs$core$IFn$_invoke$arity$3 = (function (oref,key,default$){\nif((oref == null)){\nreturn default$;\n} else {\nvar type_id = (((oref instanceof cljs.core.Keyword))?oref:shadow.object._type(oref));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(shadow.object.object_defs),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type_id,key], null),default$);\n}\n}));\n\n(shadow.object.get_type_attr.cljs$lang$maxFixedArity = 3);\n\nshadow.object.get_dom = (function shadow$object$get_dom(oref){\nreturn new cljs.core.Keyword(\"shadow.object\",\"dom\",\"shadow.object/dom\",-1238263311).cljs$core$IFn$_invoke$arity$1(oref);\n});\ngoog.exportSymbol('shadow.object.get_dom', shadow.object.get_dom);\nshadow.object.get_by_id = (function shadow$object$get_by_id(id){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(shadow.object.instances),id);\n});\ngoog.exportSymbol('shadow.object.get_by_id', shadow.object.get_by_id);\nshadow.object.get_from_dom = (function shadow$object$get_from_dom(dom){\nvar oid = shadow.dom.data(dom,new cljs.core.Keyword(null,\"oid\",\"oid\",-768692334));\nif(cljs.core.truth_(oid)){\nreturn shadow.object.get_by_id(parseInt(oid,(10)));\n} else {\nreturn null;\n}\n});\ngoog.exportSymbol('shadow.object.get_from_dom', shadow.object.get_from_dom);\nshadow.object.is_object_QMARK_ = (function shadow$object$is_object_QMARK_(obj_or_dom){\nvar or__4126__auto__ = (((!((obj_or_dom == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === obj_or_dom.shadow$object$IObject$))))?true:(((!obj_or_dom.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(shadow.object.IObject,obj_or_dom):false)):cljs.core.native_satisfies_QMARK_(shadow.object.IObject,obj_or_dom));\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nreturn shadow.object.get_from_dom(obj_or_dom);\n}\n});\nshadow.object.equal_QMARK_ = (function shadow$object$equal_QMARK_(obj,obj_or_dom){\nif((((!((obj == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.shadow$object$IObject$))))?true:(((!obj.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(shadow.object.IObject,obj):false)):cljs.core.native_satisfies_QMARK_(shadow.object.IObject,obj))){\n} else {\nthrow (new Error([\"Assert failed: \",\"can only test objects\",\"\\n\",\"(satisfies? IObject obj)\"].join('')));\n}\n\nif((((!((obj_or_dom == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === obj_or_dom.shadow$object$IObject$))))?true:(((!obj_or_dom.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(shadow.object.IObject,obj_or_dom):false)):cljs.core.native_satisfies_QMARK_(shadow.object.IObject,obj_or_dom))){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(shadow.object._id(obj),shadow.object._id(obj_or_dom));\n} else {\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(shadow.object._id(obj),(function (){var temp__5735__auto__ = shadow.dom.data(obj_or_dom,new cljs.core.Keyword(null,\"oid\",\"oid\",-768692334));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar oid = temp__5735__auto__;\nreturn parseInt(oid,(10));\n} else {\nreturn null;\n}\n})());\n}\n});\nshadow.object.get_parent = (function shadow$object$get_parent(oref){\nvar temp__5735__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(shadow.object.instance_parent),shadow.object._id(oref));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar parent_id = temp__5735__auto__;\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(shadow.object.instances),parent_id);\n} else {\nreturn null;\n}\n});\ngoog.exportSymbol('shadow.object.get_parent', shadow.object.get_parent);\nshadow.object.get_parent_of_type = (function shadow$object$get_parent_of_type(oref,parent_type){\nvar parent = new cljs.core.Keyword(null,\"parent\",\"parent\",-878878779).cljs$core$IFn$_invoke$arity$1(oref);\nwhile(true){\nif(cljs.core.truth_(parent)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(shadow.object._type(parent),parent_type)){\nreturn parent;\n} else {\nvar G__33646 = new cljs.core.Keyword(null,\"parent\",\"parent\",-878878779).cljs$core$IFn$_invoke$arity$1(parent);\nparent = G__33646;\ncontinue;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});\ngoog.exportSymbol('shadow.object.get_parent_of_type', shadow.object.get_parent_of_type);\nshadow.object.get_children = (function shadow$object$get_children(parent){\nvar parent_id = shadow.object._id(parent);\nvar child_ids = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(shadow.object.instance_children),parent_id,cljs.core.PersistentVector.EMPTY);\nvar instances = cljs.core.deref(shadow.object.instances);\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__33456_SHARP_){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(instances,p1__33456_SHARP_);\n}),child_ids));\n});\ngoog.exportSymbol('shadow.object.get_children', shadow.object.get_children);\nshadow.object.tree_seq = (function shadow$object$tree_seq(var_args){\nvar G__33458 = arguments.length;\nswitch (G__33458) {\ncase 1:\nreturn shadow.object.tree_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn shadow.object.tree_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\ngoog.exportSymbol('shadow.object.tree_seq', shadow.object.tree_seq);\n\n(shadow.object.tree_seq.cljs$core$IFn$_invoke$arity$1 = (function (root){\nreturn shadow.object.tree_seq.cljs$core$IFn$_invoke$arity$2(root,(function (node){\nreturn true;\n}));\n}));\n\n(shadow.object.tree_seq.cljs$core$IFn$_invoke$arity$2 = (function (root,branch_QMARK_){\nreturn cljs.core.tree_seq(branch_QMARK_,shadow.object.get_children,root);\n}));\n\n(shadow.object.tree_seq.cljs$lang$maxFixedArity = 2);\n\nshadow.object.get_children_of_type = (function shadow$object$get_children_of_type(oref,type){\nvar type_kw = (((type instanceof cljs.core.Keyword))?type:shadow.object._type(type));\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__33459_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type_kw,shadow.object._type(p1__33459_SHARP_));\n}),shadow.object.get_children(oref));\n});\n/**\n * basically (get-children (:parent this))\n */\nshadow.object.get_siblings = (function shadow$object$get_siblings(p__33460){\nvar map__33461 = p__33460;\nvar map__33461__$1 = (((((!((map__33461 == null))))?(((((map__33461.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__33461.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33461):map__33461);\nvar oref = map__33461__$1;\nvar parent = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33461__$1,new cljs.core.Keyword(null,\"parent\",\"parent\",-878878779));\nif(cljs.core.truth_(parent)){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"object has no parent, thus has no siblings\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"oref\",\"oref\",-1547494840),oref], null));\n}\n\nreturn shadow.object.get_children(parent);\n});\n/**\n * returns set of all siblings of a common type\n */\nshadow.object.get_siblings_of_type = (function shadow$object$get_siblings_of_type(var_args){\nvar G__33465 = arguments.length;\nswitch (G__33465) {\ncase 1:\nreturn shadow.object.get_siblings_of_type.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn shadow.object.get_siblings_of_type.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.object.get_siblings_of_type.cljs$core$IFn$_invoke$arity$1 = (function (oref){\nreturn shadow.object.get_siblings_of_type.cljs$core$IFn$_invoke$arity$2(oref,oref);\n}));\n\n(shadow.object.get_siblings_of_type.cljs$core$IFn$_invoke$arity$2 = (function (oref,type){\nvar type_kw = (((type instanceof cljs.core.Keyword))?type:shadow.object._type(type));\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__33463_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type_kw,shadow.object._type(p1__33463_SHARP_));\n}),shadow.object.get_siblings(oref));\n}));\n\n(shadow.object.get_siblings_of_type.cljs$lang$maxFixedArity = 2);\n\nshadow.object.get_collection_item = (function shadow$object$get_collection_item(oref){\nvar item_key = new cljs.core.Keyword(\"shadow.object\",\"coll-item-key\",\"shadow.object/coll-item-key\",1888444366).cljs$core$IFn$_invoke$arity$1(oref);\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(oref,item_key);\n});\n/**\n * find the object that contains this dom node\n */\nshadow.object.find_containing_object = (function shadow$object$find_containing_object(dom){\nwhile(true){\nvar temp__5733__auto__ = shadow.object.get_from_dom(dom);\nif(cljs.core.truth_(temp__5733__auto__)){\nvar obj = temp__5733__auto__;\nreturn obj;\n} else {\nvar temp__5735__auto__ = dom.parentElement;\nif(cljs.core.truth_(temp__5735__auto__)){\nvar parent = temp__5735__auto__;\nvar G__33649 = parent;\ndom = G__33649;\ncontinue;\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\nshadow.object.notify_BANG_ = (function shadow$object$notify_BANG_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___33650 = arguments.length;\nvar i__4737__auto___33651 = (0);\nwhile(true){\nif((i__4737__auto___33651 < len__4736__auto___33650)){\nargs__4742__auto__.push((arguments[i__4737__auto___33651]));\n\nvar G__33652 = (i__4737__auto___33651 + (1));\ni__4737__auto___33651 = G__33652;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn shadow.object.notify_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(shadow.object.notify_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (oref,ev,args){\nvar temp__5735__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(oref,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"shadow.object\",\"reactions\",\"shadow.object/reactions\",1966199633),ev], null));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar reactions_to_trigger = temp__5735__auto__;\nvar seq__33469 = cljs.core.seq(reactions_to_trigger);\nvar chunk__33470 = null;\nvar count__33471 = (0);\nvar i__33472 = (0);\nwhile(true){\nif((i__33472 < count__33471)){\nvar rfn = chunk__33470.cljs$core$IIndexed$_nth$arity$2(null,i__33472);\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(rfn,cljs.core.cons(oref,args));\n\n\nvar G__33655 = seq__33469;\nvar G__33656 = chunk__33470;\nvar G__33657 = count__33471;\nvar G__33658 = (i__33472 + (1));\nseq__33469 = G__33655;\nchunk__33470 = G__33656;\ncount__33471 = G__33657;\ni__33472 = G__33658;\ncontinue;\n} else {\nvar temp__5735__auto____$1 = cljs.core.seq(seq__33469);\nif(temp__5735__auto____$1){\nvar seq__33469__$1 = temp__5735__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(seq__33469__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__33469__$1);\nvar G__33659 = cljs.core.chunk_rest(seq__33469__$1);\nvar G__33660 = c__4556__auto__;\nvar G__33661 = cljs.core.count(c__4556__auto__);\nvar G__33662 = (0);\nseq__33469 = G__33659;\nchunk__33470 = G__33660;\ncount__33471 = G__33661;\ni__33472 = G__33662;\ncontinue;\n} else {\nvar rfn = cljs.core.first(seq__33469__$1);\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(rfn,cljs.core.cons(oref,args));\n\n\nvar G__33663 = cljs.core.next(seq__33469__$1);\nvar G__33664 = null;\nvar G__33665 = (0);\nvar G__33666 = (0);\nseq__33469 = G__33663;\nchunk__33470 = G__33664;\ncount__33471 = G__33665;\ni__33472 = G__33666;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn null;\n}\n}));\n\n(shadow.object.notify_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(shadow.object.notify_BANG_.cljs$lang$applyTo = (function (seq33466){\nvar G__33467 = cljs.core.first(seq33466);\nvar seq33466__$1 = cljs.core.next(seq33466);\nvar G__33468 = cljs.core.first(seq33466__$1);\nvar seq33466__$2 = cljs.core.next(seq33466__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__33467,G__33468,seq33466__$2);\n}));\n\nshadow.object.do_notify_tree = (function shadow$object$do_notify_tree(current_obj,ev,notify_fn){\nvar seq__33473_33667 = cljs.core.seq(shadow.object.get_children(current_obj));\nvar chunk__33474_33668 = null;\nvar count__33475_33669 = (0);\nvar i__33476_33670 = (0);\nwhile(true){\nif((i__33476_33670 < count__33475_33669)){\nvar child_33674 = chunk__33474_33668.cljs$core$IIndexed$_nth$arity$2(null,i__33476_33670);\n(shadow.object.do_notify_tree.cljs$core$IFn$_invoke$arity$3 ? shadow.object.do_notify_tree.cljs$core$IFn$_invoke$arity$3(child_33674,ev,notify_fn) : shadow.object.do_notify_tree.call(null,child_33674,ev,notify_fn));\n\n\nvar G__33675 = seq__33473_33667;\nvar G__33676 = chunk__33474_33668;\nvar G__33677 = count__33475_33669;\nvar G__33678 = (i__33476_33670 + (1));\nseq__33473_33667 = G__33675;\nchunk__33474_33668 = G__33676;\ncount__33475_33669 = G__33677;\ni__33476_33670 = G__33678;\ncontinue;\n} else {\nvar temp__5735__auto___33679 = cljs.core.seq(seq__33473_33667);\nif(temp__5735__auto___33679){\nvar seq__33473_33680__$1 = temp__5735__auto___33679;\nif(cljs.core.chunked_seq_QMARK_(seq__33473_33680__$1)){\nvar c__4556__auto___33681 = cljs.core.chunk_first(seq__33473_33680__$1);\nvar G__33682 = cljs.core.chunk_rest(seq__33473_33680__$1);\nvar G__33683 = c__4556__auto___33681;\nvar G__33684 = cljs.core.count(c__4556__auto___33681);\nvar G__33685 = (0);\nseq__33473_33667 = G__33682;\nchunk__33474_33668 = G__33683;\ncount__33475_33669 = G__33684;\ni__33476_33670 = G__33685;\ncontinue;\n} else {\nvar child_33686 = cljs.core.first(seq__33473_33680__$1);\n(shadow.object.do_notify_tree.cljs$core$IFn$_invoke$arity$3 ? shadow.object.do_notify_tree.cljs$core$IFn$_invoke$arity$3(child_33686,ev,notify_fn) : shadow.object.do_notify_tree.call(null,child_33686,ev,notify_fn));\n\n\nvar G__33687 = cljs.core.next(seq__33473_33680__$1);\nvar G__33688 = null;\nvar G__33689 = (0);\nvar G__33690 = (0);\nseq__33473_33667 = G__33687;\nchunk__33474_33668 = G__33688;\ncount__33475_33669 = G__33689;\ni__33476_33670 = G__33690;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn (notify_fn.cljs$core$IFn$_invoke$arity$1 ? notify_fn.cljs$core$IFn$_invoke$arity$1(current_obj) : notify_fn.call(null,current_obj));\n});\nshadow.object.notify_tree_BANG_ = (function shadow$object$notify_tree_BANG_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___33692 = arguments.length;\nvar i__4737__auto___33693 = (0);\nwhile(true){\nif((i__4737__auto___33693 < len__4736__auto___33692)){\nargs__4742__auto__.push((arguments[i__4737__auto___33693]));\n\nvar G__33694 = (i__4737__auto___33693 + (1));\ni__4737__auto___33693 = G__33694;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn shadow.object.notify_tree_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(shadow.object.notify_tree_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (oref,ev,args){\nvar notify_fn = (function (obj){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(shadow.object.notify_BANG_,obj,ev,args);\n});\nreturn shadow.object.do_notify_tree(oref,ev,notify_fn);\n}));\n\n(shadow.object.notify_tree_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(shadow.object.notify_tree_BANG_.cljs$lang$applyTo = (function (seq33477){\nvar G__33478 = cljs.core.first(seq33477);\nvar seq33477__$1 = cljs.core.next(seq33477);\nvar G__33479 = cljs.core.first(seq33477__$1);\nvar seq33477__$2 = cljs.core.next(seq33477__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__33478,G__33479,seq33477__$2);\n}));\n\nshadow.object.notify_down_BANG_ = shadow.object.notify_tree_BANG_;\nshadow.object.notify_up_BANG_ = (function shadow$object$notify_up_BANG_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___33700 = arguments.length;\nvar i__4737__auto___33701 = (0);\nwhile(true){\nif((i__4737__auto___33701 < len__4736__auto___33700)){\nargs__4742__auto__.push((arguments[i__4737__auto___33701]));\n\nvar G__33703 = (i__4737__auto___33701 + (1));\ni__4737__auto___33701 = G__33703;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn shadow.object.notify_up_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(shadow.object.notify_up_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (oref,ev,args){\nvar current = shadow.object.get_parent(oref);\nwhile(true){\nif(cljs.core.truth_(current)){\ncljs.core.apply.cljs$core$IFn$_invoke$arity$4(shadow.object.notify_BANG_,current,ev,args);\n\nvar G__33704 = shadow.object.get_parent(current);\ncurrent = G__33704;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}));\n\n(shadow.object.notify_up_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(shadow.object.notify_up_BANG_.cljs$lang$applyTo = (function (seq33480){\nvar G__33481 = cljs.core.first(seq33480);\nvar seq33480__$1 = cljs.core.next(seq33480);\nvar G__33482 = cljs.core.first(seq33480__$1);\nvar seq33480__$2 = cljs.core.next(seq33480__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__33481,G__33482,seq33480__$2);\n}));\n\nshadow.object.update_BANG_ = (function shadow$object$update_BANG_(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___33709 = arguments.length;\nvar i__4737__auto___33710 = (0);\nwhile(true){\nif((i__4737__auto___33710 < len__4736__auto___33709)){\nargs__4742__auto__.push((arguments[i__4737__auto___33710]));\n\nvar G__33711 = (i__4737__auto___33710 + (1));\ni__4737__auto___33710 = G__33711;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn shadow.object.update_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(shadow.object.update_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (oref,update_fn,args){\nif(cljs.core.fn_QMARK_(update_fn)){\n} else {\nthrow [\"update! expects a fn as second arg, not \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([update_fn], 0))].join('');\n}\n\nvar id = shadow.object._id(oref);\nvar data = shadow.object._data(oref);\nvar work_fn = (function (data__$1){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(update_fn,data__$1,args);\n});\nreturn shadow.object._update(oref,work_fn);\n}));\n\n(shadow.object.update_BANG_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(shadow.object.update_BANG_.cljs$lang$applyTo = (function (seq33483){\nvar G__33484 = cljs.core.first(seq33483);\nvar seq33483__$1 = cljs.core.next(seq33483);\nvar G__33485 = cljs.core.first(seq33483__$1);\nvar seq33483__$2 = cljs.core.next(seq33483__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__33484,G__33485,seq33483__$2);\n}));\n\nshadow.object.return_value = (function shadow$object$return_value(oref,return_value){\nreturn shadow.object.update_BANG_.cljs$core$IFn$_invoke$arity$variadic(oref,cljs.core.assoc,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"shadow.object\",\"return-value\",\"shadow.object/return-value\",1397593360),return_value], 0));\n});\nshadow.object.set_parent_BANG_ = (function shadow$object$set_parent_BANG_(child,parent){\nvar child_id = shadow.object._id(child);\nvar parent_id = shadow.object._id(parent);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(shadow.object.instance_parent,cljs.core.assoc,child_id,parent_id);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(shadow.object.instance_children,(function (x){\nvar current = cljs.core.get.cljs$core$IFn$_invoke$arity$3(x,parent_id,cljs.core.PersistentHashSet.EMPTY);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(x,parent_id,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(current,child_id));\n}));\n\nreturn true;\n});\nshadow.object.dom_destroy = (function shadow$object$dom_destroy(this$,cause){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cause,new cljs.core.Keyword(null,\"parent\",\"parent\",-878878779))){\nreturn shadow.dom.remove(new cljs.core.Keyword(\"shadow.object\",\"dom\",\"shadow.object/dom\",-1238263311).cljs$core$IFn$_invoke$arity$1(this$));\n} else {\nvar temp__5733__auto__ = shadow.object.get_type_attr.cljs$core$IFn$_invoke$arity$2(this$,new cljs.core.Keyword(\"dom\",\"remove\",\"dom/remove\",-131527420));\nif(cljs.core.truth_(temp__5733__auto__)){\nvar custom_remove = temp__5733__auto__;\nvar G__33486 = this$;\nvar G__33487 = new cljs.core.Keyword(\"shadow.object\",\"dom\",\"shadow.object/dom\",-1238263311).cljs$core$IFn$_invoke$arity$1(this$);\nreturn (custom_remove.cljs$core$IFn$_invoke$arity$2 ? custom_remove.cljs$core$IFn$_invoke$arity$2(G__33486,G__33487) : custom_remove.call(null,G__33486,G__33487));\n} else {\nreturn shadow.dom.remove(new cljs.core.Keyword(\"shadow.object\",\"dom\",\"shadow.object/dom\",-1238263311).cljs$core$IFn$_invoke$arity$1(this$));\n}\n}\n});\nshadow.object.destroy_BANG_ = (function shadow$object$destroy_BANG_(var_args){\nvar G__33489 = arguments.length;\nswitch (G__33489) {\ncase 1:\nreturn shadow.object.destroy_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn shadow.object.destroy_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.object.destroy_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (oref){\nreturn shadow.object.destroy_BANG_.cljs$core$IFn$_invoke$arity$2(oref,new cljs.core.Keyword(null,\"direct\",\"direct\",-1775717856));\n}));\n\n(shadow.object.destroy_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (oref,cause){\nreturn shadow.object._destroy_BANG_(oref,cause);\n}));\n\n(shadow.object.destroy_BANG_.cljs$lang$maxFixedArity = 2);\n\nshadow.object.bind_dom_events = (function shadow$object$bind_dom_events(oref,dom,dom_events){\nif((cljs.core.rem(cljs.core.count(dom_events),(2)) === (0))){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"object defined invalid event\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"object-type\",\"object-type\",-1889869015),shadow.object._type(oref),new cljs.core.Keyword(\"dom\",\"events\",\"dom/events\",1793437527),dom_events], null));\n}\n\nvar seq__33490 = cljs.core.seq(cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),dom_events));\nvar chunk__33491 = null;\nvar count__33492 = (0);\nvar i__33493 = (0);\nwhile(true){\nif((i__33493 < count__33492)){\nvar vec__33500 = chunk__33491.cljs$core$IIndexed$_nth$arity$2(null,i__33493);\nvar ev = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33500,(0),null);\nvar handler = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33500,(1),null);\nvar ev_def = vec__33500;\nif((handler == null)){\nthrow [\"ev with nil handler \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev], 0))].join('');\n} else {\n}\n\nvar handler_33721__$1 = (((handler instanceof cljs.core.Keyword))?((function (seq__33490,chunk__33491,count__33492,i__33493,vec__33500,ev,handler,ev_def){\nreturn (function (this$,e,el){\nreturn shadow.object.notify_BANG_.cljs$core$IFn$_invoke$arity$variadic(this$,handler,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,el], 0));\n});})(seq__33490,chunk__33491,count__33492,i__33493,vec__33500,ev,handler,ev_def))\n:handler);\nshadow.dom.on.cljs$core$IFn$_invoke$arity$3(dom,ev,((function (seq__33490,chunk__33491,count__33492,i__33493,handler_33721__$1,vec__33500,ev,handler,ev_def){\nreturn (function shadow$object$bind_dom_events_$_dom_event_handler(e,el){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"A\",el.tagName)){\nshadow.dom.ev_stop.cljs$core$IFn$_invoke$arity$1(e);\n} else {\n}\n\nreturn (handler_33721__$1.cljs$core$IFn$_invoke$arity$3 ? handler_33721__$1.cljs$core$IFn$_invoke$arity$3(oref,e,el) : handler_33721__$1.call(null,oref,e,el));\n});})(seq__33490,chunk__33491,count__33492,i__33493,handler_33721__$1,vec__33500,ev,handler,ev_def))\n);\n\n\nvar G__33726 = seq__33490;\nvar G__33727 = chunk__33491;\nvar G__33728 = count__33492;\nvar G__33729 = (i__33493 + (1));\nseq__33490 = G__33726;\nchunk__33491 = G__33727;\ncount__33492 = G__33728;\ni__33493 = G__33729;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__33490);\nif(temp__5735__auto__){\nvar seq__33490__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__33490__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__33490__$1);\nvar G__33730 = cljs.core.chunk_rest(seq__33490__$1);\nvar G__33731 = c__4556__auto__;\nvar G__33732 = cljs.core.count(c__4556__auto__);\nvar G__33733 = (0);\nseq__33490 = G__33730;\nchunk__33491 = G__33731;\ncount__33492 = G__33732;\ni__33493 = G__33733;\ncontinue;\n} else {\nvar vec__33503 = cljs.core.first(seq__33490__$1);\nvar ev = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33503,(0),null);\nvar handler = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33503,(1),null);\nvar ev_def = vec__33503;\nif((handler == null)){\nthrow [\"ev with nil handler \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ev], 0))].join('');\n} else {\n}\n\nvar handler_33738__$1 = (((handler instanceof cljs.core.Keyword))?((function (seq__33490,chunk__33491,count__33492,i__33493,vec__33503,ev,handler,ev_def,seq__33490__$1,temp__5735__auto__){\nreturn (function (this$,e,el){\nreturn shadow.object.notify_BANG_.cljs$core$IFn$_invoke$arity$variadic(this$,handler,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,el], 0));\n});})(seq__33490,chunk__33491,count__33492,i__33493,vec__33503,ev,handler,ev_def,seq__33490__$1,temp__5735__auto__))\n:handler);\nshadow.dom.on.cljs$core$IFn$_invoke$arity$3(dom,ev,((function (seq__33490,chunk__33491,count__33492,i__33493,handler_33738__$1,vec__33503,ev,handler,ev_def,seq__33490__$1,temp__5735__auto__){\nreturn (function shadow$object$bind_dom_events_$_dom_event_handler(e,el){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"A\",el.tagName)){\nshadow.dom.ev_stop.cljs$core$IFn$_invoke$arity$1(e);\n} else {\n}\n\nreturn (handler_33738__$1.cljs$core$IFn$_invoke$arity$3 ? handler_33738__$1.cljs$core$IFn$_invoke$arity$3(oref,e,el) : handler_33738__$1.call(null,oref,e,el));\n});})(seq__33490,chunk__33491,count__33492,i__33493,handler_33738__$1,vec__33503,ev,handler,ev_def,seq__33490__$1,temp__5735__auto__))\n);\n\n\nvar G__33747 = cljs.core.next(seq__33490__$1);\nvar G__33748 = null;\nvar G__33749 = (0);\nvar G__33750 = (0);\nseq__33490 = G__33747;\nchunk__33491 = G__33748;\ncount__33492 = G__33749;\ni__33493 = G__33750;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\nshadow.object.reaction_merge = (function shadow$object$reaction_merge(result,p__33506){\nvar vec__33507 = p__33506;\nvar event = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33507,(0),null);\nvar handler = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33507,(1),null);\nif(cljs.core.truth_((function (){var and__4115__auto__ = event;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn handler;\n} else {\nreturn and__4115__auto__;\n}\n})())){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"invalid reaction\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"event\",\"event\",301435442),event,new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612),handler], null));\n}\n\nvar current = cljs.core.get.cljs$core$IFn$_invoke$arity$3(result,event,cljs.core.List.EMPTY);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result,event,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(current,handler));\n});\nshadow.object.merge_reactions = (function shadow$object$merge_reactions(result,behavior){\nif(cljs.core.sequential_QMARK_(behavior)){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"behaviors must be vectors\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"behavior\",\"behavior\",1202392908),behavior], null));\n}\n\nif(cljs.core.even_QMARK_(cljs.core.count(behavior))){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"invalid behavior\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"behavior\",\"behavior\",1202392908),behavior], null));\n}\n\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(shadow.object.reaction_merge,result,cljs.core.reverse(cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),behavior)));\n});\nshadow.object.merge_behaviors = (function shadow$object$merge_behaviors(result,behavior){\nif(cljs.core.sequential_QMARK_(behavior)){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(result,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"shadow.object\",\"reactions\",\"shadow.object/reactions\",1966199633)], null),shadow.object.merge_reactions,behavior);\n} else {\nif(cljs.core.map_QMARK_(behavior)){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(result,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"shadow.object\",\"reactions\",\"shadow.object/reactions\",1966199633)], null),shadow.object.merge_reactions,new cljs.core.Keyword(null,\"on\",\"on\",173873944).cljs$core$IFn$_invoke$arity$2(behavior,cljs.core.PersistentVector.EMPTY)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"watch\",\"watch\",380988277)], null),(function (watches){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(watches,new cljs.core.Keyword(null,\"watch\",\"watch\",380988277).cljs$core$IFn$_invoke$arity$2(behavior,cljs.core.PersistentVector.EMPTY));\n})),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"dom\",\"events\",\"dom/events\",1793437527)], null),(function (default$){\nreturn cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(default$,new cljs.core.Keyword(\"dom\",\"events\",\"dom/events\",1793437527).cljs$core$IFn$_invoke$arity$2(behavior,cljs.core.PersistentVector.EMPTY)));\n}));\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"behavior not understood\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"behavior\",\"behavior\",1202392908),behavior], null));\n\n}\n}\n});\nshadow.object.define = (function shadow$object$define(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___33762 = arguments.length;\nvar i__4737__auto___33763 = (0);\nwhile(true){\nif((i__4737__auto___33763 < len__4736__auto___33762)){\nargs__4742__auto__.push((arguments[i__4737__auto___33763]));\n\nvar G__33764 = (i__4737__auto___33763 + (1));\ni__4737__auto___33763 = G__33764;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn shadow.object.define.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(shadow.object.define.cljs$core$IFn$_invoke$arity$variadic = (function (id,args){\nif((id instanceof cljs.core.Keyword)){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"object id needs to be a keyword\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),id,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null));\n}\n\nif(cljs.core.even_QMARK_(cljs.core.count(args))){\n} else {\nthrow [\"invalid object definition \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(id),\" args: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0))].join('');\n}\n\nif(cljs.core.contains_QMARK_(cljs.core.deref(shadow.object.object_defs),id)){\nconsole.warn([\"object already defined \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(id)].join(''));\n} else {\n}\n\ntry{var odef = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,args);\nvar reactions = shadow.object.merge_reactions(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"on\",\"on\",173873944).cljs$core$IFn$_invoke$arity$2(odef,cljs.core.PersistentVector.EMPTY));\nvar odef__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(odef,new cljs.core.Keyword(\"shadow.object\",\"id\",\"shadow.object/id\",-647954841),id,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"shadow.object\",\"reactions\",\"shadow.object/reactions\",1966199633),reactions], 0));\nvar odef__$2 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(shadow.object.merge_behaviors,odef__$1,cljs.core.reverse(new cljs.core.Keyword(null,\"behaviors\",\"behaviors\",120724909).cljs$core$IFn$_invoke$arity$2(odef__$1,cljs.core.PersistentVector.EMPTY)));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(shadow.object.object_defs,cljs.core.assoc,id,odef__$2);\n\nreturn odef__$2;\n}catch (e33512){if((e33512 instanceof Object)){\nvar e = e33512;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"failed to define object\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),id,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null));\n} else {\nthrow e33512;\n\n}\n}}));\n\n(shadow.object.define.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(shadow.object.define.cljs$lang$applyTo = (function (seq33510){\nvar G__33511 = cljs.core.first(seq33510);\nvar seq33510__$1 = cljs.core.next(seq33510);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__33511,seq33510__$1);\n}));\n\nshadow.object.merge_defaults = (function shadow$object$merge_defaults(data,type){\nvar defaults = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(shadow.object.object_defs),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type,new cljs.core.Keyword(null,\"defaults\",\"defaults\",976027214)], null));\nif((defaults == null)){\nreturn data;\n} else {\nif(cljs.core.map_QMARK_(defaults)){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([defaults,data], 0));\n} else {\nif(cljs.core.fn_QMARK_(defaults)){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(defaults.cljs$core$IFn$_invoke$arity$0 ? defaults.cljs$core$IFn$_invoke$arity$0() : defaults.call(null)),data], 0));\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"invalid object defaults\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"defaults\",\"defaults\",976027214),defaults,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),type], null));\n\n}\n}\n}\n});\nshadow.object.make_dom = (function shadow$object$make_dom(var_args){\nvar G__33514 = arguments.length;\nswitch (G__33514) {\ncase 3:\nreturn shadow.object.make_dom.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn shadow.object.make_dom.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.object.make_dom.cljs$core$IFn$_invoke$arity$3 = (function (oref,dom_key,events_key){\nreturn shadow.object.make_dom.cljs$core$IFn$_invoke$arity$4(oref,dom_key,events_key,null);\n}));\n\n(shadow.object.make_dom.cljs$core$IFn$_invoke$arity$4 = (function (oref,dom_key,events_key,value){\nvar dom_fn = (((dom_key instanceof cljs.core.Keyword))?shadow.object.get_type_attr.cljs$core$IFn$_invoke$arity$2(oref,dom_key):dom_key);\nvar events = (((events_key instanceof cljs.core.Keyword))?shadow.object.get_type_attr.cljs$core$IFn$_invoke$arity$3(oref,events_key,cljs.core.PersistentVector.EMPTY):events_key);\nvar dom = (function (){var G__33515 = (dom_fn.cljs$core$IFn$_invoke$arity$2 ? dom_fn.cljs$core$IFn$_invoke$arity$2(oref,value) : dom_fn.call(null,oref,value));\nreturn (shadow.dom.build.cljs$core$IFn$_invoke$arity$1 ? shadow.dom.build.cljs$core$IFn$_invoke$arity$1(G__33515) : shadow.dom.build.call(null,G__33515));\n})();\nshadow.object.bind_dom_events(oref,dom,events);\n\nreturn dom;\n}));\n\n(shadow.object.make_dom.cljs$lang$maxFixedArity = 4);\n\nshadow.object.alive_QMARK_ = (function shadow$object$alive_QMARK_(obj){\nreturn cljs.core.contains_QMARK_(cljs.core.deref(shadow.object.instances),shadow.object._id(obj));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\nshadow.object.Watch = (function (key,handler,__meta,__extmap,__hash){\nthis.key = key;\nthis.handler = handler;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(shadow.object.Watch.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4380__auto__,k__4381__auto__){\nvar self__ = this;\nvar this__4380__auto____$1 = this;\nreturn this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4381__auto__,null);\n}));\n\n(shadow.object.Watch.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4382__auto__,k33517,else__4383__auto__){\nvar self__ = this;\nvar this__4382__auto____$1 = this;\nvar G__33521 = k33517;\nvar G__33521__$1 = (((G__33521 instanceof cljs.core.Keyword))?G__33521.fqn:null);\nswitch (G__33521__$1) {\ncase \"key\":\nreturn self__.key;\n\nbreak;\ncase \"handler\":\nreturn self__.handler;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k33517,else__4383__auto__);\n\n}\n}));\n\n(shadow.object.Watch.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4399__auto__,f__4400__auto__,init__4401__auto__){\nvar self__ = this;\nvar this__4399__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4402__auto__,p__33522){\nvar vec__33523 = p__33522;\nvar k__4403__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33523,(0),null);\nvar v__4404__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33523,(1),null);\nreturn (f__4400__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4400__auto__.cljs$core$IFn$_invoke$arity$3(ret__4402__auto__,k__4403__auto__,v__4404__auto__) : f__4400__auto__.call(null,ret__4402__auto__,k__4403__auto__,v__4404__auto__));\n}),init__4401__auto__,this__4399__auto____$1);\n}));\n\n(shadow.object.Watch.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4394__auto__,writer__4395__auto__,opts__4396__auto__){\nvar self__ = this;\nvar this__4394__auto____$1 = this;\nvar pr_pair__4397__auto__ = (function (keyval__4398__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4396__auto__,keyval__4398__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4395__auto__,pr_pair__4397__auto__,\"#shadow.object.Watch{\",\", \",\"}\",opts__4396__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),self__.key],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612),self__.handler],null))], null),self__.__extmap));\n}));\n\n(shadow.object.Watch.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__33516){\nvar self__ = this;\nvar G__33516__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__33516__$1,2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(shadow.object.Watch.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4378__auto__){\nvar self__ = this;\nvar this__4378__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(shadow.object.Watch.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4375__auto__){\nvar self__ = this;\nvar this__4375__auto____$1 = this;\nreturn (new shadow.object.Watch(self__.key,self__.handler,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(shadow.object.Watch.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4384__auto__){\nvar self__ = this;\nvar this__4384__auto____$1 = this;\nreturn (2 + cljs.core.count(self__.__extmap));\n}));\n\n(shadow.object.Watch.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4376__auto__){\nvar self__ = this;\nvar this__4376__auto____$1 = this;\nvar h__4238__auto__ = self__.__hash;\nif((!((h__4238__auto__ == null)))){\nreturn h__4238__auto__;\n} else {\nvar h__4238__auto____$1 = (function (coll__4377__auto__){\nreturn (-17677043 ^ cljs.core.hash_unordered_coll(coll__4377__auto__));\n})(this__4376__auto____$1);\n(self__.__hash = h__4238__auto____$1);\n\nreturn h__4238__auto____$1;\n}\n}));\n\n(shadow.object.Watch.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this33518,other33519){\nvar self__ = this;\nvar this33518__$1 = this;\nreturn (((!((other33519 == null)))) && ((this33518__$1.constructor === other33519.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this33518__$1.key,other33519.key)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this33518__$1.handler,other33519.handler)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this33518__$1.__extmap,other33519.__extmap)));\n}));\n\n(shadow.object.Watch.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4389__auto__,k__4390__auto__){\nvar self__ = this;\nvar this__4389__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),null,new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612),null], null), null),k__4390__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4389__auto____$1),self__.__meta),k__4390__auto__);\n} else {\nreturn (new shadow.object.Watch(self__.key,self__.handler,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4390__auto__)),null));\n}\n}));\n\n(shadow.object.Watch.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4387__auto__,k__4388__auto__,G__33516){\nvar self__ = this;\nvar this__4387__auto____$1 = this;\nvar pred__33526 = cljs.core.keyword_identical_QMARK_;\nvar expr__33527 = k__4388__auto__;\nif(cljs.core.truth_((pred__33526.cljs$core$IFn$_invoke$arity$2 ? pred__33526.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),expr__33527) : pred__33526.call(null,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),expr__33527)))){\nreturn (new shadow.object.Watch(G__33516,self__.handler,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__33526.cljs$core$IFn$_invoke$arity$2 ? pred__33526.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612),expr__33527) : pred__33526.call(null,new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612),expr__33527)))){\nreturn (new shadow.object.Watch(self__.key,G__33516,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new shadow.object.Watch(self__.key,self__.handler,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4388__auto__,G__33516),null));\n}\n}\n}));\n\n(shadow.object.Watch.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4392__auto__){\nvar self__ = this;\nvar this__4392__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),self__.key,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612),self__.handler,null))], null),self__.__extmap));\n}));\n\n(shadow.object.Watch.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4379__auto__,G__33516){\nvar self__ = this;\nvar this__4379__auto____$1 = this;\nreturn (new shadow.object.Watch(self__.key,self__.handler,G__33516,self__.__extmap,self__.__hash));\n}));\n\n(shadow.object.Watch.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4385__auto__,entry__4386__auto__){\nvar self__ = this;\nvar this__4385__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4386__auto__)){\nreturn this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4386__auto__,(0)),cljs.core._nth(entry__4386__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4385__auto____$1,entry__4386__auto__);\n}\n}));\n\n(shadow.object.Watch.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"key\",\"key\",124488940,null),new cljs.core.Symbol(null,\"handler\",\"handler\",1444934915,null)], null);\n}));\n\n(shadow.object.Watch.cljs$lang$type = true);\n\n(shadow.object.Watch.cljs$lang$ctorPrSeq = (function (this__4423__auto__){\nreturn (new cljs.core.List(null,\"shadow.object/Watch\",null,(1),null));\n}));\n\n(shadow.object.Watch.cljs$lang$ctorPrWriter = (function (this__4423__auto__,writer__4424__auto__){\nreturn cljs.core._write(writer__4424__auto__,\"shadow.object/Watch\");\n}));\n\n/**\n * Positional factory function for shadow.object/Watch.\n */\nshadow.object.__GT_Watch = (function shadow$object$__GT_Watch(key,handler){\nreturn (new shadow.object.Watch(key,handler,null,null,null));\n});\n\n/**\n * Factory function for shadow.object/Watch, taking a map of keywords to field values.\n */\nshadow.object.map__GT_Watch = (function shadow$object$map__GT_Watch(G__33520){\nvar extmap__4419__auto__ = (function (){var G__33529 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__33520,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612)], 0));\nif(cljs.core.record_QMARK_(G__33520)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__33529);\n} else {\nreturn G__33529;\n}\n})();\nreturn (new shadow.object.Watch(new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(G__33520),new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612).cljs$core$IFn$_invoke$arity$1(G__33520),null,cljs.core.not_empty(extmap__4419__auto__),null));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IEquiv}\n * @implements {shadow.object.IObject}\n * @implements {cljs.core.async.impl.protocols.ReadPort}\n * @implements {cljs.core.IDeref}\n * @implements {shadow.dom.IElement}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {shadow.dom.SVGElement}\n * @implements {cljs.core.ILookup}\n*/\nshadow.object.ObjectRef = (function (id,type,data,watches,result_chan){\nthis.id = id;\nthis.type = type;\nthis.data = data;\nthis.watches = watches;\nthis.result_chan = result_chan;\nthis.cljs$lang$protocol_mask$partition0$ = 2149613824;\nthis.cljs$lang$protocol_mask$partition1$ = 2;\n});\n(shadow.object.ObjectRef.prototype.cljs$core$async$impl$protocols$ReadPort$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.object.ObjectRef.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = (function (this$,handler){\nvar self__ = this;\nvar this$__$1 = this;\nreturn cljs.core.async.impl.protocols.take_BANG_(self__.result_chan,handler);\n}));\n\n(shadow.object.ObjectRef.prototype.toString = (function (){\nvar self__ = this;\nvar this$ = this;\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0));\n}));\n\n(shadow.object.ObjectRef.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this$,k){\nvar self__ = this;\nvar this$__$1 = this;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"parent\",\"parent\",-878878779),k)){\nreturn shadow.object.get_parent(this$__$1);\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(self__.data,k);\n}\n}));\n\n(shadow.object.ObjectRef.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this$,k,d){\nvar self__ = this;\nvar this$__$1 = this;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"parent\",\"parent\",-878878779),k)){\nreturn shadow.object.get_parent(this$__$1);\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.data,k,d);\n}\n}));\n\n(shadow.object.ObjectRef.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this$,writer,opts){\nvar self__ = this;\nvar this$__$1 = this;\nreturn cljs.core._write(writer,[\"#<ObjectRef {:id \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.id),\", :type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.type),\"}>\"].join(''));\n}));\n\n(shadow.object.ObjectRef.prototype.shadow$dom$SVGElement$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.object.ObjectRef.prototype.shadow$dom$SVGElement$_to_svg$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn new cljs.core.Keyword(\"shadow.object\",\"dom\",\"shadow.object/dom\",-1238263311).cljs$core$IFn$_invoke$arity$1(self__.data);\n}));\n\n(shadow.object.ObjectRef.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){\nvar self__ = this;\nvar this$__$1 = this;\nreturn (((other instanceof shadow.object.ObjectRef)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.shadow$object$IObject$_id$arity$1(null),other.shadow$object$IObject$_id$arity$1(null))));\n}));\n\n(shadow.object.ObjectRef.prototype.shadow$dom$IElement$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.object.ObjectRef.prototype.shadow$dom$IElement$_to_dom$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn new cljs.core.Keyword(\"shadow.object\",\"dom\",\"shadow.object/dom\",-1238263311).cljs$core$IFn$_invoke$arity$1(self__.data);\n}));\n\n(shadow.object.ObjectRef.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){\nvar self__ = this;\nvar this$__$1 = this;\nthrow (new Error(\"who be calling?\"));\n}));\n\n(shadow.object.ObjectRef.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn (self__.watches = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.watches,(new shadow.object.Watch(key,f,null,null,null))));\n}));\n\n(shadow.object.ObjectRef.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn (self__.watches = cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p1__33530_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587).cljs$core$IFn$_invoke$arity$1(p1__33530_SHARP_));\n}),self__.watches));\n}));\n\n(shadow.object.ObjectRef.prototype.shadow$object$IObject$ = cljs.core.PROTOCOL_SENTINEL);\n\n(shadow.object.ObjectRef.prototype.shadow$object$IObject$_id$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.id;\n}));\n\n(shadow.object.ObjectRef.prototype.shadow$object$IObject$_type$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.type;\n}));\n\n(shadow.object.ObjectRef.prototype.shadow$object$IObject$_data$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.data;\n}));\n\n(shadow.object.ObjectRef.prototype.shadow$object$IObject$_update$arity$2 = (function (this$,update_fn){\nvar self__ = this;\nvar this$__$1 = this;\nvar old = self__.data;\nvar new$ = (update_fn.cljs$core$IFn$_invoke$arity$1 ? update_fn.cljs$core$IFn$_invoke$arity$1(self__.data) : update_fn.call(null,self__.data));\n(self__.data = new$);\n\nvar seq__33531 = cljs.core.seq(self__.watches);\nvar chunk__33532 = null;\nvar count__33533 = (0);\nvar i__33534 = (0);\nwhile(true){\nif((i__33534 < count__33533)){\nvar map__33539 = chunk__33532.cljs$core$IIndexed$_nth$arity$2(null,i__33534);\nvar map__33539__$1 = (((((!((map__33539 == null))))?(((((map__33539.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__33539.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33539):map__33539);\nvar watch = map__33539__$1;\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33539__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\nvar handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33539__$1,new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612));\nif(shadow.object.alive_QMARK_(this$__$1)){\n(handler.cljs$core$IFn$_invoke$arity$4 ? handler.cljs$core$IFn$_invoke$arity$4(key,this$__$1,old,new$) : handler.call(null,key,this$__$1,old,new$));\n} else {\n}\n\n\nvar G__33779 = seq__33531;\nvar G__33780 = chunk__33532;\nvar G__33781 = count__33533;\nvar G__33782 = (i__33534 + (1));\nseq__33531 = G__33779;\nchunk__33532 = G__33780;\ncount__33533 = G__33781;\ni__33534 = G__33782;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__33531);\nif(temp__5735__auto__){\nvar seq__33531__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__33531__$1)){\nvar c__4556__auto__ = cljs.core.chunk_first(seq__33531__$1);\nvar G__33783 = cljs.core.chunk_rest(seq__33531__$1);\nvar G__33784 = c__4556__auto__;\nvar G__33785 = cljs.core.count(c__4556__auto__);\nvar G__33786 = (0);\nseq__33531 = G__33783;\nchunk__33532 = G__33784;\ncount__33533 = G__33785;\ni__33534 = G__33786;\ncontinue;\n} else {\nvar map__33541 = cljs.core.first(seq__33531__$1);\nvar map__33541__$1 = (((((!((map__33541 == null))))?(((((map__33541.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__33541.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33541):map__33541);\nvar watch = map__33541__$1;\nvar key = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33541__$1,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587));\nvar handler = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33541__$1,new cljs.core.Keyword(null,\"handler\",\"handler\",-195596612));\nif(shadow.object.alive_QMARK_(this$__$1)){\n(handler.cljs$core$IFn$_invoke$arity$4 ? handler.cljs$core$IFn$_invoke$arity$4(key,this$__$1,old,new$) : handler.call(null,key,this$__$1,old,new$));\n} else {\n}\n\n\nvar G__33787 = cljs.core.next(seq__33531__$1);\nvar G__33788 = null;\nvar G__33789 = (0);\nvar G__33790 = (0);\nseq__33531 = G__33787;\nchunk__33532 = G__33788;\ncount__33533 = G__33789;\ni__33534 = G__33790;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(shadow.object.ObjectRef.prototype.shadow$object$IObject$_destroy_BANG_$arity$2 = (function (this$,cause){\nvar self__ = this;\nvar this$__$1 = this;\nvar parent_id = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(shadow.object.instance_parent),self__.id);\nvar seq__33543_33791 = cljs.core.seq(shadow.object.get_children(this$__$1));\nvar chunk__33544_33792 = null;\nvar count__33545_33793 = (0);\nvar i__33546_33794 = (0);\nwhile(true){\nif((i__33546_33794 < count__33545_33793)){\nvar child_33795 = chunk__33544_33792.cljs$core$IIndexed$_nth$arity$2(null,i__33546_33794);\nshadow.object._destroy_BANG_(child_33795,new cljs.core.Keyword(null,\"parent\",\"parent\",-878878779));\n\n\nvar G__33796 = seq__33543_33791;\nvar G__33797 = chunk__33544_33792;\nvar G__33798 = count__33545_33793;\nvar G__33799 = (i__33546_33794 + (1));\nseq__33543_33791 = G__33796;\nchunk__33544_33792 = G__33797;\ncount__33545_33793 = G__33798;\ni__33546_33794 = G__33799;\ncontinue;\n} else {\nvar temp__5735__auto___33800 = cljs.core.seq(seq__33543_33791);\nif(temp__5735__auto___33800){\nvar seq__33543_33801__$1 = temp__5735__auto___33800;\nif(cljs.core.chunked_seq_QMARK_(seq__33543_33801__$1)){\nvar c__4556__auto___33802 = cljs.core.chunk_first(seq__33543_33801__$1);\nvar G__33803 = cljs.core.chunk_rest(seq__33543_33801__$1);\nvar G__33804 = c__4556__auto___33802;\nvar G__33805 = cljs.core.count(c__4556__auto___33802);\nvar G__33806 = (0);\nseq__33543_33791 = G__33803;\nchunk__33544_33792 = G__33804;\ncount__33545_33793 = G__33805;\ni__33546_33794 = G__33806;\ncontinue;\n} else {\nvar child_33807 = cljs.core.first(seq__33543_33801__$1);\nshadow.object._destroy_BANG_(child_33807,new cljs.core.Keyword(null,\"parent\",\"parent\",-878878779));\n\n\nvar G__33808 = cljs.core.next(seq__33543_33801__$1);\nvar G__33809 = null;\nvar G__33810 = (0);\nvar G__33811 = (0);\nseq__33543_33791 = G__33808;\nchunk__33544_33792 = G__33809;\ncount__33545_33793 = G__33810;\ni__33546_33794 = G__33811;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nshadow.object.notify_BANG_.cljs$core$IFn$_invoke$arity$variadic(this$__$1,new cljs.core.Keyword(null,\"destroy\",\"destroy\",-843660405),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cause], 0));\n\nshadow.object.dom_destroy(this$__$1,cause);\n\nvar return_value_33812 = new cljs.core.Keyword(\"shadow.object\",\"return-value\",\"shadow.object/return-value\",1397593360).cljs$core$IFn$_invoke$arity$1(this$__$1);\nif((return_value_33812 == null)){\n} else {\ncljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(self__.result_chan,return_value_33812);\n}\n\ncljs.core.async.close_BANG_(self__.result_chan);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(shadow.object.instances,cljs.core.dissoc,self__.id);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(shadow.object.instance_parent,cljs.core.dissoc,self__.id);\n\nif(cljs.core.truth_(parent_id)){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(shadow.object.instance_children,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [parent_id], null),cljs.core.disj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([self__.id], 0));\n} else {\nreturn null;\n}\n}));\n\n(shadow.object.ObjectRef.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn self__.data;\n}));\n\n(shadow.object.ObjectRef.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"id\",\"id\",252129435,null),new cljs.core.Symbol(null,\"type\",\"type\",-1480165421,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"data\",\"data\",1407862150,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"result-chan\",\"result-chan\",3070926,null)], null);\n}));\n\n(shadow.object.ObjectRef.cljs$lang$type = true);\n\n(shadow.object.ObjectRef.cljs$lang$ctorStr = \"shadow.object/ObjectRef\");\n\n(shadow.object.ObjectRef.cljs$lang$ctorPrWriter = (function (this__4369__auto__,writer__4370__auto__,opt__4371__auto__){\nreturn cljs.core._write(writer__4370__auto__,\"shadow.object/ObjectRef\");\n}));\n\n/**\n * Positional factory function for shadow.object/ObjectRef.\n */\nshadow.object.__GT_ObjectRef = (function shadow$object$__GT_ObjectRef(id,type,data,watches,result_chan){\nreturn (new shadow.object.ObjectRef(id,type,data,watches,result_chan));\n});\n\nshadow.object.add_reaction_BANG_ = (function shadow$object$add_reaction_BANG_(var_args){\nvar G__33548 = arguments.length;\nswitch (G__33548) {\ncase 3:\nreturn shadow.object.add_reaction_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 2:\nreturn shadow.object.add_reaction_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.object.add_reaction_BANG_.cljs$core$IFn$_invoke$arity$3 = (function (oref,ev,handler_fn){\nreturn shadow.object.add_reaction_BANG_.cljs$core$IFn$_invoke$arity$2(oref,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ev,handler_fn], null));\n}));\n\n(shadow.object.add_reaction_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (oref,list){\nreturn shadow.object.update_BANG_.cljs$core$IFn$_invoke$arity$variadic(oref,cljs.core.update_in,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"shadow.object\",\"reactions\",\"shadow.object/reactions\",1966199633)], null),shadow.object.merge_reactions,list], 0));\n}));\n\n(shadow.object.add_reaction_BANG_.cljs$lang$maxFixedArity = 3);\n\nshadow.object.bind_change = (function shadow$object$bind_change(var_args){\nvar G__33550 = arguments.length;\nswitch (G__33550) {\ncase 3:\nreturn shadow.object.bind_change.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn shadow.object.bind_change.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.object.bind_change.cljs$core$IFn$_invoke$arity$3 = (function (oref,attr,callback){\nreturn shadow.object.bind_change.cljs$core$IFn$_invoke$arity$4(oref,attr,callback,cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"bind-change\"));\n}));\n\n(shadow.object.bind_change.cljs$core$IFn$_invoke$arity$4 = (function (oref,attr,callback,watch_key){\nif((((!((oref == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === oref.shadow$object$IObject$))))?true:(((!oref.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(shadow.object.IObject,oref):false)):cljs.core.native_satisfies_QMARK_(shadow.object.IObject,oref))){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"binding currently only supports shadow objects, other atoms might leak, may add later\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"oref\",\"oref\",-1547494840),oref,new cljs.core.Keyword(null,\"attr\",\"attr\",-604132353),attr], null));\n}\n\nvar attr__$1 = ((cljs.core.sequential_QMARK_(attr))?attr:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [attr], null));\nreturn cljs.core.add_watch(oref,watch_key,(function shadow$object$bind_change_watch(_,___$1,old,new$){\nvar ov = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(old,attr__$1);\nvar nv = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new$,attr__$1);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ov,nv)){\nreturn null;\n} else {\nreturn (callback.cljs$core$IFn$_invoke$arity$2 ? callback.cljs$core$IFn$_invoke$arity$2(ov,nv) : callback.call(null,ov,nv));\n}\n}));\n}));\n\n(shadow.object.bind_change.cljs$lang$maxFixedArity = 4);\n\nshadow.object.dom_enter = (function shadow$object$dom_enter(parent,child){\nshadow.dom.append.cljs$core$IFn$_invoke$arity$2(parent,child);\n\nif(cljs.core.truth_(shadow.dom.contains_QMARK_.cljs$core$IFn$_invoke$arity$1(parent))){\nreturn shadow.object.notify_tree_BANG_(child,new cljs.core.Keyword(\"dom\",\"entered\",\"dom/entered\",506699596));\n} else {\nreturn null;\n}\n});\nshadow.object.create = (function shadow$object$create(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___33821 = arguments.length;\nvar i__4737__auto___33822 = (0);\nwhile(true){\nif((i__4737__auto___33822 < len__4736__auto___33821)){\nargs__4742__auto__.push((arguments[i__4737__auto___33822]));\n\nvar G__33823 = (i__4737__auto___33822 + (1));\ni__4737__auto___33822 = G__33823;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);\nreturn shadow.object.create.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);\n});\n\n(shadow.object.create.cljs$core$IFn$_invoke$arity$variadic = (function (type,args,node_children){\nif(cljs.core.contains_QMARK_(cljs.core.deref(shadow.object.object_defs),type)){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"cannot create unknown child type: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(type)].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),type,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null));\n}\n\nif(cljs.core.map_QMARK_(args)){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"so/create second arg must be a map\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null));\n}\n\nvar oid = shadow.object.next_id();\nvar parent = new cljs.core.Keyword(null,\"parent\",\"parent\",-878878779).cljs$core$IFn$_invoke$arity$1(args);\nvar result_chan = cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1((1));\nvar odef = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(shadow.object.object_defs),type);\nvar obj = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(shadow.object.merge_defaults(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(args,new cljs.core.Keyword(\"shadow.object\",\"object-id\",\"shadow.object/object-id\",-685993804),oid,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"shadow.object\",\"reactions\",\"shadow.object/reactions\",1966199633),cljs.core.get.cljs$core$IFn$_invoke$arity$3(odef,new cljs.core.Keyword(\"shadow.object\",\"reactions\",\"shadow.object/reactions\",1966199633),cljs.core.PersistentArrayMap.EMPTY)], 0)),type),new cljs.core.Keyword(null,\"parent\",\"parent\",-878878779),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"dom\",\"dom\",-1236537922)], 0));\nvar oref = (new shadow.object.ObjectRef(oid,type,obj,cljs.core.PersistentVector.EMPTY,result_chan));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(shadow.object.instances,cljs.core.assoc,oid,oref);\n\nif(cljs.core.truth_(parent)){\nshadow.object.set_parent_BANG_(oref,parent);\n} else {\n}\n\nshadow.object.notify_BANG_(oref,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434));\n\nvar dom_events_33828 = new cljs.core.Keyword(\"dom\",\"events\",\"dom/events\",1793437527).cljs$core$IFn$_invoke$arity$2(odef,cljs.core.PersistentVector.EMPTY);\nvar temp__5733__auto___33829 = new cljs.core.Keyword(null,\"dom\",\"dom\",-1236537922).cljs$core$IFn$_invoke$arity$1(args);\nif(cljs.core.truth_(temp__5733__auto___33829)){\nvar dom_33830 = temp__5733__auto___33829;\nshadow.dom.set_data(dom_33830,new cljs.core.Keyword(null,\"oid\",\"oid\",-768692334),oid);\n\nshadow.object.bind_dom_events(oref,dom_33830,dom_events_33828);\n\nshadow.object.update_BANG_.cljs$core$IFn$_invoke$arity$variadic(oref,cljs.core.assoc,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"shadow.object\",\"dom\",\"shadow.object/dom\",-1238263311),dom_33830], 0));\n\nshadow.object.notify_BANG_.cljs$core$IFn$_invoke$arity$variadic(oref,new cljs.core.Keyword(\"dom\",\"init\",\"dom/init\",-1875647652),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([dom_33830], 0));\n} else {\nvar temp__5735__auto___33832 = new cljs.core.Keyword(null,\"dom\",\"dom\",-1236537922).cljs$core$IFn$_invoke$arity$1(odef);\nif(cljs.core.truth_(temp__5735__auto___33832)){\nvar dom_fn_33833 = temp__5735__auto___33832;\nvar dom_33834 = (function (){var G__33555 = (dom_fn_33833.cljs$core$IFn$_invoke$arity$2 ? dom_fn_33833.cljs$core$IFn$_invoke$arity$2(oref,node_children) : dom_fn_33833.call(null,oref,node_children));\nreturn (shadow.dom.build.cljs$core$IFn$_invoke$arity$1 ? shadow.dom.build.cljs$core$IFn$_invoke$arity$1(G__33555) : shadow.dom.build.call(null,G__33555));\n})();\nshadow.dom.set_data(dom_33834,new cljs.core.Keyword(null,\"oid\",\"oid\",-768692334),oid);\n\nshadow.object.update_BANG_.cljs$core$IFn$_invoke$arity$variadic(oref,cljs.core.assoc,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"shadow.object\",\"dom\",\"shadow.object/dom\",-1238263311),dom_33834], 0));\n\nshadow.object.bind_dom_events(oref,dom_33834,dom_events_33828);\n\nshadow.object.notify_BANG_.cljs$core$IFn$_invoke$arity$variadic(oref,new cljs.core.Keyword(\"dom\",\"init\",\"dom/init\",-1875647652),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([dom_33834], 0));\n} else {\n}\n}\n\nvar temp__5735__auto___33836 = new cljs.core.Keyword(null,\"watch\",\"watch\",380988277).cljs$core$IFn$_invoke$arity$1(odef);\nif(cljs.core.truth_(temp__5735__auto___33836)){\nvar watches_33837 = temp__5735__auto___33836;\nvar seq__33556_33838 = cljs.core.seq(cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),watches_33837));\nvar chunk__33557_33839 = null;\nvar count__33558_33840 = (0);\nvar i__33559_33841 = (0);\nwhile(true){\nif((i__33559_33841 < count__33558_33840)){\nvar vec__33566_33842 = chunk__33557_33839.cljs$core$IIndexed$_nth$arity$2(null,i__33559_33841);\nvar attr_33843 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33566_33842,(0),null);\nvar handler_33844 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33566_33842,(1),null);\nshadow.object.bind_change.cljs$core$IFn$_invoke$arity$3(oref,attr_33843,((function (seq__33556_33838,chunk__33557_33839,count__33558_33840,i__33559_33841,vec__33566_33842,attr_33843,handler_33844,watches_33837,temp__5735__auto___33836,oid,parent,result_chan,odef,obj,oref){\nreturn (function (old,new$){\nreturn (handler_33844.cljs$core$IFn$_invoke$arity$3 ? handler_33844.cljs$core$IFn$_invoke$arity$3(oref,old,new$) : handler_33844.call(null,oref,old,new$));\n});})(seq__33556_33838,chunk__33557_33839,count__33558_33840,i__33559_33841,vec__33566_33842,attr_33843,handler_33844,watches_33837,temp__5735__auto___33836,oid,parent,result_chan,odef,obj,oref))\n);\n\n\nvar G__33848 = seq__33556_33838;\nvar G__33849 = chunk__33557_33839;\nvar G__33850 = count__33558_33840;\nvar G__33851 = (i__33559_33841 + (1));\nseq__33556_33838 = G__33848;\nchunk__33557_33839 = G__33849;\ncount__33558_33840 = G__33850;\ni__33559_33841 = G__33851;\ncontinue;\n} else {\nvar temp__5735__auto___33852__$1 = cljs.core.seq(seq__33556_33838);\nif(temp__5735__auto___33852__$1){\nvar seq__33556_33853__$1 = temp__5735__auto___33852__$1;\nif(cljs.core.chunked_seq_QMARK_(seq__33556_33853__$1)){\nvar c__4556__auto___33854 = cljs.core.chunk_first(seq__33556_33853__$1);\nvar G__33855 = cljs.core.chunk_rest(seq__33556_33853__$1);\nvar G__33856 = c__4556__auto___33854;\nvar G__33857 = cljs.core.count(c__4556__auto___33854);\nvar G__33858 = (0);\nseq__33556_33838 = G__33855;\nchunk__33557_33839 = G__33856;\ncount__33558_33840 = G__33857;\ni__33559_33841 = G__33858;\ncontinue;\n} else {\nvar vec__33569_33859 = cljs.core.first(seq__33556_33853__$1);\nvar attr_33860 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33569_33859,(0),null);\nvar handler_33861 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33569_33859,(1),null);\nshadow.object.bind_change.cljs$core$IFn$_invoke$arity$3(oref,attr_33860,((function (seq__33556_33838,chunk__33557_33839,count__33558_33840,i__33559_33841,vec__33569_33859,attr_33860,handler_33861,seq__33556_33853__$1,temp__5735__auto___33852__$1,watches_33837,temp__5735__auto___33836,oid,parent,result_chan,odef,obj,oref){\nreturn (function (old,new$){\nreturn (handler_33861.cljs$core$IFn$_invoke$arity$3 ? handler_33861.cljs$core$IFn$_invoke$arity$3(oref,old,new$) : handler_33861.call(null,oref,old,new$));\n});})(seq__33556_33838,chunk__33557_33839,count__33558_33840,i__33559_33841,vec__33569_33859,attr_33860,handler_33861,seq__33556_33853__$1,temp__5735__auto___33852__$1,watches_33837,temp__5735__auto___33836,oid,parent,result_chan,odef,obj,oref))\n);\n\n\nvar G__33862 = cljs.core.next(seq__33556_33853__$1);\nvar G__33863 = null;\nvar G__33864 = (0);\nvar G__33865 = (0);\nseq__33556_33838 = G__33862;\nchunk__33557_33839 = G__33863;\ncount__33558_33840 = G__33864;\ni__33559_33841 = G__33865;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n} else {\n}\n\nreturn oref;\n}));\n\n(shadow.object.create.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(shadow.object.create.cljs$lang$applyTo = (function (seq33552){\nvar G__33553 = cljs.core.first(seq33552);\nvar seq33552__$1 = cljs.core.next(seq33552);\nvar G__33554 = cljs.core.first(seq33552__$1);\nvar seq33552__$2 = cljs.core.next(seq33552__$1);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__33553,G__33554,seq33552__$2);\n}));\n\n/**\n * [oref attr node-gen] produces a node via (node-gen new-value)\n * watches obj for changes and replaces the generated node on change (node-gen defaults to str)\n * \n *   only use if the node has no attached behavior like clicks, use bind with an extra object for those\n */\nshadow.object.bind_simple = (function shadow$object$bind_simple(var_args){\nvar G__33574 = arguments.length;\nswitch (G__33574) {\ncase 2:\nreturn shadow.object.bind_simple.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn shadow.object.bind_simple.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.object.bind_simple.cljs$core$IFn$_invoke$arity$2 = (function (oref,attr){\nreturn shadow.object.bind_simple.cljs$core$IFn$_invoke$arity$3(oref,attr,cljs.core.str);\n}));\n\n(shadow.object.bind_simple.cljs$core$IFn$_invoke$arity$3 = (function (oref,attr,node_gen){\nvar attr__$1 = ((cljs.core.sequential_QMARK_(attr))?attr:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [attr], null));\nvar node_get = (function (p1__33572_SHARP_){\nvar G__33575 = (node_gen.cljs$core$IFn$_invoke$arity$1 ? node_gen.cljs$core$IFn$_invoke$arity$1(p1__33572_SHARP_) : node_gen.call(null,p1__33572_SHARP_));\nreturn (shadow.dom.build.cljs$core$IFn$_invoke$arity$1 ? shadow.dom.build.cljs$core$IFn$_invoke$arity$1(G__33575) : shadow.dom.build.call(null,G__33575));\n});\nvar node = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(node_get(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(oref,attr__$1)));\nvar bind_key = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"bind\");\nshadow.object.bind_change.cljs$core$IFn$_invoke$arity$3(oref,attr__$1,(function (old,new$){\nvar new_node = node_get(new$);\nvar current_node = cljs.core.deref(node);\nshadow.dom.replace_node(current_node,new_node);\n\nreturn cljs.core.reset_BANG_(node,new_node);\n}));\n\nreturn cljs.core.deref(node);\n}));\n\n(shadow.object.bind_simple.cljs$lang$maxFixedArity = 3);\n\n/**\n * bind the given attribute a child item\n *   the item will be recreated whenever the value changes (old one will be destroyed)\n */\nshadow.object.bind = (function shadow$object$bind(oref,attr,item_type,item_key,item_attrs){\nvar attr__$1 = ((cljs.core.sequential_QMARK_(attr))?attr:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [attr], null));\nvar curval = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(oref,attr__$1);\nvar make_child_fn = (function (value){\nreturn shadow.object.create(item_type,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([item_attrs,cljs.core.PersistentArrayMap.createAsIfByAssoc([new cljs.core.Keyword(null,\"parent\",\"parent\",-878878779),oref,item_key,value])], 0)));\n});\nvar child = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(make_child_fn(curval));\nshadow.object.bind_change.cljs$core$IFn$_invoke$arity$3(oref,attr__$1,(function (old,new$){\nvar new_child = make_child_fn(new$);\nvar current_node = cljs.core.deref(child);\nshadow.dom.replace_node(current_node,new_child);\n\nshadow.object.destroy_BANG_.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(child));\n\ncljs.core.reset_BANG_(child,new_child);\n\nreturn (shadow.object.notify_down_BANG_.cljs$core$IFn$_invoke$arity$2 ? shadow.object.notify_down_BANG_.cljs$core$IFn$_invoke$arity$2(new_child,new cljs.core.Keyword(\"dom\",\"entered\",\"dom/entered\",506699596)) : shadow.object.notify_down_BANG_.call(null,new_child,new cljs.core.Keyword(\"dom\",\"entered\",\"dom/entered\",506699596)));\n}));\n\nreturn cljs.core.deref(child);\n});\nshadow.object.coll_destroy_children = (function shadow$object$coll_destroy_children(children,c,diff){\nvar seq__33576_33872 = cljs.core.seq(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(children,(c + diff),c));\nvar chunk__33577_33873 = null;\nvar count__33578_33874 = (0);\nvar i__33579_33875 = (0);\nwhile(true){\nif((i__33579_33875 < count__33578_33874)){\nvar obj_33876 = chunk__33577_33873.cljs$core$IIndexed$_nth$arity$2(null,i__33579_33875);\nvar obj_33877__$1 = shadow.object.get_from_dom(obj_33876);\nshadow.object.destroy_BANG_.cljs$core$IFn$_invoke$arity$1(obj_33877__$1);\n\n\nvar G__33878 = seq__33576_33872;\nvar G__33879 = chunk__33577_33873;\nvar G__33880 = count__33578_33874;\nvar G__33881 = (i__33579_33875 + (1));\nseq__33576_33872 = G__33878;\nchunk__33577_33873 = G__33879;\ncount__33578_33874 = G__33880;\ni__33579_33875 = G__33881;\ncontinue;\n} else {\nvar temp__5735__auto___33882 = cljs.core.seq(seq__33576_33872);\nif(temp__5735__auto___33882){\nvar seq__33576_33883__$1 = temp__5735__auto___33882;\nif(cljs.core.chunked_seq_QMARK_(seq__33576_33883__$1)){\nvar c__4556__auto___33884 = cljs.core.chunk_first(seq__33576_33883__$1);\nvar G__33885 = cljs.core.chunk_rest(seq__33576_33883__$1);\nvar G__33886 = c__4556__auto___33884;\nvar G__33887 = cljs.core.count(c__4556__auto___33884);\nvar G__33888 = (0);\nseq__33576_33872 = G__33885;\nchunk__33577_33873 = G__33886;\ncount__33578_33874 = G__33887;\ni__33579_33875 = G__33888;\ncontinue;\n} else {\nvar obj_33889 = cljs.core.first(seq__33576_33883__$1);\nvar obj_33890__$1 = shadow.object.get_from_dom(obj_33889);\nshadow.object.destroy_BANG_.cljs$core$IFn$_invoke$arity$1(obj_33890__$1);\n\n\nvar G__33892 = cljs.core.next(seq__33576_33883__$1);\nvar G__33893 = null;\nvar G__33894 = (0);\nvar G__33895 = (0);\nseq__33576_33872 = G__33892;\nchunk__33577_33873 = G__33893;\ncount__33578_33874 = G__33894;\ni__33579_33875 = G__33895;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(children,(0),(c + diff));\n});\nshadow.object.bind_children = (function shadow$object$bind_children(var_args){\nvar G__33582 = arguments.length;\nswitch (G__33582) {\ncase 5:\nreturn shadow.object.bind_children.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ncase 6:\nreturn shadow.object.bind_children.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(shadow.object.bind_children.cljs$core$IFn$_invoke$arity$5 = (function (node,parent,attr,item_type,item_key){\nreturn shadow.object.bind_children.cljs$core$IFn$_invoke$arity$6(node,parent,attr,item_type,item_key,(function (p1__33580_SHARP_){\nreturn cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector,p1__33580_SHARP_);\n}));\n}));\n\n(shadow.object.bind_children.cljs$core$IFn$_invoke$arity$6 = (function (node,parent,attr,item_type,item_key,coll_transform){\nvar attr__$1 = ((cljs.core.sequential_QMARK_(attr))?attr:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [attr], null));\nvar update_children = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(true);\nvar coll_dom = (shadow.dom.build.cljs$core$IFn$_invoke$arity$1 ? shadow.dom.build.cljs$core$IFn$_invoke$arity$1(node) : shadow.dom.build.call(null,node));\nvar make_item_fn = (function (p__33583){\nvar vec__33584 = p__33583;\nvar key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33584,(0),null);\nvar val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33584,(1),null);\nvar obj = shadow.object.create(item_type,cljs.core.PersistentArrayMap.createAsIfByAssoc([new cljs.core.Keyword(null,\"parent\",\"parent\",-878878779),parent,new cljs.core.Keyword(\"shadow.object\",\"coll-path\",\"shadow.object/coll-path\",1583850048),attr__$1,new cljs.core.Keyword(\"shadow.object\",\"coll-key\",\"shadow.object/coll-key\",827543616),key,new cljs.core.Keyword(\"shadow.object\",\"coll-item-key\",\"shadow.object/coll-item-key\",1888444366),item_key,item_key,val]));\nshadow.object.bind_change.cljs$core$IFn$_invoke$arity$3(obj,item_key,(function (old,new$){\nvar parent_key = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(attr__$1,new cljs.core.Keyword(\"shadow.object\",\"coll-key\",\"shadow.object/coll-key\",827543616).cljs$core$IFn$_invoke$arity$1(obj));\n(shadow.object.log.cljs$core$IFn$_invoke$arity$6 ? shadow.object.log.cljs$core$IFn$_invoke$arity$6(\"direct child update\",parent,obj,key,parent_key,new$) : shadow.object.log.call(null,\"direct child update\",parent,obj,key,parent_key,new$));\n\ncljs.core.reset_BANG_(update_children,false);\n\nshadow.object.update_BANG_.cljs$core$IFn$_invoke$arity$variadic(parent,cljs.core.assoc_in,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([parent_key,new$], 0));\n\nreturn cljs.core.reset_BANG_(update_children,true);\n}));\n\nreturn obj;\n});\nvar seq__33587_33905 = cljs.core.seq((function (){var G__33592 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(parent,attr__$1);\nreturn (coll_transform.cljs$core$IFn$_invoke$arity$1 ? coll_transform.cljs$core$IFn$_invoke$arity$1(G__33592) : coll_transform.call(null,G__33592));\n})());\nvar chunk__33588_33906 = null;\nvar count__33589_33907 = (0);\nvar i__33590_33908 = (0);\nwhile(true){\nif((i__33590_33908 < count__33589_33907)){\nvar item_33909 = chunk__33588_33906.cljs$core$IIndexed$_nth$arity$2(null,i__33590_33908);\nshadow.object.dom_enter(coll_dom,make_item_fn(item_33909));\n\n\nvar G__33910 = seq__33587_33905;\nvar G__33911 = chunk__33588_33906;\nvar G__33912 = count__33589_33907;\nvar G__33913 = (i__33590_33908 + (1));\nseq__33587_33905 = G__33910;\nchunk__33588_33906 = G__33911;\ncount__33589_33907 = G__33912;\ni__33590_33908 = G__33913;\ncontinue;\n} else {\nvar temp__5735__auto___33924 = cljs.core.seq(seq__33587_33905);\nif(temp__5735__auto___33924){\nvar seq__33587_33925__$1 = temp__5735__auto___33924;\nif(cljs.core.chunked_seq_QMARK_(seq__33587_33925__$1)){\nvar c__4556__auto___33926 = cljs.core.chunk_first(seq__33587_33925__$1);\nvar G__33928 = cljs.core.chunk_rest(seq__33587_33925__$1);\nvar G__33929 = c__4556__auto___33926;\nvar G__33930 = cljs.core.count(c__4556__auto___33926);\nvar G__33931 = (0);\nseq__33587_33905 = G__33928;\nchunk__33588_33906 = G__33929;\ncount__33589_33907 = G__33930;\ni__33590_33908 = G__33931;\ncontinue;\n} else {\nvar item_33932 = cljs.core.first(seq__33587_33925__$1);\nshadow.object.dom_enter(coll_dom,make_item_fn(item_33932));\n\n\nvar G__33937 = cljs.core.next(seq__33587_33925__$1);\nvar G__33938 = null;\nvar G__33939 = (0);\nvar G__33940 = (0);\nseq__33587_33905 = G__33937;\nchunk__33588_33906 = G__33938;\ncount__33589_33907 = G__33939;\ni__33590_33908 = G__33940;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nshadow.object.bind_change.cljs$core$IFn$_invoke$arity$3(parent,attr__$1,(function shadow$object$bind_children_watch(old,new$){\nif(cljs.core.truth_(cljs.core.deref(update_children))){\nvar children = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,shadow.dom.children(coll_dom));\nvar new_coll = cljs.core.vec((coll_transform.cljs$core$IFn$_invoke$arity$1 ? coll_transform.cljs$core$IFn$_invoke$arity$1(new$) : coll_transform.call(null,new$)));\nvar count_children = cljs.core.count(children);\nvar count_new = cljs.core.count(new$);\nvar diff = (count_new - count_children);\nvar children__$1 = (((diff < (0)))?shadow.object.coll_destroy_children(children,count_children,diff):children);\nvar count_children__$1 = (function (){var x__4217__auto__ = count_new;\nvar y__4218__auto__ = count_children;\nreturn ((x__4217__auto__ < y__4218__auto__) ? x__4217__auto__ : y__4218__auto__);\n})();\nvar n__4613__auto___33942 = count_children__$1;\nvar idx_33943 = (0);\nwhile(true){\nif((idx_33943 < n__4613__auto___33942)){\nvar cn_33944 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(children__$1,idx_33943);\nvar cc_33945 = shadow.object.get_from_dom(cn_33944);\nvar ckey_33946 = new cljs.core.Keyword(\"shadow.object\",\"coll-key\",\"shadow.object/coll-key\",827543616).cljs$core$IFn$_invoke$arity$1(cc_33945);\nvar cval_33947 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cc_33945,item_key);\nvar vec__33593_33948 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(new_coll,idx_33943);\nvar nkey_33949 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33593_33948,(0),null);\nvar nval_33950 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33593_33948,(1),null);\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ckey_33946,nkey_33949)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cval_33947,nval_33950)))){\n} else {\nvar new_obj_33951 = make_item_fn(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [nkey_33949,nval_33950], null));\nshadow.dom.replace_node(cn_33944,new_obj_33951);\n\nshadow.object.destroy_BANG_.cljs$core$IFn$_invoke$arity$1(cc_33945);\n\nshadow.object.notify_tree_BANG_(new_obj_33951,new cljs.core.Keyword(\"dom\",\"entered\",\"dom/entered\",506699596));\n}\n\nvar G__33953 = (idx_33943 + (1));\nidx_33943 = G__33953;\ncontinue;\n} else {\n}\nbreak;\n}\n\nif((diff > (0))){\nvar seq__33596_33954 = cljs.core.seq(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(new_coll,count_children__$1,count_new));\nvar chunk__33597_33955 = null;\nvar count__33598_33956 = (0);\nvar i__33599_33957 = (0);\nwhile(true){\nif((i__33599_33957 < count__33598_33956)){\nvar item_33958 = chunk__33597_33955.cljs$core$IIndexed$_nth$arity$2(null,i__33599_33957);\nshadow.object.dom_enter(coll_dom,make_item_fn(item_33958));\n\n\nvar G__33959 = seq__33596_33954;\nvar G__33960 = chunk__33597_33955;\nvar G__33961 = count__33598_33956;\nvar G__33962 = (i__33599_33957 + (1));\nseq__33596_33954 = G__33959;\nchunk__33597_33955 = G__33960;\ncount__33598_33956 = G__33961;\ni__33599_33957 = G__33962;\ncontinue;\n} else {\nvar temp__5735__auto___33963 = cljs.core.seq(seq__33596_33954);\nif(temp__5735__auto___33963){\nvar seq__33596_33964__$1 = temp__5735__auto___33963;\nif(cljs.core.chunked_seq_QMARK_(seq__33596_33964__$1)){\nvar c__4556__auto___33965 = cljs.core.chunk_first(seq__33596_33964__$1);\nvar G__33966 = cljs.core.chunk_rest(seq__33596_33964__$1);\nvar G__33967 = c__4556__auto___33965;\nvar G__33968 = cljs.core.count(c__4556__auto___33965);\nvar G__33969 = (0);\nseq__33596_33954 = G__33966;\nchunk__33597_33955 = G__33967;\ncount__33598_33956 = G__33968;\ni__33599_33957 = G__33969;\ncontinue;\n} else {\nvar item_33970 = cljs.core.first(seq__33596_33964__$1);\nshadow.object.dom_enter(coll_dom,make_item_fn(item_33970));\n\n\nvar G__33971 = cljs.core.next(seq__33596_33964__$1);\nvar G__33972 = null;\nvar G__33973 = (0);\nvar G__33974 = (0);\nseq__33596_33954 = G__33971;\nchunk__33597_33955 = G__33972;\ncount__33598_33956 = G__33973;\ni__33599_33957 = G__33974;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n} else {\n}\n\nreturn shadow.object.notify_BANG_(parent,new cljs.core.Keyword(null,\"bind-children-update\",\"bind-children-update\",-1610690160));\n} else {\nreturn null;\n}\n}));\n\nreturn coll_dom;\n}));\n\n(shadow.object.bind_children.cljs$lang$maxFixedArity = 6);\n\nshadow.object.remove_in_parent_BANG_ = (function shadow$object$remove_in_parent_BANG_(oref){\nvar parent = shadow.object.get_parent(oref);\nvar key = new cljs.core.Keyword(\"shadow.object\",\"coll-key\",\"shadow.object/coll-key\",827543616).cljs$core$IFn$_invoke$arity$1(oref);\nvar value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(oref,new cljs.core.Keyword(\"shadow.object\",\"coll-item-key\",\"shadow.object/coll-item-key\",1888444366).cljs$core$IFn$_invoke$arity$1(oref));\nvar path = new cljs.core.Keyword(\"shadow.object\",\"coll-path\",\"shadow.object/coll-path\",1583850048).cljs$core$IFn$_invoke$arity$1(oref);\nif(cljs.core.truth_((function (){var and__4115__auto__ = key;\nif(cljs.core.truth_(and__4115__auto__)){\nreturn path;\n} else {\nreturn and__4115__auto__;\n}\n})())){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"remove-in-parent! should only be called from items created via so/bind-children\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"oref\",\"oref\",-1547494840),oref], null));\n}\n\nvar coll = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(parent,path);\nvar new_coll = shadow.util.remove_item_from_coll(coll,key,value);\nreturn shadow.object.notify_BANG_.cljs$core$IFn$_invoke$arity$variadic(parent,new cljs.core.Keyword(\"bind\",\"update\",\"bind/update\",1048601733),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path,new_coll], 0));\n});\nshadow.object.inspect_BANG_ = (function shadow$object$inspect_BANG_(oref){\nvar G__33600 = \"inspect!\";\nvar G__33601 = shadow.object._id(oref);\nvar G__33602 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(shadow.object._type(oref));\nvar G__33603 = cljs.core.clj__GT_js(cljs.core.deref(shadow.object._data(oref)));\nreturn (shadow.object.info.cljs$core$IFn$_invoke$arity$4 ? shadow.object.info.cljs$core$IFn$_invoke$arity$4(G__33600,G__33601,G__33602,G__33603) : shadow.object.info.call(null,G__33600,G__33601,G__33602,G__33603));\n});\nshadow.object.dump_BANG_ = (function shadow$object$dump_BANG_(){\n(shadow.object.info.cljs$core$IFn$_invoke$arity$1 ? shadow.object.info.cljs$core$IFn$_invoke$arity$1(\"--------------- LIVE OBJECTS ------------\") : shadow.object.info.call(null,\"--------------- LIVE OBJECTS ------------\"));\n\nvar seq__33604_33975 = cljs.core.seq(cljs.core.seq(cljs.core.deref(shadow.object.instances)));\nvar chunk__33605_33976 = null;\nvar count__33606_33977 = (0);\nvar i__33607_33978 = (0);\nwhile(true){\nif((i__33607_33978 < count__33606_33977)){\nvar vec__33622_33979 = chunk__33605_33976.cljs$core$IIndexed$_nth$arity$2(null,i__33607_33978);\nvar id_33980 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33622_33979,(0),null);\nvar oref_33981 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33622_33979,(1),null);\nvar G__33625_33982 = \"dump\";\nvar G__33626_33983 = id_33980;\nvar G__33627_33984 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([shadow.object._type(oref_33981)], 0));\nvar G__33628_33985 = cljs.core.deref(shadow.object._data(oref_33981));\n(shadow.object.info.cljs$core$IFn$_invoke$arity$4 ? shadow.object.info.cljs$core$IFn$_invoke$arity$4(G__33625_33982,G__33626_33983,G__33627_33984,G__33628_33985) : shadow.object.info.call(null,G__33625_33982,G__33626_33983,G__33627_33984,G__33628_33985));\n\n\nvar G__33986 = seq__33604_33975;\nvar G__33987 = chunk__33605_33976;\nvar G__33988 = count__33606_33977;\nvar G__33989 = (i__33607_33978 + (1));\nseq__33604_33975 = G__33986;\nchunk__33605_33976 = G__33987;\ncount__33606_33977 = G__33988;\ni__33607_33978 = G__33989;\ncontinue;\n} else {\nvar temp__5735__auto___33990 = cljs.core.seq(seq__33604_33975);\nif(temp__5735__auto___33990){\nvar seq__33604_33991__$1 = temp__5735__auto___33990;\nif(cljs.core.chunked_seq_QMARK_(seq__33604_33991__$1)){\nvar c__4556__auto___33992 = cljs.core.chunk_first(seq__33604_33991__$1);\nvar G__33993 = cljs.core.chunk_rest(seq__33604_33991__$1);\nvar G__33994 = c__4556__auto___33992;\nvar G__33995 = cljs.core.count(c__4556__auto___33992);\nvar G__33996 = (0);\nseq__33604_33975 = G__33993;\nchunk__33605_33976 = G__33994;\ncount__33606_33977 = G__33995;\ni__33607_33978 = G__33996;\ncontinue;\n} else {\nvar vec__33629_33997 = cljs.core.first(seq__33604_33991__$1);\nvar id_33998 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33629_33997,(0),null);\nvar oref_33999 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33629_33997,(1),null);\nvar G__33632_34000 = \"dump\";\nvar G__33633_34001 = id_33998;\nvar G__33634_34002 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([shadow.object._type(oref_33999)], 0));\nvar G__33635_34003 = cljs.core.deref(shadow.object._data(oref_33999));\n(shadow.object.info.cljs$core$IFn$_invoke$arity$4 ? shadow.object.info.cljs$core$IFn$_invoke$arity$4(G__33632_34000,G__33633_34001,G__33634_34002,G__33635_34003) : shadow.object.info.call(null,G__33632_34000,G__33633_34001,G__33634_34002,G__33635_34003));\n\n\nvar G__34004 = cljs.core.next(seq__33604_33991__$1);\nvar G__34005 = null;\nvar G__34006 = (0);\nvar G__34007 = (0);\nseq__33604_33975 = G__34004;\nchunk__33605_33976 = G__34005;\ncount__33606_33977 = G__34006;\ni__33607_33978 = G__34007;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn (shadow.object.info.cljs$core$IFn$_invoke$arity$1 ? shadow.object.info.cljs$core$IFn$_invoke$arity$1(\"--------------- //LIVE OBJECTS ------------\") : shadow.object.info.call(null,\"--------------- //LIVE OBJECTS ------------\"));\n});\ngoog.exportSymbol('shadow.object.dump_BANG_', shadow.object.dump_BANG_);\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","shadow/object.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$tree-seq"]],"~:name","~$shadow.object","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$shadow.util","^L","~$dom","~$shadow.dom","~$data","~$clojure.data","~$async","~$cljs.core.async","~$cljs.core","^S","~$goog","^T","^N","^N","^R","^R","~$cljs.core.async.impl.protocols","^U","~$util","^L","~$str","~$clojure.string","^X","^X","^P","^P","~$async-impl","^U"],"~:seen",["^D",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^S","^S","^L","^L","^Q","^R","^R","^R","^V","^L"],"~:form",["~#list",["~$ns","^G",["^13",["~:refer-clojure","~:exclude",["^13",["^E"]]]],["^13",["^[",["^N","~:as","^M"],["^R","^17","^Q"],["^X","^17","^W"],["^P","^17","^O"],["^U","^17","^Y"],["^L","^17","^V"]]]]],"~:flags",["^ ","^[",["^D",[]]],"~:js-deps",["^ "],"~:deps",["^T","^S","^N","^R","^X","^P","^U","^L"]],"^I","^G","~:resource-id",["~:shadow.build.classpath/resource","shadow/object.cljs"],"~:compiled-at",1615899957628,"~:resource-name","shadow/object.cljs","~:warnings",[],"~:source","(ns shadow.object\n  (:refer-clojure :exclude (tree-seq))\n  (:require [shadow.dom :as dom]\n            [cljs.core.async :as async]\n            [clojure.string :as str]\n            [clojure.data :as data]\n            [cljs.core.async.impl.protocols :as async-impl]\n            [shadow.util :as util]\n            ))\n\n(def console-friendly util/console-friendly)\n\n(def log util/log)\n(def debug util/log)\n(def info util/log)\n(def warn util/log)\n(def error util/log)\n\n(def obj-id (atom 0))\n(defn next-id []\n  (swap! obj-id inc))\n\n(def object-defs (atom {}))\n(def behavior-fns (atom {}))\n\n(def instances (atom {}))\n(def instance-parent (atom {}))\n(def instance-children (atom {}))\n\n(def events (atom {}))\n\n(defn define-event [event-name desc args]\n  (swap! events assoc event-name {:id event-name\n                                  :description desc\n                                  :args args}))\n\n(defn unmunge [s]\n  (-> s\n      (str/replace #\"_DOT_\" \".\")\n      (str/replace #\"_\" \"-\")\n      ))\n\n(define-event :init\n  \"object initialization\"\n  [])\n\n(define-event :destroy\n  \"object descruction\"\n  [[:cause \"cause of destruction, :parent means the parent was destroyed, :direct is default\"]])\n\n(define-event :dom/init\n  \"called after the dom was created but has not entered the document yet\"\n  [[:dom \"the dom that was created\"]])\n\n(define-event :dom/entered\n  \"should be called whenever a dom node is added to the document, since that\n   is not in control of this library its up to you to call this\n   use (so/notify-tree! your-obj :dom/entered) to notify the node and every child you created\"\n  [])\n\n(define-event :bind-children-update\n  \"need to rethink this\"\n  [])\n\n(defprotocol IObject\n  (-id [this])\n  (-type [this])\n  (-data [this])\n  (-update [this update-fn] \"update and notify watches\")\n  (-destroy! [this cause]))\n\n(defn get-type [this]\n  (-type this))\n\n(defn get-type-attr\n  ([oref key]\n     (if (nil? oref)\n       nil\n       (let [type-id (if (keyword? oref) oref (-type oref))]\n         (get-in @object-defs [type-id key]))))\n  ([oref key default]\n     (if (nil? oref)\n       default\n       (let [type-id (if (keyword? oref) oref (-type oref))]\n         (get-in @object-defs [type-id key] default)))))\n\n(defn ^:export get-dom [oref]\n  (::dom oref))\n\n(defn ^:export get-by-id [id]\n  (get @instances id))\n\n(defn ^:export get-from-dom [dom]\n  (let [oid (dom/data dom :oid)]\n    (when oid\n      (get-by-id (js/parseInt oid 10)))\n    ))\n\n(defn is-object? [obj-or-dom]\n  (or (satisfies? IObject obj-or-dom)\n      (get-from-dom obj-or-dom)))\n\n(defn equal? [obj obj-or-dom]\n  (assert (satisfies? IObject obj) \"can only test objects\")\n  (if (satisfies? IObject obj-or-dom)\n    (= (-id obj) (-id obj-or-dom))\n    (= (-id obj) (when-let [oid (dom/data obj-or-dom :oid)]\n                   (js/parseInt oid 10)))))\n\n(defn ^:export get-parent [oref]\n  (when-let [parent-id (get @instance-parent (-id oref))]\n    (get @instances parent-id)\n    ))\n\n(defn ^:export get-parent-of-type [oref parent-type]\n  (loop [parent (:parent oref)]\n    (when parent\n      (if (= (-type parent) parent-type)\n        parent\n        (recur (:parent parent))))))\n\n;; FIXME: would be nice if these were in dom order\n;; but since children arent always direct dom children\n;; this would be kinda costly I guess\n(defn ^:export get-children [parent]\n  (let [parent-id (-id parent)\n        child-ids (get @instance-children parent-id [])\n        instances @instances]\n    (vec (map #(get instances %) child-ids))\n    ))\n\n(defn ^:export tree-seq\n  ([root]\n     (tree-seq root (fn [node] true)))\n  ([root branch?]\n     (cljs.core/tree-seq branch? get-children root)))\n\n(defn get-children-of-type [oref type]\n  (let [type-kw (if (keyword? type) type (-type type))]\n    (filter #(= type-kw (-type %)) (get-children oref))\n    ))\n\n(defn get-siblings\n  \"basically (get-children (:parent this))\"\n  [{:keys [parent] :as oref}]\n  (when-not parent\n    (throw (ex-info \"object has no parent, thus has no siblings\" {:oref oref})))\n\n  (get-children parent))\n\n(defn get-siblings-of-type \n  \"returns set of all siblings of a common type\"\n  ([oref]\n     (get-siblings-of-type oref oref))\n  ([oref type]\n     (let [type-kw (if (keyword? type) type (-type type))]\n       (filter #(= type-kw (-type %)) (get-siblings oref))\n       )))\n\n(defn get-collection-item [oref]\n  (let [item-key (::coll-item-key oref)]\n    (get oref item-key)\n    ))\n\n(defn find-containing-object\n  \"find the object that contains this dom node\"\n  [dom]\n  (if-let [obj (get-from-dom dom)]\n    obj\n    (when-let [parent (.-parentElement dom)]\n      (recur parent))))\n\n(defn notify! [oref ev & args]\n  \n  #_ (when-not (contains? @events ev)\n       (debug \"triggering undefined notifiction\" (pr-str ev) \" with \" (pr-str args)))\n\n  ;; (debug \"notify!\" oref ev args)\n\n  (when-let [reactions-to-trigger (get-in oref [::reactions ev])]\n    ;; (debug \"notify!\" (-id oref) (-type oref) ev reactions-to-trigger args)\n    (doseq [rfn reactions-to-trigger]\n      (apply rfn (cons oref args)))\n    ))\n\n(defn- do-notify-tree [current-obj ev notify-fn]\n  (doseq [child (get-children current-obj)]\n    (do-notify-tree child ev notify-fn))\n  (notify-fn current-obj))\n\n(defn notify-tree! [oref ev & args]\n  (let [notify-fn (fn [obj]\n                    (apply notify! obj ev args))]\n    (do-notify-tree oref ev notify-fn)))\n\n(def notify-down! notify-tree!)\n\n(defn notify-up! [oref ev & args]\n  (loop [current (get-parent oref)]\n    (when current\n      (apply notify! current ev args)\n      (recur (get-parent current)))))\n\n(defn update! [oref update-fn & args]\n  (when-not (fn? update-fn)\n    (throw (str \"update! expects a fn as second arg, not \" (pr-str update-fn))))\n\n  (let [id (-id oref)\n        data (-data oref)\n        work-fn (fn [data] (apply update-fn data args))]\n    (-update oref work-fn)\n    ))\n\n(defn return-value [oref return-value]\n  (update! oref assoc ::return-value return-value))\n\n(defn- set-parent! [child parent]\n  (let [child-id (-id child)\n        parent-id (-id parent)]\n    (swap! instance-parent assoc child-id parent-id)\n    (swap! instance-children (fn [x]\n                               (let [current (get x parent-id #{})]\n                                 (assoc x parent-id (conj current child-id))\n                                 )))\n    true))\n\n(defn dom-destroy [this cause]\n  (if (= cause :parent)\n    ;; no messin arround when parent is dead\n    (dom/remove (::dom this))\n    ;; custom removals are allowed when removing direct\n    (if-let [custom-remove (get-type-attr this :dom/remove)]\n      (custom-remove this (::dom this))\n      (dom/remove (::dom this))\n      )))\n\n(defn destroy!\n  ([oref]\n     (destroy! oref :direct))\n  ([oref cause]\n     (-destroy! oref cause)))\n\n(defn bind-dom-events [oref dom dom-events]\n  (when-not (zero? (rem (count dom-events) 2))\n    (throw (ex-info \"object defined invalid event\" {:object-type (-type oref) :dom/events dom-events})))\n\n  (doseq [[ev handler :as ev-def] (partition 2 dom-events)]\n    (when (nil? handler)\n      (throw (str \"ev with nil handler \" (pr-str ev))))\n\n    (let [handler (if (keyword? handler)\n                    (fn [this e el]\n                      (notify! this handler e el))\n                    handler)]\n      (dom/on dom ev (fn dom-event-handler [e el]\n                       (when (= \"A\" (.-tagName el)) \n                         ;; FIXME: thou shall not stop events at all?\n                         ;; FIXME: stops all events on A, but what except click would you use anyways?\n                         ;; <a class=\"wtf\" href=\"#\">something</a>\n                         ;; this just simplifies :dom/events [[:click \"a.wtf\"] some-fn] so some-fn doesnt have to\n                         ;; stop the event which is what you'd want 99% of the time, if you dont want to stop it\n                         ;; use the router and dont listen to click.\n                         (dom/ev-stop e))\n                       (handler oref e el))))))\n\n(defn- reaction-merge [result [event handler]]\n  (when-not (and event handler)\n    (throw (ex-info \"invalid reaction\" {:event event :handler handler})))\n\n  (let [current (get result event (list))]\n    (assoc result event (conj current handler))))\n\n(defn- merge-reactions [result behavior]\n  (when-not (sequential? behavior)\n    (throw (ex-info \"behaviors must be vectors\" {:behavior behavior})))\n  (when-not (even? (count behavior))\n    (throw (ex-info \"invalid behavior\" {:behavior behavior})))\n\n  (reduce reaction-merge result (reverse (partition 2 behavior))))\n\n\n(defn- merge-behaviors [result behavior]\n  (cond\n   (sequential? behavior)\n   (update-in result [::reactions] merge-reactions behavior)\n\n   (map? behavior)\n   (-> result\n       ;; FIXME: there might be more keys to merge, need some kind of merge logic definition\n       (update-in [::reactions] merge-reactions (:on behavior []))\n       (update-in [:watch] (fn [watches]\n                             (concat watches (:watch behavior []))))\n       (update-in [:dom/events] (fn [default]\n                                  (-> default\n                                      (concat (:dom/events behavior []))\n                                      (vec)))))\n   :else\n   (throw (ex-info \"behavior not understood\" {:behavior behavior}))\n   ))\n\n(defn define [id & args]\n  (when-not (keyword? id)\n    (throw (ex-info \"object id needs to be a keyword\" {:id id :args args})))\n  (when-not (even? (count args))\n    (throw (str \"invalid object definition \" (str id) \" args: \"(pr-str args))))\n  (when (contains? @object-defs id)\n    (js/console.warn (str \"object already defined \" id)))\n\n  (try\n    (let [odef (apply hash-map args)\n\n          reactions (merge-reactions {} (:on odef []))\n\n          ;;      reactions (reduce merge-reactions reactions (reverse (:behaviors odef [])))\n\n          odef (assoc odef\n                 ::id id\n                 ::reactions reactions)\n          odef (reduce merge-behaviors odef (reverse (:behaviors odef [])))]\n\n      (swap! object-defs assoc id odef)\n      odef)\n    (catch js/Object e\n      (throw (ex-info \"failed to define object\" {:id id :args args})))))\n\n\n(defn- merge-defaults [data type]\n  (let [defaults (get-in @object-defs [type :defaults])]\n    (cond\n     (nil? defaults) data\n     (map? defaults) (merge defaults data)\n     (fn? defaults) (merge (defaults) data)\n     :else (throw (ex-info \"invalid object defaults\" {:defaults defaults :type type}))\n     )))\n\n(defn make-dom\n  ([oref dom-key events-key]\n     (make-dom oref dom-key events-key nil))\n  ([oref dom-key events-key value]\n      (let [dom-fn (if (keyword? dom-key) (get-type-attr oref dom-key) dom-key)\n            events (if (keyword? events-key) (get-type-attr oref events-key []) events-key)\n            dom (dom/build (dom-fn oref value))]\n        (bind-dom-events oref dom events)\n        dom\n        )))\n\n\n(defn alive? [obj]\n  (contains? @instances (-id obj)))\n\n(defrecord Watch [key handler])\n\n(deftype ObjectRef [id type ^:mutable data ^:mutable watches result-chan]\n  IObject\n  (-id [this] id)\n  (-type [this] type)\n  (-data [this] data)\n  (-update [this update-fn]\n    (let [old data\n          new (update-fn data)]\n      (set! data new)\n      (doseq [{:keys [key handler] :as watch} watches]\n        ;; watches may destroy the current object\n        ;; if that happens we should not continue\n        ;; FIXME: this seems really dirty, there must be a cleaner way?\n        ;; maybe queue all other modifications until this is finished?\n        (when (alive? this)\n          (handler key this old new)))))\n  (-destroy! [this cause]\n    (let [parent-id (get @instance-parent id)]\n\n      ;; destroy children before destroying parent\n      (doseq [child (get-children this)]\n        (-destroy! child :parent))\n\n      (notify! this :destroy cause)\n      (dom-destroy this cause)\n      \n      (let [return-value (::return-value this)]\n        (when-not (nil? return-value)\n          (async/put! result-chan return-value))\n        (async/close! result-chan))\n\n      (swap! instances dissoc id)\n      (swap! instance-parent dissoc id)\n      (when parent-id\n        (swap! instance-children update-in [parent-id] disj id))))\n  \n  async-impl/ReadPort\n  (take! [this ^not-native handler]\n    (async-impl/take! result-chan handler))\n\n  IEquiv\n  (-equiv [this other]\n    (and (instance? ObjectRef other)\n         (= (-id this) (-id other))))\n\n  IDeref\n  (-deref [this] data)\n\n  IPrintWithWriter\n  (-pr-writer [this writer opts]\n    (-write writer (str \"#<ObjectRef {:id \" id \", :type \" type \"}>\")))\n\n  IWatchable\n  (-notify-watches [this oldval newval]\n    (throw (js/Error. \"who be calling?\")))\n  (-add-watch [this key f]\n    (set! watches (conj watches (Watch. key f))))\n  (-remove-watch [this key]\n    (set! watches (remove #(= key (:key %)) watches)))\n\n  ILookup\n  (-lookup [this k]\n    (if (= :parent k)\n      (get-parent this)\n      (get data k)))\n  (-lookup [this k d]\n    (if (= :parent k)\n      (get-parent this)\n      (get data k d)))\n\n  Object\n  (toString [this]\n    (pr-str this))\n\n  dom/IElement\n  (-to-dom [this] (::dom data))\n  \n  dom/SVGElement\n  (-to-svg [this] (::dom data)))\n\n(defn add-reaction!\n  ([oref ev handler-fn]\n     (add-reaction! oref [ev handler-fn]))\n  ([oref list]\n     (update! oref update-in [::reactions] merge-reactions list)\n     ))\n\n(defn bind-change\n  ([oref attr callback]\n     (bind-change oref attr callback (gensym \"bind-change\")))\n  ([oref attr callback watch-key]\n     (when-not (satisfies? IObject oref)\n       (throw (ex-info \"binding currently only supports shadow objects, other atoms might leak, may add later\" {:oref oref :attr attr})))\n\n     (let [attr (if (sequential? attr) attr [attr])]\n       (add-watch oref watch-key\n                  (fn bind-change-watch [_ _ old new]\n                    (let [ov (get-in old attr)\n                          nv (get-in new attr)]\n                      (when-not (= ov nv)\n                        (callback ov nv))))))\n     ))\n\n(defn dom-enter [parent child]\n  (dom/append parent child)\n  (when (dom/contains? parent)\n    ;; only notify when the parent is already in the dom\n    ;; not sure if its useful to keep track of this inside the object itself?\n    (notify-tree! child :dom/entered)))\n\n(defn create [type args & node-children]\n  (when-not (contains? @object-defs type)\n    (throw (ex-info (str \"cannot create unknown child type: \" type) {:type type :args args})))\n  (when-not (map? args)\n    (throw (ex-info \"so/create second arg must be a map\" {:args args})))\n\n  (let [oid (next-id)\n        parent (:parent args)\n        \n        result-chan (async/chan 1)\n\n        odef (get @object-defs type)\n\n        obj (-> args\n                (assoc ::object-id oid\n                       ::reactions (get odef ::reactions {}))\n                (merge-defaults type)\n                (dissoc :parent :dom))\n\n        oref (ObjectRef. oid type obj [] result-chan)]\n\n    ;; dont use oref before this\n    (swap! instances assoc oid oref)\n\n    (when parent\n      (set-parent! oref parent))\n\n    (notify! oref :init)\n\n    (let [dom-events (:dom/events odef [])]\n      (if-let [dom (:dom args)]\n        ;; attach+events\n        (do\n          (dom/set-data dom :oid oid)\n          (bind-dom-events oref dom dom-events)\n          (update! oref assoc ::dom dom)\n          (notify! oref :dom/init dom))\n        ;; create+events\n        (when-let [dom-fn (:dom odef)]\n          (let [dom (dom/build (dom-fn oref node-children))]\n\n            (dom/set-data dom :oid oid)\n\n            (update! oref assoc ::dom dom)\n            (bind-dom-events oref dom dom-events)\n            (notify! oref :dom/init dom)\n            ))))\n\n    (when-let [watches (:watch odef)]\n      (doseq [[attr handler] (partition 2 watches)]\n        (bind-change oref attr (fn [old new]\n                                 (handler oref old new)))))\n\n    oref))\n\n(defn bind-simple\n  \"[oref attr node-gen] produces a node via (node-gen new-value)\n   watches obj for changes and replaces the generated node on change (node-gen defaults to str)\n\n  only use if the node has no attached behavior like clicks, use bind with an extra object for those\"\n  ([oref attr] (bind-simple oref attr str))\n  ([oref attr node-gen]\n     (let [attr (if (sequential? attr) attr [attr])\n           node-get #(dom/build (node-gen %))\n           node (atom (node-get (get-in oref attr)))\n           bind-key (gensym \"bind\")]\n\n       (bind-change oref attr\n                    (fn [old new]\n                      (let [new-node (node-get new)\n                            current-node @node]\n                        (dom/replace-node current-node new-node)\n                        (reset! node new-node))))\n\n       @node)\n     ))\n\n(defn bind\n  \"bind the given attribute a child item\n  the item will be recreated whenever the value changes (old one will be destroyed)\"\n  ([oref attr item-type item-key item-attrs]\n     (let [attr (if (sequential? attr) attr [attr])\n           curval (get-in oref attr)\n\n           make-child-fn (fn [value]\n                           (create item-type (merge\n                                              item-attrs\n                                              {:parent oref\n                                               item-key value})))\n\n           child (atom (make-child-fn curval))]\n\n       (bind-change oref attr\n                    (fn [old new]\n                      (let [new-child (make-child-fn new)\n                            current-node @child]\n\n                        (dom/replace-node current-node new-child)\n                        (destroy! @child)\n                        (reset! child new-child)\n                        (notify-down! new-child :dom/entered)\n                        )))\n\n       @child)\n     ))\n\n(defn coll-destroy-children [children c diff]\n  ;; whats more efficient in the DOM, drop head or tail?\n  ;; diff is neg!\n  (doseq [obj (subvec children (+ c diff) c)]\n    (let [obj (get-from-dom obj)]\n      (destroy! obj)))\n\n  (subvec children 0 (+ c diff)))\n\n(defn bind-children\n  ([node parent attr item-type item-key]\n     (bind-children node parent attr item-type item-key #(map-indexed vector %)))\n  ([node parent attr item-type item-key coll-transform]\n     (let [attr (if (sequential? attr) attr [attr])\n\n           update-children (atom true)\n\n           coll-dom (dom/build node)\n\n           make-item-fn (fn [[key val]]\n                          (let [obj (create item-type {:parent parent\n                                                       ::coll-path attr\n                                                       ::coll-key key\n                                                       ::coll-item-key item-key\n                                                       item-key val})]\n\n                            (bind-change obj item-key\n                                         (fn [old new]\n                                           (let [parent-key (conj attr (::coll-key obj))]\n                                             (log \"direct child update\" parent obj key parent-key new)\n                                             (reset! update-children false)\n                                             (update! parent assoc-in parent-key new)\n                                             (reset! update-children true)\n                                             )))\n                            obj\n                            ))\n\n           ]\n\n       (doseq [item (coll-transform (get-in parent attr))]\n         (dom-enter coll-dom (make-item-fn item)))\n\n       (bind-change parent attr\n                    (fn bind-children-watch [old new]\n                      ;; when a child updated itself, we dont need to update it again\n                      (when @update-children\n                        (let [children (into [] (dom/children coll-dom))\n                              new-coll (vec (coll-transform new))\n                              count-children (count children)\n                              count-new (count new)\n                              diff (- count-new count-children)\n\n                              ;; exit lost children\n                              children (if (neg? diff)\n                                         (coll-destroy-children children count-children diff)\n                                         children)\n                              count-children (min count-new count-children)]\n\n                          ;; update current\n                          (dotimes [idx count-children]\n                            (let [cn (nth children idx)\n                                  cc (get-from-dom cn)\n                                  ckey (::coll-key cc)\n                                  cval (get cc item-key)\n                                  [nkey nval] (nth new-coll idx)]\n\n                              ;; only update when something changes\n                              (when-not (and (= ckey nkey) (= cval nval))\n                                ;; lets try this, updating gets way too messy when dealing with complex objects\n                                ;; just create a new object and destroy the old, also solves cyclic updates and should be faster\n                                (let [new-obj (make-item-fn [nkey nval])]\n                                  (dom/replace-node cn new-obj)\n                                  (destroy! cc)\n                                  (notify-tree! new-obj :dom/entered))\n                                ;;(update! cc assoc item-key nval ::coll-key nkey)\n                                ;;(notify! cc :bind-child-update ckey nkey cval nval)\n                                )))\n\n                          ;; enter new\n                          (when (pos? diff)\n                            (doseq [item (subvec new-coll count-children count-new)]\n                              (dom-enter coll-dom (make-item-fn item))))\n\n                          (notify! parent :bind-children-update)\n                          ))))\n\n       coll-dom)))\n\n(defn remove-in-parent! [oref]\n  (let [parent (get-parent oref)\n        key (::coll-key oref)\n        value (get oref (::coll-item-key oref))\n        path (::coll-path oref)]\n\n    (when-not (and key path)\n      (throw (ex-info \"remove-in-parent! should only be called from items created via so/bind-children\" {:oref oref})))\n\n    (let [coll (get-in parent path)\n          new-coll (util/remove-item-from-coll coll key value)]\n      (notify! parent :bind/update path new-coll))\n    ))\n\n(defn inspect! [oref]\n  (info \"inspect!\" (-id oref) (str (-type oref)) (clj->js @(-data oref))))\n\n(defn ^:export dump! []\n  (info \"--------------- LIVE OBJECTS ------------\")\n  (doseq [[id oref] (seq @instances)]\n    (info \"dump\" id (pr-str (-type oref)) @(-data oref)))\n  (info \"--------------- //LIVE OBJECTS ------------\")\n  )\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["shadow.object/console-friendly","shadow.util/console-friendly","shadow.object/log","shadow.util/log","shadow.object/debug","shadow.object/info","shadow.object/warn","shadow.object/error","shadow.object/obj-id","cljs.core.atom","shadow.object/next-id","cljs.core.swap_BANG_","cljs.core/inc","shadow.object/object-defs","shadow.object/behavior-fns","shadow.object/instances","shadow.object/instance-parent","shadow.object/instance-children","shadow.object/events","shadow.object/define-event","event-name","desc","args","cljs.core/assoc","shadow.object/unmunge","s","clojure.string/replace","shadow$object$IObject$_id$dyn","x__4428__auto__","m__4429__auto__","shadow.object/-id","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","shadow$object$IObject$_type$dyn","shadow.object/-type","shadow$object$IObject$_data$dyn","shadow.object/-data","shadow$object$IObject$_update$dyn","shadow.object/-update","shadow$object$IObject$_destroy_BANG_$dyn","shadow.object/-destroy!","shadow.object/IObject","this","update-fn","cause","shadow.object/get-type","var_args","G__33451","shadow.object/get-type-attr","js/Error","oref","key","type-id","cljs.core/Keyword","cljs.core/deref","cljs.core.get_in","default","shadow.object/get-dom","shadow.object/get-by-id","id","cljs.core.get","shadow.object/get-from-dom","dom","oid","shadow.dom/data","js/parseInt","shadow.object/is-object?","obj-or-dom","or__4126__auto__","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","shadow.object/equal?","obj","cljs.core._EQ_","temp__5735__auto__","shadow.object/get-parent","parent-id","shadow.object/get-parent-of-type","parent-type","parent","shadow.object/get-children","child-ids","instances","cljs.core/vec","p1__33456#","cljs.core.map","G__33458","shadow.object/tree-seq","root","shadow.object.tree_seq","node","branch?","cljs.core/tree-seq","shadow.object/get-children-of-type","type","type-kw","p1__33459#","cljs.core.filter","p__33460","map__33461","cljs.core.apply","cljs.core/hash-map","shadow.object/get-siblings","cljs.core.ex_info","G__33465","shadow.object/get-siblings-of-type","shadow.object.get_siblings_of_type","p1__33463#","shadow.object/get-collection-item","item-key","shadow.object/find-containing-object","temp__5733__auto__","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","shadow.object/notify!","seq33466","G__33467","cljs.core/first","cljs.core/next","G__33468","self__4723__auto__","ev","reactions-to-trigger","seq__33469","cljs.core/seq","chunk__33470","count__33471","i__33472","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","rfn","cljs.core/cons","shadow.object/do-notify-tree","current-obj","notify-fn","seq__33473","chunk__33474","count__33475","i__33476","child","shadow.object/notify-tree!","seq33477","G__33478","G__33479","shadow.object/notify-down!","shadow.object/notify-up!","seq33480","G__33481","G__33482","current","shadow.object/update!","seq33483","G__33484","G__33485","cljs.core/fn?","cljs.core.pr_str","data","work-fn","shadow.object/return-value","return-value","shadow.object.update_BANG_","shadow.object/set-parent!","child-id","x","cljs.core.assoc","cljs.core.conj","shadow.object/dom-destroy","shadow.dom/remove","custom-remove","shadow.object.get_type_attr","G__33486","G__33487","G__33489","shadow.object/destroy!","shadow.object.destroy_BANG_","shadow.object/bind-dom-events","dom-events","cljs.core/rem","seq__33490","chunk__33491","count__33492","i__33493","vec__33500","cljs.core.nth","vec__33503","handler","ev-def","cljs.core.partition","e","el","shadow.object.notify_BANG_","shadow.dom.on","shadow.dom.ev_stop","p__33506","vec__33507","shadow.object/reaction-merge","result","event","and__4115__auto__","shadow.object/merge-reactions","behavior","cljs.core/sequential?","cljs.core/even?","cljs.core.reduce","cljs.core/reverse","shadow.object/merge-behaviors","cljs.core.update_in","cljs.core/map?","watches","cljs.core.concat","shadow.object/define","seq33510","G__33511","cljs.core/contains?","js/console.warn","e33512","odef","reactions","js/Object","shadow.object/merge-defaults","defaults","cljs.core.merge","G__33514","shadow.object/make-dom","dom-key","events-key","shadow.object.make_dom","value","dom-fn","events","G__33515","shadow.dom/build","shadow.object/alive?","this__4380__auto__","k__4381__auto__","this__4382__auto__","k33517","else__4383__auto__","G__33521","__extmap","this__4399__auto__","f__4400__auto__","init__4401__auto__","ret__4402__auto__","p__33522","vec__33523","k__4403__auto__","v__4404__auto__","this__4394__auto__","writer__4395__auto__","opts__4396__auto__","pr-pair__4397__auto__","keyval__4398__auto__","cljs.core/pr-sequential-writer","cljs.core/PersistentVector","G__33516","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4378__auto__","__meta","this__4375__auto__","__hash","this__4384__auto__","this__4376__auto__","h__4238__auto__","coll__4377__auto__","cljs.core/hash-unordered-coll","this33518","other33519","this__4389__auto__","k__4390__auto__","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4387__auto__","k__4388__auto__","pred__33526","cljs.core/keyword-identical?","expr__33527","this__4392__auto__","cljs.core/MapEntry","this__4379__auto__","this__4385__auto__","entry__4386__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","shadow.object/Watch","this__4423__auto__","cljs.core/List","writer__4424__auto__","cljs.core/-write","G__33520","extmap__4419__auto__","G__33529","cljs.core/record?","shadow.object/->Watch","shadow.object/map->Watch","this__4369__auto__","writer__4370__auto__","opt__4371__auto__","shadow.object/ObjectRef","shadow.object/->ObjectRef","result-chan","old","new","seq__33531","chunk__33532","count__33533","i__33534","map__33539","map__33541","watch","seq__33543","chunk__33544","count__33545","i__33546","cljs.core.async.put_BANG_","cljs.core.async/close!","cljs.core/dissoc","cljs.core/update-in","cljs.core/disj","cljs.core.async.impl.protocols/take!","other","writer","opts","oldval","newval","f","p1__33530#","cljs.core.remove","k","d","G__33548","shadow.object/add-reaction!","handler-fn","shadow.object.add_reaction_BANG_","list","G__33550","shadow.object/bind-change","attr","callback","shadow.object.bind_change","cljs.core.gensym","watch-key","cljs.core/add-watch","_","ov","nv","shadow.object/dom-enter","shadow.dom.append","shadow.dom.contains_QMARK_","shadow.object/create","seq33552","G__33553","G__33554","node-children","cljs.core.async.chan","shadow.dom/set-data","G__33555","seq__33556","chunk__33557","count__33558","i__33559","vec__33566","vec__33569","G__33574","shadow.object/bind-simple","shadow.object.bind_simple","cljs.core/str","node-gen","p1__33572#","node-get","G__33575","bind-key","new-node","current-node","shadow.dom/replace-node","cljs.core/reset!","shadow.object/bind","item-type","item-attrs","curval","make-child-fn","new-child","shadow.object/coll-destroy-children","children","c","diff","seq__33576","chunk__33577","count__33578","i__33579","cljs.core.subvec","G__33582","shadow.object/bind-children","p1__33580#","shadow.object.bind_children","cljs.core.map_indexed","cljs.core/vector","coll-transform","update-children","coll-dom","make-item-fn","p__33583","vec__33584","val","parent-key","cljs.core/assoc-in","seq__33587","chunk__33588","count__33589","i__33590","item","G__33592","shadow.dom/children","new-coll","count-children","count-new","x__4217__auto__","y__4218__auto__","n__4613__auto__","idx","vec__33593","cn","cc","ckey","cval","nkey","nval","new-obj","seq__33596","chunk__33597","count__33598","i__33599","shadow.object/remove-in-parent!","path","coll","shadow.util/remove-item-from-coll","shadow.object/inspect!","G__33600","G__33601","G__33602","G__33603","cljs.core/clj->js","shadow.object/dump!","seq__33604","chunk__33605","count__33606","i__33607","vec__33622","vec__33629","G__33625","G__33626","G__33627","G__33628","G__33632","G__33633","G__33634","G__33635"]],"~:used-vars",["^D",["~$shadow.object/bind-simple","~$shadow.object/-destroy!","~$shadow.dom/ev-stop","~$shadow.object/debug","~$cljs.core/PROTOCOL_SENTINEL","~$shadow.object/merge-reactions","~$cljs.core/even?","~$cljs.core/str","~$shadow.object/create","~$cljs.core/sequential?","~$shadow.object/->ObjectRef","~$shadow.object/get-by-id","~$shadow.dom/set-data","~$cljs.core/pr-sequential-writer","~$cljs.core/vector?","~$shadow.object/->Watch","~$cljs.core/filter","~$cljs.core/=","~$shadow.object/is-object?","~$shadow.object/-id","~$shadow.object/get-children-of-type","~$shadow.object/define","~$shadow.object/coll-destroy-children","~$cljs.core/-assoc","~$shadow.object/events","~$cljs.core/-write","~$shadow.object/inspect!","~$shadow.object/merge-behaviors","~$cljs.core/-iterator","~$shadow.object/get-children","~$cljs.core/count","~$cljs.core/deref","~$shadow.object/behavior-fns","~$cljs.core/reduce","~$cljs.core/seq","~$shadow.object/bind-change","~$cljs.core/apply","~$shadow.object/-data","~$cljs.core/Keyword","~$shadow.object/error","~$shadow.object/set-parent!","~$shadow.object/find-containing-object","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$shadow.object/instance-children","~$cljs.core.async/put!","~$cljs.core/chunk-rest","~$cljs.core/atom","~$shadow.object/instances","~$cljs.core/-with-meta","~$cljs.core/concat","~$cljs.core/pr-str","~$shadow.object/update!","~$js/console.warn","~$cljs.core/tree-seq","~$shadow.object/equal?","~$shadow.object/do-notify-tree","~$shadow.object/dom-enter","~$shadow.dom/on","~$cljs.core/native-satisfies?","~$shadow.util/console-friendly","~$shadow.object/add-reaction!","~$shadow.object/make-dom","~$shadow.object/alive?","~$shadow.object/IObject","~$cljs.core/contains?","~$shadow.object/obj-id","~$cljs.core/into","~$cljs.core/map?","~$cljs.core/reset!","~$shadow.object/reaction-merge","~$cljs.core.async.impl.protocols/take!","~$cljs.core/conj","~$shadow.object/bind-dom-events","~$cljs.core/-conj","~$shadow.dom/append","~$shadow.object/info","~$shadow.object/get-collection-item","~$cljs.core/map","~$shadow.object/dump!","~$cljs.core/fn?","~$cljs.core/PersistentVector","~$cljs.core/get-in","~$cljs.core/List","~$cljs.core/swap!","~$js/parseInt","~$shadow.object/notify-down!","~$cljs.core/get","~$shadow.object/console-friendly","~$shadow.object/Watch","~$shadow.dom/replace-node","~$shadow.object/-update","~$shadow.object/get-siblings","~$cljs.core/-nth","~$cljs.core.async/close!","~$cljs.core/remove","~$cljs.core/partition","~$cljs.core/not-empty","~$shadow.util/log","~$shadow.object/merge-defaults","~$shadow.object/get-from-dom","~$shadow.dom/contains?","~$shadow.object/notify!","~$shadow.object/object-defs","~$cljs.core/subvec","~$cljs.core/-lookup","~$shadow.object/tree-seq","~$shadow.dom/remove","~$cljs.core/ex-info","~$shadow.object/log","~$cljs.core/nil-iter","~$clojure.string/replace","~$shadow.object/get-parent-of-type","~$shadow.object/get-type","~$cljs.core/next","~$cljs.core/vec","~$shadow.object/get-dom","~$shadow.object/return-value","~$shadow.object/unmunge","~$cljs.core/RecordIter","~$shadow.object/get-type-attr","~$cljs.core/not","~$cljs.core/rem","~$cljs.core/disj","~$cljs.core/cons","~$cljs.core/assoc","~$shadow.object/-type","~$cljs.core/reverse","~$shadow.object/get-siblings-of-type","~$cljs.core/map-indexed","~$shadow.object/next-id","~$shadow.object/notify-tree!","~$shadow.object/notify-up!","~$shadow.object/bind-children","~$js/Object","~$shadow.object/bind","~$shadow.object/get-parent","~$cljs.core/gensym","~$shadow.object/warn","~$shadow.object/destroy!","~$shadow.object/instance-parent","~$shadow.object/map->Watch","~$shadow.object/remove-in-parent!","~$cljs.core/merge","~$cljs.core/update-in","~$js/Error","~$cljs.core/vector","~$shadow.object/dom-destroy","~$cljs.core/inc","~$cljs.core/add-watch","~$shadow.object/ObjectRef","~$shadow.object/define-event","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1<","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["^T","~$goog.dom.HtmlElement"]]],["^1<","cljs/core/async/impl/ioc_helpers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^S","^U"]]],["^1<","goog/labs/useragent/platform.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","~$goog.labs.userAgent.util","~$goog.string"]]],["^1<","cljs/core/async.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^S","^U","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1<","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?","~$goog.asserts"]]],["^1<","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?","^58","~$goog.object","~$goog.string.internal"]]],["^1<","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5@","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^5B"]]],["^1<","goog/style/style.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?","^5@","~$goog.dom","~$goog.dom.NodeType","~$goog.dom.TagName","~$goog.dom.vendor","~$goog.html.SafeStyleSheet","~$goog.math.Box","~$goog.math.Coordinate","~$goog.math.Rect","~$goog.math.Size","^5A","~$goog.reflect","^59","~$goog.userAgent"]]],["^1<","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5@"]]],["^1<","goog/useragent/useragent.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^58","^5R","^59"]]],["^1<","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5@"]]],"~:SHADOW-TIMESTAMP",[1615899884000,1615899884000,1614681766000],["^1<","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5@","^5R"]]],["^1<","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5@","~$goog.html.trustedtypes","^5E","^5F","^5G","^5H"]]],["^1<","goog/math/irect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","cljs/core/async/impl/channels.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^S","^U","^5=","^5;"]]],["^1<","goog/math/box.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5@","^5O"]]],["^1<","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","shadow/util.cljs"],["cb2034364161b68d1994d374eb59d6d2b0613989","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^S"]]],["^1<","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","cljs/core/async/impl/dispatch.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^S","^5;","~$goog.async.nextTick"]]],["^1<","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?","^5@","~$goog.html.SafeUrl","^5G","^5H","^5B"]]],["^1<","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5@","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^5Z","^5D","~$goog.html.uncheckedconversions","^5G","^5B"]]],["^1<","cljs/core/async/impl/protocols.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^S"]]],["^1<","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1<","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?","^5@","^5K","~$goog.dom.tags","^62","^63","^5M","^5Z","^5D","^5X","^5E","^5F","^5T","^5A","^5G","^5H","^5B"]]],["^1<","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5A"]]],["^1<","goog/math/size.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","goog/labs/useragent/engine.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?","^58","^59"]]],["^1<","goog/window/window.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5I","^5K","~$goog.dom.safe","^5Z","^64","^5V","^59","^5G","^5S"]]],["^1<","goog/dom/dom.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?","^5@","~$goog.dom.BrowserFeature","^5J","^5K","^68","^61","^64","^5O","^5Q","^5A","^59","~$goog.string.Unicode","^5S"]]],["^1<","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","~$goog.debug.Error","^5J"]]],["^1<","cljs/core/async/impl/buffers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^S","^U"]]],["^1<","goog/math/rect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5@","^5N","^5O","~$goog.math.IRect","^5Q"]]],["^1<","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?","^5@","^59","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1<","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","shadow/object.cljs"],["cb2034364161b68d1994d374eb59d6d2b0613989","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^S","^N","^R","^X","^P","^U","^L"]]],["^1<","goog/style/transition.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?","^5@","^5I","^5K","^68","^5L","^60","^61","~$goog.style","^5S"]]],["^1<","cljs/core/async/impl/timers.cljs"],["dbe356df16976e1d820463722b6f0e3c3b3f8e26","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^S","^U","^5:","^5="]]],["^1<","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",[]]],["^1<","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?","^5A"]]],["^1<","shadow/dom.cljs"],["cb2034364161b68d1994d374eb59d6d2b0613989","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^S","^5I","~$goog.dom.forms","~$goog.dom.classlist","^6B","~$goog.style.transition","^59","^X","^R"]]],["^1<","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^S","^59","~$goog.string.StringBuffer"]]],["^1<","goog/debug/entrypointregistry.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5@"]]],["^1<","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^68","^64","^5G","^5B"]]],["^1<","clojure/data.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^S","~$clojure.set"]]],["^1<","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5B"]]],["^1<","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","goog/math/coordinate.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","~$goog.math"]]],["^1<","goog/dom/inputtype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?","^5@","^60","^6H"]]],["^1<","goog/async/nexttick.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","~$goog.debug.entryPointRegistry","^5I","^5K","^68","^60","^61","^5D","^5T","^5U","^5G"]]],["^1<","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5@","^61","^62","^63","^5M","^5Z","^5D","^5G","^5B"]]],["^1<","goog/dom/forms.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","~$goog.dom.InputType","^5K","^68","^6>","~$goog.window"]]],["^1<","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T"]]],["^1<","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","~$goog.math.Long","~$goog.math.Integer","^59","^5A","^5?","~$goog.Uri","^6F"]]],["^1<","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5@","^5X","^5G","^5H"]]],["^1<","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?","^5@","^63","^5A","^5G","^5H","^5B"]]],["^1<","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5R"]]],["^1<","goog/dom/browserfeature.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5S"]]],["^1<","clojure/set.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^S"]]],["^1<","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?","^5@","^59"]]],["^1<","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5@","^5H"]]],["^1<","goog/dom/classlist.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^5?"]]],["^1<","goog/dom/vendor.js"],["6025affb7181cd40418600864f58eed1ea80055d","^53",["^ ","^54",null,"^55",["^D",[]],"^56",["^T","^59","^5S"]]]]],"~:clj-info",["^ ","jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/macros.clj",1606853456000,"jar:file:/home/dennis/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/concurrent.clj",1606853456000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/dispatch.clj",1606853456000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/protocols.clj",1606853456000,"jar:file:/home/dennis/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async.clj",1606853456000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/cljs/core/async/impl/ioc_macros.clj",1606853456000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/core.async/1.3.610/core.async-1.3.610.jar!/clojure/core/async/impl/exec/threadpool.clj",1606853456000,"jar:file:/home/dennis/.m2/repository/thheller/shadow-client/1.3.3/shadow-client-1.3.3.jar!/shadow/util.clj",1614681772000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1606738673000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","shadow/object.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"~:shadow/protocol-prefixes",["^D",["shadow$object$IObject$"]],"^B",null,"^C",["^D",["^E"]],"^F","^G","^J",null,"^K",["^ ","^L","^L","^M","^N","^O","^P","^Q","^R","^S","^S","^T","^T","^N","^N","^R","^R","^U","^U","^V","^L","^W","^X","^X","^X","^P","^P","^Y","^U"],"^Z",["^D",["^["]],"~:shadow/js-access-global",["^D",["Object","Error","parseInt"]],"^10",null,"~:defs",["^ ","~$dump!",["^ ","~:protocol-inline",null,"^5",["^ ","^6","shadow/object.cljs","^7",674,"^8",16,"^9",674,"^:",21,"~:export",true,"~:arglists",["^13",["~$quote",["^13",[[]]]]]],"^F","^3?","^6","shadow/object.cljs","^:",21,"~:method-params",["^13",[[]]],"~:protocol-impl",null,"^7J",true,"~:arglists-meta",["^13",[null,null]],"^8",1,"~:variadic?",false,"^7",674,"~:ret-tag","~$any","^9",674,"~:max-fixed-arity",0,"~:fn-var",true,"^7K",["^13",["^7L",["^13",[[]]]]]],"^E",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",132,"^8",16,"^9",132,"^:",24,"^7J",true,"^7K",["^13",["^7L",["^13",[["~$root"],["^7U","~$branch?"]]]]],"~:top-fn",["^ ","^7P",false,"~:fixed-arity",2,"^7S",2,"^7M",[["^7U"],["^7U","^7V"]],"^7K",["^13",[["^7U"],["^7U","^7V"]]],"^7O",["^13",[null,null]]]],"^F","^3Z","^6","shadow/object.cljs","^:",24,"^7W",["^ ","^7P",false,"^7X",2,"^7S",2,"^7M",[["^7U"],["^7U","^7V"]],"^7K",["^13",[["^7U"],["^7U","^7V"]]],"^7O",["^13",[null,null]]],"^7M",[["^7U"],["^7U","^7V"]],"^7N",null,"^7X",2,"^7J",true,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"~:methods",[["^ ","^7X",1,"^7P",false,"~:tag","^7R"],["^ ","^7X",2,"^7P",false,"^7Z","~$cljs.core/LazySeq"]],"^7",132,"^9",132,"^7S",2,"^7T",true,"^7K",["^13",[["^7U"],["^7U","^7V"]]]],"~$object-defs",["^ ","^F","^3W","^6","shadow/object.cljs","^7",23,"^8",1,"^9",23,"^:",17,"^5",["^ ","^6","shadow/object.cljs","^7",23,"^8",6,"^9",23,"^:",17],"^7Z","~$cljs.core/Atom"],"~$get-from-dom",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",93,"^8",16,"^9",93,"^:",28,"^7J",true,"^7K",["^13",["^7L",["^13",[["^M"]]]]]],"^F","^3T","^6","shadow/object.cljs","^:",28,"^7M",["^13",[["^M"]]],"^7N",null,"^7J",true,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",93,"^7Q",["^D",["^7R","~$clj-nil"]],"^9",93,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^M"]]]]]],"~$get-siblings",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",143,"^8",7,"^9",143,"^:",19,"^7K",["^13",["^7L",["^13",[[["^ ","~:keys",["~$parent"],"^17","~$oref"]]]]]],"~:doc","basically (get-children (:parent this))"],"^F","^3L","^6","shadow/object.cljs","^:",19,"^7M",["^13",[["~$p__33460"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",143,"^7Q",["^D",["~$clj","~$cljs.core/IVector","^7R","~$cljs.core/MetaFn","^83"]],"^9",143,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[[["^ ","^85",["^86"],"^17","^87"]]]]]],"^88","basically (get-children (:parent this))"],"~$get-parent-of-type",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",115,"^8",16,"^9",115,"^:",34,"^7J",true,"^7K",["^13",["^7L",["^13",[["^87","~$parent-type"]]]]]],"^F","^44","^6","shadow/object.cljs","^:",34,"^7M",["^13",[["^87","^8>"]]],"^7N",null,"^7J",true,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",115,"^7Q",["^D",["^7R","^83"]],"^9",115,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^87","^8>"]]]]]],"~$alive?",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",348,"^8",7,"^9",348,"^:",13,"^7K",["^13",["^7L",["^13",[["~$obj"]]]]]],"^F","^2[","^6","shadow/object.cljs","^:",13,"^7M",["^13",[["^8@"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",348,"^7Q","~$boolean","^9",348,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^8@"]]]]]],"~$notify-down!",["^ ","^F","^3F","^6","shadow/object.cljs","^7",196,"^8",1,"^9",196,"^:",18,"^5",["^ ","^6","shadow/object.cljs","^7",196,"^8",6,"^9",196,"^:",18]],"~$return-value",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",214,"^8",7,"^9",214,"^:",19,"^7K",["^13",["^7L",["^13",[["^87","^8C"]]]]]],"^F","^49","^6","shadow/object.cljs","^:",19,"^7M",["^13",[["^87","^8C"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",214,"^7Q","^7R","^9",214,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^87","^8C"]]]]]],"~$reaction-merge",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",266,"^8",8,"^9",266,"^:",22,"~:private",true,"^7K",["^13",["^7L",["^13",[["~$result",["~$event","~$handler"]]]]]]],"^8E",true,"^F","^36","^6","shadow/object.cljs","^:",22,"^7M",["^13",[["^8F","~$p__33506"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",266,"^7Q",["^D",["^8:","^7R"]],"^9",266,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^8F",["^8G","^8H"]]]]]]],"~$log",["^ ","^F","^41","^6","shadow/object.cljs","^7",13,"^8",1,"^9",13,"^:",9,"^5",["^ ","^6","shadow/object.cljs","^7",13,"^8",6,"^9",13,"^:",9]],"~$add-reaction!",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",433,"^8",7,"^9",433,"^:",20,"^7K",["^13",["^7L",["^13",[["^87","~$ev","~$handler-fn"],["^87","~$list"]]]]],"^7W",["^ ","^7P",false,"^7X",3,"^7S",3,"^7M",[["^87","^8L","^8M"],["^87","^8N"]],"^7K",["^13",[["^87","^8L","^8M"],["^87","^8N"]]],"^7O",["^13",[null,null]]]],"^F","^2Y","^6","shadow/object.cljs","^:",20,"^7W",["^ ","^7P",false,"^7X",3,"^7S",3,"^7M",[["^87","^8L","^8M"],["^87","^8N"]],"^7K",["^13",[["^87","^8L","^8M"],["^87","^8N"]]],"^7O",["^13",[null,null]]],"^7M",[["^87","^8L","^8M"],["^87","^8N"]],"^7N",null,"^7X",3,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7Y",[["^ ","^7X",3,"^7P",false,"^7Z","^7R"],["^ ","^7X",2,"^7P",false,"^7Z","^7R"]],"^7",433,"^9",433,"^7S",3,"^7T",true,"^7K",["^13",[["^87","^8L","^8M"],["^87","^8N"]]]],"~$find-containing-object",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",165,"^8",7,"^9",165,"^:",29,"^7K",["^13",["^7L",["^13",[["^M"]]]]],"^88","find the object that contains this dom node"],"^F","^2E","^6","shadow/object.cljs","^:",29,"^7M",["^13",[["^M"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",165,"^7Q",["^D",["^7R","^83"]],"^9",165,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^M"]]]]],"^88","find the object that contains this dom node"],"~$get-dom",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",87,"^8",16,"^9",87,"^:",23,"^7J",true,"^7K",["^13",["^7L",["^13",[["^87"]]]]]],"^F","^48","^6","shadow/object.cljs","^:",23,"^7M",["^13",[["^87"]]],"^7N",null,"^7J",true,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",87,"^7Q","^7R","^9",87,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^87"]]]]]],"~$dom-enter",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",456,"^8",7,"^9",456,"^:",16,"^7K",["^13",["^7L",["^13",[["^86","~$child"]]]]]],"^F","^2U","^6","shadow/object.cljs","^:",16,"^7M",["^13",[["^86","^8R"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",456,"^7Q",["^D",["^7R","^83"]],"^9",456,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^86","^8R"]]]]]],"~$do-notify-tree",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",186,"^8",8,"^9",186,"^:",22,"^8E",true,"^7K",["^13",["^7L",["^13",[["~$current-obj","^8L","~$notify-fn"]]]]]],"^8E",true,"^F","^2T","^6","shadow/object.cljs","^:",22,"^7M",["^13",[["^8T","^8L","^8U"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",186,"^7Q","^7R","^9",186,"^7S",3,"^7T",true,"^7K",["^13",["^7L",["^13",[["^8T","^8L","^8U"]]]]]],"~$bind",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",540,"^8",7,"^9",540,"^:",11,"^7K",["^13",["^7L",["^13",[["^87","~$attr","~$item-type","~$item-key","~$item-attrs"]]]]],"^88","bind the given attribute a child item\n  the item will be recreated whenever the value changes (old one will be destroyed)"],"^F","^4K","^6","shadow/object.cljs","^:",11,"^7M",["^13",[["^87","^8W","^8X","^8Y","^8Z"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",540,"^7Q","^7R","^9",540,"^7S",5,"^7T",true,"^7K",["^13",["^7L",["^13",[["^87","^8W","^8X","^8Y","^8Z"]]]]],"^88","bind the given attribute a child item\n  the item will be recreated whenever the value changes (old one will be destroyed)"],"~$notify-tree!",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",191,"^8",7,"^9",191,"^:",19,"^7K",["^13",["^7L",["^13",[["^87","^8L","~$&","~$args"]]]]],"^7W",["^ ","^7P",true,"^7X",2,"^7S",2,"^7M",[["^13",["^87","^8L","^90"]]],"^7K",["^13",[["^87","^8L","~$&","^90"]]],"^7O",["^13",[null]]]],"^F","^4G","^6","shadow/object.cljs","^:",19,"^7W",["^ ","^7P",true,"^7X",2,"^7S",2,"^7M",[["^13",["^87","^8L","^90"]]],"^7K",["^13",[["^87","^8L","~$&","^90"]]],"^7O",["^13",[null]]],"^7M",[["^13",["^87","^8L","^90"]]],"^7N",null,"^7X",2,"^7O",["^13",[null]],"^8",1,"^7P",true,"^7Y",[["^ ","^7X",2,"^7P",true,"^7Z","^7R"]],"^7",191,"^7Q","^7R","^9",191,"^7S",2,"^7T",true,"^7K",["^13",[["^87","^8L","~$&","^90"]]]],"~$notify!",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",173,"^8",7,"^9",173,"^:",14,"^7K",["^13",["^7L",["^13",[["^87","^8L","~$&","^90"]]]]],"^7W",["^ ","^7P",true,"^7X",2,"^7S",2,"^7M",[["^13",["^87","^8L","^90"]]],"^7K",["^13",[["^87","^8L","~$&","^90"]]],"^7O",["^13",[null]]]],"^F","^3V","^6","shadow/object.cljs","^:",14,"^7W",["^ ","^7P",true,"^7X",2,"^7S",2,"^7M",[["^13",["^87","^8L","^90"]]],"^7K",["^13",[["^87","^8L","~$&","^90"]]],"^7O",["^13",[null]]],"^7M",[["^13",["^87","^8L","^90"]]],"^7N",null,"^7X",2,"^7O",["^13",[null]],"^8",1,"^7P",true,"^7Y",[["^ ","^7X",2,"^7P",true,"^7Z","^83"]],"^7",173,"^7Q","^7R","^9",173,"^7S",2,"^7T",true,"^7K",["^13",[["^87","^8L","~$&","^90"]]]],"~$get-type",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",72,"^8",7,"^9",72,"^:",15,"^7K",["^13",["^7L",["^13",[["~$this"]]]]]],"^F","^45","^6","shadow/object.cljs","^:",15,"^7M",["^13",[["^93"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",72,"^7Q","^7R","^9",72,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^93"]]]]]],"~$unmunge",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",37,"^8",7,"^9",37,"^:",14,"^7K",["^13",["^7L",["^13",[["~$s"]]]]]],"^F","^4:","^6","shadow/object.cljs","^:",14,"^7M",["^13",[["~$s"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",37,"^7Q","~$string","^9",37,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["~$s"]]]]]],"~$map->Watch",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^:",17,"^8",12,"~:internal-ctor",true,"~:factory","~:map","^7",351,"^9",351,"^7K",["^13",["^7L",["^13",[["~$G__33520"]]]]],"^88","Factory function for shadow.object/Watch, taking a map of keywords to field values."],"^F","^4Q","^6","shadow/object.cljs","^:",17,"^7M",["^13",[["^9:"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^97",true,"^7P",false,"^98","^99","^7",351,"^7Q","^3I","^9",351,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^9:"]]]]],"^88","Factory function for shadow.object/Watch, taking a map of keywords to field values."],"~$destroy!",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",237,"^8",7,"^9",237,"^:",15,"^7K",["^13",["^7L",["^13",[["^87"],["^87","~$cause"]]]]],"^7W",["^ ","^7P",false,"^7X",2,"^7S",2,"^7M",[["^87"],["^87","^9<"]],"^7K",["^13",[["^87"],["^87","^9<"]]],"^7O",["^13",[null,null]]]],"^F","^4O","^6","shadow/object.cljs","^:",15,"^7W",["^ ","^7P",false,"^7X",2,"^7S",2,"^7M",[["^87"],["^87","^9<"]],"^7K",["^13",[["^87"],["^87","^9<"]]],"^7O",["^13",[null,null]]],"^7M",[["^87"],["^87","^9<"]],"^7N",null,"^7X",2,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7Y",[["^ ","^7X",1,"^7P",false,"^7Z","^7R"],["^ ","^7X",2,"^7P",false,"^7Z","^7R"]],"^7",237,"^9",237,"^7S",2,"^7T",true,"^7K",["^13",[["^87"],["^87","^9<"]]]],"~$instance-parent",["^ ","^F","^4P","^6","shadow/object.cljs","^7",27,"^8",1,"^9",27,"^:",21,"^5",["^ ","^6","shadow/object.cljs","^7",27,"^8",6,"^9",27,"^:",21],"^7Z","^81"],"~$dom-destroy",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",227,"^8",7,"^9",227,"^:",18,"^7K",["^13",["^7L",["^13",[["^93","^9<"]]]]]],"^F","^4W","^6","shadow/object.cljs","^:",18,"^7M",["^13",[["^93","^9<"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",227,"^7Q",["^D",["^7R","^83"]],"^9",227,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^93","^9<"]]]]]],"~$ObjectRef",["^ ","~:num-fields",5,"~:protocols",["^D",["~$cljs.core/IWatchable","~$cljs.core/IEquiv","~$cljs.core/Object","^30","~$cljs.core.async.impl.protocols/ReadPort","~$cljs.core/IDeref","~$shadow.dom/IElement","~$cljs.core/IPrintWithWriter","~$shadow.dom/SVGElement","~$cljs.core/ILookup"]],"^F","^4Z","^6","shadow/object.cljs","^:",19,"~:type",true,"^8",10,"^7",353,"~:record",false,"^9",353,"^7Z","~$function","~:skip-protocol-flag",["^D",["^9B","^9C","^9F","^9H","^9J"]]],"~$notify-up!",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",198,"^8",7,"^9",198,"^:",17,"^7K",["^13",["^7L",["^13",[["^87","^8L","~$&","^90"]]]]],"^7W",["^ ","^7P",true,"^7X",2,"^7S",2,"^7M",[["^13",["^87","^8L","^90"]]],"^7K",["^13",[["^87","^8L","~$&","^90"]]],"^7O",["^13",[null]]]],"^F","^4H","^6","shadow/object.cljs","^:",17,"^7W",["^ ","^7P",true,"^7X",2,"^7S",2,"^7M",[["^13",["^87","^8L","^90"]]],"^7K",["^13",[["^87","^8L","~$&","^90"]]],"^7O",["^13",[null]]],"^7M",[["^13",["^87","^8L","^90"]]],"^7N",null,"^7X",2,"^7O",["^13",[null]],"^8",1,"^7P",true,"^7Y",[["^ ","^7X",2,"^7P",true,"^7Z","^83"]],"^7",198,"^7Q","^7R","^9",198,"^7S",2,"^7T",true,"^7K",["^13",[["^87","^8L","~$&","^90"]]]],"~$next-id",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",20,"^8",7,"^9",20,"^:",14,"^7K",["^13",["^7L",["^13",[[]]]]]],"^F","^4F","^6","shadow/object.cljs","^:",14,"^7M",["^13",[[]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",20,"^7Q",["^D",[null,"^7R"]],"^9",20,"^7S",0,"^7T",true,"^7K",["^13",["^7L",["^13",[[]]]]]],"~$-type",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",67,"^8",4,"^9",67,"^:",9,"~:protocol","^30","^88",null,"^7K",["^13",["^7L",["^13",[["^93"]]]]]],"^9R","^30","^F","^4B","^6","shadow/object.cljs","^:",9,"^7M",["^13",[["^93"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",65,"^7Q","^7R","^9",67,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^93"]]]]],"^88",null],"~$remove-in-parent!",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",657,"^8",7,"^9",657,"^:",24,"^7K",["^13",["^7L",["^13",[["^87"]]]]]],"^F","^4R","^6","shadow/object.cljs","^:",24,"^7M",["^13",[["^87"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",657,"^7Q","^83","^9",657,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^87"]]]]]],"~$get-parent",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",110,"^8",16,"^9",110,"^:",26,"^7J",true,"^7K",["^13",["^7L",["^13",[["^87"]]]]]],"^F","^4L","^6","shadow/object.cljs","^:",26,"^7M",["^13",[["^87"]]],"^7N",null,"^7J",true,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",110,"^7Q",["^D",["^7R","^83"]],"^9",110,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^87"]]]]]],"~$create",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",463,"^8",7,"^9",463,"^:",13,"^7K",["^13",["^7L",["^13",[["~$type","^90","~$&","~$node-children"]]]]],"^7W",["^ ","^7P",true,"^7X",2,"^7S",2,"^7M",[["^13",["^9V","^90","^9W"]]],"^7K",["^13",[["^9V","^90","~$&","^9W"]]],"^7O",["^13",[null]]]],"^F","^1P","^6","shadow/object.cljs","^:",13,"^7W",["^ ","^7P",true,"^7X",2,"^7S",2,"^7M",[["^13",["^9V","^90","^9W"]]],"^7K",["^13",[["^9V","^90","~$&","^9W"]]],"^7O",["^13",[null]]],"^7M",[["^13",["^9V","^90","^9W"]]],"^7N",null,"^7X",2,"^7O",["^13",[null]],"^8",1,"^7P",true,"^7Y",[["^ ","^7X",2,"^7P",true,"^7Z","^4Z"]],"^7",463,"^7Q","^7R","^9",463,"^7S",2,"^7T",true,"^7K",["^13",[["^9V","^90","~$&","^9W"]]]],"~$warn",["^ ","^F","^4N","^6","shadow/object.cljs","^7",16,"^8",1,"^9",16,"^:",10,"^5",["^ ","^6","shadow/object.cljs","^7",16,"^8",6,"^9",16,"^:",10]],"~$->ObjectRef",["^ ","^7I",null,"^5",["^ ","^9A",["^D",["^9B","^9C","^9D","^30","^9E","^9F","^9G","^9H","^9I","^9J"]],"^6","shadow/object.cljs","^:",19,"^8",10,"^98","~:positional","^7",353,"^9",353,"^7K",["^13",["^7L",["^13",[["~$id","^9V","^O","~$watches","~$result-chan"]]]]],"^9N",["^D",["^9B","^9C","^9F","^9H","^9J"]],"^88","Positional factory function for shadow.object/ObjectRef."],"^9A",["^D",["^9B","^9C","^9D","^30","^9E","^9F","^9G","^9H","^9I","^9J"]],"^F","^1R","^6","shadow/object.cljs","^:",19,"^7M",["^13",[["^9[","^9V","^O","^:0","^:1"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^98","^9Z","^7",353,"^7Q","^4Z","^9",353,"^7S",5,"^7T",true,"^7K",["^13",["^7L",["^13",[["^9[","^9V","^O","^:0","^:1"]]]]],"^9N",["^D",["^9B","^9C","^9F","^9H","^9J"]],"^88","Positional factory function for shadow.object/ObjectRef."],"~$-update",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",69,"^8",4,"^9",69,"^:",11,"^9R","^30","^88","update and notify watches","^7K",["^13",["^7L",["^13",[["^93","~$update-fn"]]]]]],"^9R","^30","^F","^3K","^6","shadow/object.cljs","^:",11,"^7M",["^13",[["^93","^:3"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",65,"^7Q","^7R","^9",69,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^93","^:3"]]]]],"^88","update and notify watches"],"~$get-children-of-type",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",138,"^8",7,"^9",138,"^:",27,"^7K",["^13",["^7L",["^13",[["^87","^9V"]]]]]],"^F","^20","^6","shadow/object.cljs","^:",27,"^7M",["^13",[["^87","^9V"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",138,"^7Q","^7[","^9",138,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^87","^9V"]]]]]],"~$coll-destroy-children",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",569,"^8",7,"^9",569,"^:",28,"^7K",["^13",["^7L",["^13",[["~$children","~$c","~$diff"]]]]]],"^F","^22","^6","shadow/object.cljs","^:",28,"^7M",["^13",[["^:6","~$c","^:7"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",569,"^7Q","~$cljs.core/Subvec","^9",569,"^7S",3,"^7T",true,"^7K",["^13",["^7L",["^13",[["^:6","~$c","^:7"]]]]]],"~$define-event",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",32,"^8",7,"^9",32,"^:",19,"^7K",["^13",["^7L",["^13",[["~$event-name","~$desc","^90"]]]]]],"^F","^4[","^6","shadow/object.cljs","^:",19,"^7M",["^13",[["^::","^:;","^90"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",32,"^7Q",["^D",[null,"^7R"]],"^9",32,"^7S",3,"^7T",true,"^7K",["^13",["^7L",["^13",[["^::","^:;","^90"]]]]]],"~$events",["^ ","^F","^24","^6","shadow/object.cljs","^7",30,"^8",1,"^9",30,"^:",12,"^5",["^ ","^6","shadow/object.cljs","^7",30,"^8",6,"^9",30,"^:",12],"^7Z","^81"],"~$-id",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",66,"^8",4,"^9",66,"^:",7,"^9R","^30","^88",null,"^7K",["^13",["^7L",["^13",[["^93"]]]]]],"^9R","^30","^F","^1[","^6","shadow/object.cljs","^:",7,"^7M",["^13",[["^93"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",65,"^7Q","^7R","^9",66,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^93"]]]]],"^88",null],"~$is-object?",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",99,"^8",7,"^9",99,"^:",17,"^7K",["^13",["^7L",["^13",[["~$obj-or-dom"]]]]]],"^F","^1Z","^6","shadow/object.cljs","^:",17,"^7M",["^13",[["^:?"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",99,"^7Q",["^D",["^8A","^7R","^83"]],"^9",99,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^:?"]]]]]],"~$->Watch",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^:",17,"^8",12,"^97",true,"^98","^9Z","^7",351,"^9",351,"^7K",["^13",["^7L",["^13",[["~$key","^8H"]]]]],"^88","Positional factory function for shadow.object/Watch."],"^F","^1W","^6","shadow/object.cljs","^:",17,"^7M",["^13",[["^:A","^8H"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^97",true,"^7P",false,"^98","^9Z","^7",351,"^7Q","^3I","^9",351,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^:A","^8H"]]]]],"^88","Positional factory function for shadow.object/Watch."],"~$-data",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",68,"^8",4,"^9",68,"^:",9,"^9R","^30","^88",null,"^7K",["^13",["^7L",["^13",[["^93"]]]]]],"^9R","^30","^F","^2A","^6","shadow/object.cljs","^:",9,"^7M",["^13",[["^93"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",65,"^7Q","^7R","^9",68,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^93"]]]]],"^88",null],"~$debug",["^ ","^F","^1K","^6","shadow/object.cljs","^7",14,"^8",1,"^9",14,"^:",11,"^5",["^ ","^6","shadow/object.cljs","^7",14,"^8",6,"^9",14,"^:",11]],"~$behavior-fns",["^ ","^F","^2<","^6","shadow/object.cljs","^7",24,"^8",1,"^9",24,"^:",18,"^5",["^ ","^6","shadow/object.cljs","^7",24,"^8",6,"^9",24,"^:",18],"^7Z","^81"],"~$get-type-attr",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",75,"^8",7,"^9",75,"^:",20,"^7K",["^13",["^7L",["^13",[["^87","^:A"],["^87","^:A","~$default"]]]]],"^7W",["^ ","^7P",false,"^7X",3,"^7S",3,"^7M",[["^87","^:A"],["^87","^:A","^:F"]],"^7K",["^13",[["^87","^:A"],["^87","^:A","^:F"]]],"^7O",["^13",[null,null]]]],"^F","^4<","^6","shadow/object.cljs","^:",20,"^7W",["^ ","^7P",false,"^7X",3,"^7S",3,"^7M",[["^87","^:A"],["^87","^:A","^:F"]],"^7K",["^13",[["^87","^:A"],["^87","^:A","^:F"]]],"^7O",["^13",[null,null]]],"^7M",[["^87","^:A"],["^87","^:A","^:F"]],"^7N",null,"^7X",3,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7Y",[["^ ","^7X",2,"^7P",false,"^7Z",["^D",[null,"^7R","^83"]]],["^ ","^7X",3,"^7P",false,"^7Z",["^D",[null,"^7R"]]]],"^7",75,"^9",75,"^7S",3,"^7T",true,"^7K",["^13",[["^87","^:A"],["^87","^:A","^:F"]]]],"~$inspect!",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",671,"^8",7,"^9",671,"^:",15,"^7K",["^13",["^7L",["^13",[["^87"]]]]]],"^F","^26","^6","shadow/object.cljs","^:",15,"^7M",["^13",[["^87"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",671,"^7Q","^7R","^9",671,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^87"]]]]]],"~$merge-behaviors",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",282,"^8",8,"^9",282,"^:",23,"^8E",true,"^7K",["^13",["^7L",["^13",[["^8F","~$behavior"]]]]]],"^8E",true,"^F","^27","^6","shadow/object.cljs","^:",23,"^7M",["^13",[["^8F","^:I"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",282,"^7Q",["^D",["^8:","^7R"]],"^9",282,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^8F","^:I"]]]]]],"~$get-children",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",125,"^8",16,"^9",125,"^:",28,"^7J",true,"^7K",["^13",["^7L",["^13",[["^86"]]]]]],"^F","^29","^6","shadow/object.cljs","^:",28,"^7M",["^13",[["^86"]]],"^7N",null,"^7J",true,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",125,"^7Q",["^D",["^8:","^8;","^7R","^8<","^83"]],"^9",125,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^86"]]]]]],"~$equal?",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",103,"^8",7,"^9",103,"^:",13,"^7K",["^13",["^7L",["^13",[["^8@","^:?"]]]]]],"^F","^2S","^6","shadow/object.cljs","^:",13,"^7M",["^13",[["^8@","^:?"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",103,"^7Q","^8A","^9",103,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^8@","^:?"]]]]]],"~$define",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",301,"^8",7,"^9",301,"^:",13,"^7K",["^13",["^7L",["^13",[["^9[","~$&","^90"]]]]],"^7W",["^ ","^7P",true,"^7X",1,"^7S",1,"^7M",[["^13",["^9[","^90"]]],"^7K",["^13",[["^9[","~$&","^90"]]],"^7O",["^13",[null]]]],"^F","^21","^6","shadow/object.cljs","^:",13,"^7W",["^ ","^7P",true,"^7X",1,"^7S",1,"^7M",[["^13",["^9[","^90"]]],"^7K",["^13",[["^9[","~$&","^90"]]],"^7O",["^13",[null]]],"^7M",[["^13",["^9[","^90"]]],"^7N",null,"^7X",1,"^7O",["^13",[null]],"^8",1,"^7P",true,"^7Y",[["^ ","^7X",1,"^7P",true]],"^7",301,"^7Q","^7R","^9",301,"^7S",1,"^7T",true,"^7K",["^13",[["^9[","~$&","^90"]]]],"~$bind-children",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",578,"^8",7,"^9",578,"^:",20,"^7K",["^13",["^7L",["^13",[["~$node","^86","^8W","^8X","^8Y"],["^:N","^86","^8W","^8X","^8Y","~$coll-transform"]]]]],"^7W",["^ ","^7P",false,"^7X",6,"^7S",6,"^7M",[["^:N","^86","^8W","^8X","^8Y"],["^:N","^86","^8W","^8X","^8Y","^:O"]],"^7K",["^13",[["^:N","^86","^8W","^8X","^8Y"],["^:N","^86","^8W","^8X","^8Y","^:O"]]],"^7O",["^13",[null,null]]]],"^F","^4I","^6","shadow/object.cljs","^:",20,"^7W",["^ ","^7P",false,"^7X",6,"^7S",6,"^7M",[["^:N","^86","^8W","^8X","^8Y"],["^:N","^86","^8W","^8X","^8Y","^:O"]],"^7K",["^13",[["^:N","^86","^8W","^8X","^8Y"],["^:N","^86","^8W","^8X","^8Y","^:O"]]],"^7O",["^13",[null,null]]],"^7M",[["^:N","^86","^8W","^8X","^8Y"],["^:N","^86","^8W","^8X","^8Y","^:O"]],"^7N",null,"^7X",6,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7Y",[["^ ","^7X",5,"^7P",false,"^7Z","^7R"],["^ ","^7X",6,"^7P",false,"^7Z","^7R"]],"^7",578,"^9",578,"^7S",6,"^7T",true,"^7K",["^13",[["^:N","^86","^8W","^8X","^8Y"],["^:N","^86","^8W","^8X","^8Y","^:O"]]]],"~$get-siblings-of-type",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",151,"^8",7,"^9",151,"^:",27,"^7K",["^13",["^7L",["^13",[["^87"],["^87","^9V"]]]]],"^88","returns set of all siblings of a common type","^7W",["^ ","^7P",false,"^7X",2,"^7S",2,"^7M",[["^87"],["^87","^9V"]],"^7K",["^13",[["^87"],["^87","^9V"]]],"^7O",["^13",[null,null]]]],"^F","^4D","^6","shadow/object.cljs","^:",27,"^7W",["^ ","^7P",false,"^7X",2,"^7S",2,"^7M",[["^87"],["^87","^9V"]],"^7K",["^13",[["^87"],["^87","^9V"]]],"^7O",["^13",[null,null]]],"^7M",[["^87"],["^87","^9V"]],"^7N",null,"^7X",2,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7Y",[["^ ","^7X",1,"^7P",false,"^7Z","^7R"],["^ ","^7X",2,"^7P",false,"^7Z","^7["]],"^7",151,"^9",151,"^7S",2,"^7T",true,"^7K",["^13",[["^87"],["^87","^9V"]]],"^88","returns set of all siblings of a common type"],"~$bind-change",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",440,"^8",7,"^9",440,"^:",18,"^7K",["^13",["^7L",["^13",[["^87","^8W","~$callback"],["^87","^8W","^:R","~$watch-key"]]]]],"^7W",["^ ","^7P",false,"^7X",4,"^7S",4,"^7M",[["^87","^8W","^:R"],["^87","^8W","^:R","^:S"]],"^7K",["^13",[["^87","^8W","^:R"],["^87","^8W","^:R","^:S"]]],"^7O",["^13",[null,null]]]],"^F","^2?","^6","shadow/object.cljs","^:",18,"^7W",["^ ","^7P",false,"^7X",4,"^7S",4,"^7M",[["^87","^8W","^:R"],["^87","^8W","^:R","^:S"]],"^7K",["^13",[["^87","^8W","^:R"],["^87","^8W","^:R","^:S"]]],"^7O",["^13",[null,null]]],"^7M",[["^87","^8W","^:R"],["^87","^8W","^:R","^:S"]],"^7N",null,"^7X",4,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7Y",[["^ ","^7X",3,"^7P",false,"^7Z","^7R"],["^ ","^7X",4,"^7P",false,"^7Z","^7R"]],"^7",440,"^9",440,"^7S",4,"^7T",true,"^7K",["^13",[["^87","^8W","^:R"],["^87","^8W","^:R","^:S"]]]],"~$IObject",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","shadow/object.cljs","^:",21,"^8",14,"^7",65,"~:protocol-info",["^ ","^7Y",["^ ","^:=",[["^93"]],"^9Q",[["^93"]],"^:B",[["^93"]],"^:2",[["^93","^:3"]],"~$-destroy!",[["^93","^9<"]]]],"^9",65,"~:sigs",["^ ","~:-id",["^ ","^F","^:=","^7K",["^13",[["^93"]]],"^88",null],"~:-type",["^ ","^F","^9Q","^7K",["^13",[["^93"]]],"^88",null],"~:-data",["^ ","^F","^:B","^7K",["^13",[["^93"]]],"^88",null],"~:-update",["^ ","^F","^:2","^7K",["^13",[["^93","^:3"]]],"^88","update and notify watches"],"~:-destroy!",["^ ","^F","^:W","^7K",["^13",[["^93","^9<"]]],"^88",null]],"~:jsdoc",["^13",["@interface"]]],"^:U",true,"^F","^30","^6","shadow/object.cljs","^:",21,"^8",1,"^7",65,"^:V",["^ ","^7Y",["^ ","^:=",[["^93"]],"^9Q",[["^93"]],"^:B",[["^93"]],"^:2",[["^93","^:3"]],"^:W",[["^93","^9<"]]]],"~:info",null,"^9",65,"^7Z","^7R","^:X",["^ ","^:Y",["^ ","^F","^:=","^7K",["^13",[["^93"]]],"^88",null],"^:Z",["^ ","^F","^9Q","^7K",["^13",[["^93"]]],"^88",null],"^:[",["^ ","^F","^:B","^7K",["^13",[["^93"]]],"^88",null],"^;0",["^ ","^F","^:2","^7K",["^13",[["^93","^:3"]]],"^88","update and notify watches"],"^;1",["^ ","^F","^:W","^7K",["^13",[["^93","^9<"]]],"^88",null]],"~:impls",["^D",["^4Z"]],"^;2",["^13",["@interface"]]],"~$obj-id",["^ ","^F","^32","^6","shadow/object.cljs","^7",19,"^8",1,"^9",19,"^:",12,"^5",["^ ","^6","shadow/object.cljs","^7",19,"^8",6,"^9",19,"^:",12],"^7Z","^81"],"~$get-collection-item",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",160,"^8",7,"^9",160,"^:",26,"^7K",["^13",["^7L",["^13",[["^87"]]]]]],"^F","^3=","^6","shadow/object.cljs","^:",26,"^7M",["^13",[["^87"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",160,"^7Q",["^D",["^7R","^83"]],"^9",160,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^87"]]]]]],"~$instances",["^ ","^F","^2L","^6","shadow/object.cljs","^7",26,"^8",1,"^9",26,"^:",15,"^5",["^ ","^6","shadow/object.cljs","^7",26,"^8",6,"^9",26,"^:",15],"^7Z","^81"],"~$console-friendly",["^ ","^F","^3H","^6","shadow/object.cljs","^7",11,"^8",1,"^9",11,"^:",22,"^5",["^ ","^6","shadow/object.cljs","^7",11,"^8",6,"^9",11,"^:",22]],"~$bind-simple",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",518,"^8",7,"^9",518,"^:",18,"^7K",["^13",["^7L",["^13",[["^87","^8W"],["^87","^8W","~$node-gen"]]]]],"^88","[oref attr node-gen] produces a node via (node-gen new-value)\n   watches obj for changes and replaces the generated node on change (node-gen defaults to str)\n\n  only use if the node has no attached behavior like clicks, use bind with an extra object for those","^7W",["^ ","^7P",false,"^7X",3,"^7S",3,"^7M",[["^87","^8W"],["^87","^8W","^;:"]],"^7K",["^13",[["^87","^8W"],["^87","^8W","^;:"]]],"^7O",["^13",[null,null]]]],"^F","^1H","^6","shadow/object.cljs","^:",18,"^7W",["^ ","^7P",false,"^7X",3,"^7S",3,"^7M",[["^87","^8W"],["^87","^8W","^;:"]],"^7K",["^13",[["^87","^8W"],["^87","^8W","^;:"]]],"^7O",["^13",[null,null]]],"^7M",[["^87","^8W"],["^87","^8W","^;:"]],"^7N",null,"^7X",3,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7Y",[["^ ","^7X",2,"^7P",false,"^7Z","^7R"],["^ ","^7X",3,"^7P",false,"^7Z","^7R"]],"^7",518,"^9",518,"^7S",3,"^7T",true,"^7K",["^13",[["^87","^8W"],["^87","^8W","^;:"]]],"^88","[oref attr node-gen] produces a node via (node-gen new-value)\n   watches obj for changes and replaces the generated node on change (node-gen defaults to str)\n\n  only use if the node has no attached behavior like clicks, use bind with an extra object for those"],"^:W",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",70,"^8",4,"^9",70,"^:",13,"^9R","^30","^88",null,"^7K",["^13",["^7L",["^13",[["^93","^9<"]]]]]],"^9R","^30","^F","^1I","^6","shadow/object.cljs","^:",13,"^7M",["^13",[["^93","^9<"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",65,"^7Q","^7R","^9",70,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^93","^9<"]]]]],"^88",null],"~$update!",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",204,"^8",7,"^9",204,"^:",14,"^7K",["^13",["^7L",["^13",[["^87","^:3","~$&","^90"]]]]],"^7W",["^ ","^7P",true,"^7X",2,"^7S",2,"^7M",[["^13",["^87","^:3","^90"]]],"^7K",["^13",[["^87","^:3","~$&","^90"]]],"^7O",["^13",[null]]]],"^F","^2P","^6","shadow/object.cljs","^:",14,"^7W",["^ ","^7P",true,"^7X",2,"^7S",2,"^7M",[["^13",["^87","^:3","^90"]]],"^7K",["^13",[["^87","^:3","~$&","^90"]]],"^7O",["^13",[null]]],"^7M",[["^13",["^87","^:3","^90"]]],"^7N",null,"^7X",2,"^7O",["^13",[null]],"^8",1,"^7P",true,"^7Y",[["^ ","^7X",2,"^7P",true,"^7Z","^7R"]],"^7",204,"^7Q","^7R","^9",204,"^7S",2,"^7T",true,"^7K",["^13",[["^87","^:3","~$&","^90"]]]],"~$bind-dom-events",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",243,"^8",7,"^9",243,"^:",22,"^7K",["^13",["^7L",["^13",[["^87","^M","~$dom-events"]]]]]],"^F","^39","^6","shadow/object.cljs","^:",22,"^7M",["^13",[["^87","^M","^;="]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",243,"^7Q","^83","^9",243,"^7S",3,"^7T",true,"^7K",["^13",["^7L",["^13",[["^87","^M","^;="]]]]]],"~$info",["^ ","^F","^3<","^6","shadow/object.cljs","^7",15,"^8",1,"^9",15,"^:",10,"^5",["^ ","^6","shadow/object.cljs","^7",15,"^8",6,"^9",15,"^:",10]],"~$merge-reactions",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",273,"^8",8,"^9",273,"^:",23,"^8E",true,"^7K",["^13",["^7L",["^13",[["^8F","^:I"]]]]]],"^8E",true,"^F","^1M","^6","shadow/object.cljs","^:",23,"^7M",["^13",[["^8F","^:I"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",273,"^7Q",["^D",[null,"^7R"]],"^9",273,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^8F","^:I"]]]]]],"~$make-dom",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",336,"^8",7,"^9",336,"^:",15,"^7K",["^13",["^7L",["^13",[["^87","~$dom-key","~$events-key"],["^87","^;A","^;B","~$value"]]]]],"^7W",["^ ","^7P",false,"^7X",4,"^7S",4,"^7M",[["^87","^;A","^;B"],["^87","^;A","^;B","^;C"]],"^7K",["^13",[["^87","^;A","^;B"],["^87","^;A","^;B","^;C"]]],"^7O",["^13",[null,null]]]],"^F","^2Z","^6","shadow/object.cljs","^:",15,"^7W",["^ ","^7P",false,"^7X",4,"^7S",4,"^7M",[["^87","^;A","^;B"],["^87","^;A","^;B","^;C"]],"^7K",["^13",[["^87","^;A","^;B"],["^87","^;A","^;B","^;C"]]],"^7O",["^13",[null,null]]],"^7M",[["^87","^;A","^;B"],["^87","^;A","^;B","^;C"]],"^7N",null,"^7X",4,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7Y",[["^ ","^7X",3,"^7P",false,"^7Z","^7R"],["^ ","^7X",4,"^7P",false,"^7Z","^7R"]],"^7",336,"^9",336,"^7S",4,"^7T",true,"^7K",["^13",[["^87","^;A","^;B"],["^87","^;A","^;B","^;C"]]]],"~$set-parent!",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",217,"^8",8,"^9",217,"^:",19,"^8E",true,"^7K",["^13",["^7L",["^13",[["^8R","^86"]]]]]],"^8E",true,"^F","^2D","^6","shadow/object.cljs","^:",19,"^7M",["^13",[["^8R","^86"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",217,"^7Q","^8A","^9",217,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^8R","^86"]]]]]],"~$instance-children",["^ ","^F","^2H","^6","shadow/object.cljs","^7",28,"^8",1,"^9",28,"^:",23,"^5",["^ ","^6","shadow/object.cljs","^7",28,"^8",6,"^9",28,"^:",23],"^7Z","^81"],"~$merge-defaults",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",327,"^8",8,"^9",327,"^:",22,"^8E",true,"^7K",["^13",["^7L",["^13",[["^O","^9V"]]]]]],"^8E",true,"^F","^3S","^6","shadow/object.cljs","^:",22,"^7M",["^13",[["^O","^9V"]]],"^7N",null,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",327,"^7Q",["^D",[null,"^7R","^83"]],"^9",327,"^7S",2,"^7T",true,"^7K",["^13",["^7L",["^13",[["^O","^9V"]]]]]],"~$get-by-id",["^ ","^7I",null,"^5",["^ ","^6","shadow/object.cljs","^7",90,"^8",16,"^9",90,"^:",25,"^7J",true,"^7K",["^13",["^7L",["^13",[["^9["]]]]]],"^F","^1S","^6","shadow/object.cljs","^:",25,"^7M",["^13",[["^9["]]],"^7N",null,"^7J",true,"^7O",["^13",[null,null]],"^8",1,"^7P",false,"^7",90,"^7Q",["^D",["^7R","^83"]],"^9",90,"^7S",1,"^7T",true,"^7K",["^13",["^7L",["^13",[["^9["]]]]]],"~$error",["^ ","^F","^2C","^6","shadow/object.cljs","^7",17,"^8",1,"^9",17,"^:",11,"^5",["^ ","^6","shadow/object.cljs","^7",17,"^8",6,"^9",17,"^:",11]],"~$Watch",["^ ","^9@",2,"^9A",["^D",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","^9C","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","^9H","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","^9J"]],"^F","^3I","^6","shadow/object.cljs","^:",17,"^9K",true,"^8",12,"^97",true,"^7",351,"^9L",true,"^9",351,"^7Z","^9M","^9N",["^D",["^;J","^;K","^9C","^;L","^;M","^;N","^;O","^;P","^;Q","^9H","^;R","^;S","^;T","^;U","^9J"]]]],"^11",["^ ","^S","^S","^L","^L","^Q","^R","^R","^R","^V","^L"],"~:cljs.analyzer/constants",["^ ","^Z",["^D",["~:shadow.object/coll-key","~:args","~:description","~:direct","~:shadow.object/coll-path","^8H","~:cause","~:dom/remove","~:bind/update","~:key","~:parent","~:init","^O","~:else","~:shadow.object/id","~:oref","^:0","~:object-type","~:destroy","^:A","^9K","~:behavior","~:dom/entered","~:behaviors","~:defaults","^:1","~:shadow.object/coll-item-key","~:shadow.object/return-value","~:bind-children-update","~:shadow.object/dom","~:shadow.object/reactions","~:event","~:oid","^9V","~:shadow.object/object-id","~:id","~:watch","~:dom/events","~:on","~:mutable","^9[","~:handler","~:dom/init","~:dom","~:attr"]],"~:order",["^<G","^;Y","^;X","^<5","^<:","^<0","^<M","^<N","^<<","^<A","^<B","^<E","^<4","^<8","^<?","^<C","^<@","^<1","^;Z","^<9","^<I","^<D","^<L","^<;","^<J","^<H","^<6","^<7","^<=","^<>","^9K","^<3","^:A","^8H","^9[","^9V","^O","^<K","^:0","^:1","^<O","^<F","^;[","^;W","^<2"]],"^18",["^ ","^[",["^D",[]]],"^19",["^ "],"^1:",["^T","^S","^N","^R","^X","^P","^U","^L"]],"^I","^G","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^52",[["^<S","~:static-fns"],true,["^<S","~:shadow-tweaks"],null,["^<S","~:source-map-inline"],null,["^<S","~:elide-asserts"],false,["^<S","~:optimize-constants"],null,["^<S","^1?"],null,["^<S","~:external-config"],null,["^<S","~:tooling-config"],null,["^<S","~:emit-constants"],null,["^<S","~:load-tests"],null,["^<S","~:form-size-threshold"],null,["^<S","~:data-readers"],null,["^<S","~:infer-externs"],"~:auto",["^<S","^1A"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^<S","~:fn-invoke-direct"],null,["^<S","~:source-map"],"/dev/null"]]]