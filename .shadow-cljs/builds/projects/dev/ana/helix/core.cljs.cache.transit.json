["^ ","~:output",["^ ","~:js","goog.provide('helix.core');\nvar module$node_modules$react$index=shadow.js.require(\"module$node_modules$react$index\", {});\nif((typeof Symbol !== 'undefined')){\n(Symbol.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL);\n\n(Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (sym,writer,_){\nvar sym__$1 = this;\nreturn cljs.core._write(writer,[\"\\\"\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1.toString()),\"\\\"\"].join(''));\n}));\n} else {\n}\nhelix.core.Fragment = module$node_modules$react$index.Fragment;\nhelix.core.Suspense = module$node_modules$react$index.Suspense;\nhelix.core.create_element = module$node_modules$react$index.createElement;\nhelix.core.create_context = module$node_modules$react$index.createContext;\nhelix.core.get_react = (function helix$core$get_react(){\nreturn module$node_modules$react$index;\n});\n/**\n * Create a new React element from a valid React type.\n * \n *   Example:\n *   ```\n *   ($ MyComponent\n * \"child1\"\n * ($ \"span\"\n *   {:style {:color \"green\"}}\n *   \"child2\" ))\n *   ```\n */\nhelix.core.$ = (function helix$core$$(var_args){\nvar args__4742__auto__ = [];\nvar len__4736__auto___26623 = arguments.length;\nvar i__4737__auto___26624 = (0);\nwhile(true){\nif((i__4737__auto___26624 < len__4736__auto___26623)){\nargs__4742__auto__.push((arguments[i__4737__auto___26624]));\n\nvar G__26625 = (i__4737__auto___26624 + (1));\ni__4737__auto___26624 = G__26625;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);\nreturn helix.core.$.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);\n});\n\n(helix.core.$.cljs$core$IFn$_invoke$arity$variadic = (function (type,args){\nvar _QMARK_p = cljs.core.first(args);\nvar _QMARK_c = cljs.core.rest(args);\nvar native_QMARK_ = (function (){var or__4126__auto__ = (type instanceof cljs.core.Keyword);\nif(or__4126__auto__){\nreturn or__4126__auto__;\n} else {\nvar or__4126__auto____$1 = typeof type === 'string';\nif(or__4126__auto____$1){\nreturn or__4126__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"native\",\"native\",-613060878).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(type));\n}\n}\n})();\nvar type_SINGLEQUOTE_ = (((type instanceof cljs.core.Keyword))?cljs.core.name(type):type);\nif(cljs.core.map_QMARK_(_QMARK_p)){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(helix.core.create_element,type_SINGLEQUOTE_,(cljs.core.truth_(native_QMARK_)?helix.impl.props._native_props.cljs$core$IFn$_invoke$arity$1(_QMARK_p):helix.impl.props._props.cljs$core$IFn$_invoke$arity$1(_QMARK_p)),_QMARK_c);\n} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(helix.core.create_element,type_SINGLEQUOTE_,null,args);\n}\n}));\n\n(helix.core.$.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(helix.core.$.cljs$lang$applyTo = (function (seq26612){\nvar G__26613 = cljs.core.first(seq26612);\nvar seq26612__$1 = cljs.core.next(seq26612);\nvar self__4723__auto__ = this;\nreturn self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__26613,seq26612__$1);\n}));\n\n/**\n * Dynamically create a new React element from a valid React type.\n * \n *   `$` can typically be faster, because it will statically process the arguments\n *   at macro-time if possible.\n * \n *   Example:\n *   ```\n *   ($$ MyComponent\n * \"child1\"\n * ($$ \"span\"\n *   {:style {:color \"green\"}}\n *   \"child2\" ))\n *   ```\n */\nhelix.core.$$ = helix.core.$;\n\n/**\n * @interface\n */\nhelix.core.IExtractType = function(){};\n\nvar helix$core$IExtractType$_type$dyn_26632 = (function (factory){\nvar x__4428__auto__ = (((factory == null))?null:factory);\nvar m__4429__auto__ = (helix.core._type[goog.typeOf(x__4428__auto__)]);\nif((!((m__4429__auto__ == null)))){\nreturn (m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(factory) : m__4429__auto__.call(null,factory));\n} else {\nvar m__4426__auto__ = (helix.core._type[\"_\"]);\nif((!((m__4426__auto__ == null)))){\nreturn (m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(factory) : m__4426__auto__.call(null,factory));\n} else {\nthrow cljs.core.missing_protocol(\"IExtractType.-type\",factory);\n}\n}\n});\n/**\n * Extracts the underlying type from the factory function.\n */\nhelix.core._type = (function helix$core$_type(factory){\nif((((!((factory == null)))) && ((!((factory.helix$core$IExtractType$_type$arity$1 == null)))))){\nreturn factory.helix$core$IExtractType$_type$arity$1(factory);\n} else {\nreturn helix$core$IExtractType$_type$dyn_26632(factory);\n}\n});\n\nhelix.core.type = (function helix$core$type(f){\nreturn helix.core._type(f);\n});\n/**\n * Creates a factory function for a React component\n */\nhelix.core.factory = (function helix$core$factory(type){\nvar x26614 = (function() { \nvar helix$core$factory_$_factory__delegate = function (args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(helix.core.$,type,args);\n};\nvar helix$core$factory_$_factory = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__26639__i = 0, G__26639__a = new Array(arguments.length -  0);\nwhile (G__26639__i < G__26639__a.length) {G__26639__a[G__26639__i] = arguments[G__26639__i + 0]; ++G__26639__i;}\n  args = new cljs.core.IndexedSeq(G__26639__a,0,null);\n} \nreturn helix$core$factory_$_factory__delegate.call(this,args);};\nhelix$core$factory_$_factory.cljs$lang$maxFixedArity = 0;\nhelix$core$factory_$_factory.cljs$lang$applyTo = (function (arglist__26644){\nvar args = cljs.core.seq(arglist__26644);\nreturn helix$core$factory_$_factory__delegate(args);\n});\nhelix$core$factory_$_factory.cljs$core$IFn$_invoke$arity$variadic = helix$core$factory_$_factory__delegate;\nreturn helix$core$factory_$_factory;\n})()\n;\n(x26614.helix$core$IExtractType$ = cljs.core.PROTOCOL_SENTINEL);\n\n(x26614.helix$core$IExtractType$_type$arity$1 = (function (_){\nvar ___$1 = this;\nreturn type;\n}));\n\nreturn x26614;\n});\nhelix.core.cljs_factory = (function helix$core$cljs_factory(type){\nvar x26615 = (function() { \nvar helix$core$cljs_factory_$_factory__delegate = function (args){\nif(cljs.core.map_QMARK_(cljs.core.first(args))){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(module$node_modules$react$index.createElement,type,({\"helix/props\": cljs.core.first(args)}),cljs.core.rest(args));\n} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(module$node_modules$react$index.createElement,type,({}),args);\n}\n};\nvar helix$core$cljs_factory_$_factory = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__26654__i = 0, G__26654__a = new Array(arguments.length -  0);\nwhile (G__26654__i < G__26654__a.length) {G__26654__a[G__26654__i] = arguments[G__26654__i + 0]; ++G__26654__i;}\n  args = new cljs.core.IndexedSeq(G__26654__a,0,null);\n} \nreturn helix$core$cljs_factory_$_factory__delegate.call(this,args);};\nhelix$core$cljs_factory_$_factory.cljs$lang$maxFixedArity = 0;\nhelix$core$cljs_factory_$_factory.cljs$lang$applyTo = (function (arglist__26657){\nvar args = cljs.core.seq(arglist__26657);\nreturn helix$core$cljs_factory_$_factory__delegate(args);\n});\nhelix$core$cljs_factory_$_factory.cljs$core$IFn$_invoke$arity$variadic = helix$core$cljs_factory_$_factory__delegate;\nreturn helix$core$cljs_factory_$_factory;\n})()\n;\n(x26615.helix$core$IExtractType$ = cljs.core.PROTOCOL_SENTINEL);\n\n(x26615.helix$core$IExtractType$_type$arity$1 = (function (_){\nvar ___$1 = this;\nreturn type;\n}));\n\nreturn x26615;\n});\nhelix.core.extract_cljs_props = (function helix$core$extract_cljs_props(o){\nif(((goog.DEBUG) && (((cljs.core.map_QMARK_(o)) || ((o == null)))))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Props received were a map. This probably means you're calling your component as a function.\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"props\",\"props\",453281727),o], null));\n} else {\n}\n\nvar temp__5733__auto__ = goog.object.get(o,\"helix/props\");\nif(cljs.core.truth_(temp__5733__auto__)){\nvar props = temp__5733__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(props,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),goog.object.get(o,\"children\"));\n} else {\nreturn cljs_bean.core.bean.cljs$core$IFn$_invoke$arity$1(o);\n}\n});\n/**\n * Like React.memo, but passes props as CLJS map-likes instead of JS objects.\n */\nhelix.core.memo = (function helix$core$memo(var_args){\nvar G__26617 = arguments.length;\nswitch (G__26617) {\ncase 1:\nreturn helix.core.memo.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn helix.core.memo.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(helix.core.memo.cljs$core$IFn$_invoke$arity$1 = (function (component){\nreturn module$node_modules$react$index.memo(component);\n}));\n\n(helix.core.memo.cljs$core$IFn$_invoke$arity$2 = (function (component,compare){\nreturn module$node_modules$react$index.memo(component,(function helix$core$memo_compare(o,o_SINGLEQUOTE_){\nvar G__26618 = helix.core.extract_cljs_props(o);\nvar G__26619 = helix.core.extract_cljs_props(o_SINGLEQUOTE_);\nreturn (compare.cljs$core$IFn$_invoke$arity$2 ? compare.cljs$core$IFn$_invoke$arity$2(G__26618,G__26619) : compare.call(null,G__26618,G__26619));\n}));\n}));\n\n(helix.core.memo.cljs$lang$maxFixedArity = 2);\n\nhelix.core.create_component = (function helix$core$create_component(spec,statics){\nvar render = spec.render;\nvar render_SINGLEQUOTE_ = (function (this$){\nvar G__26620 = this$;\nvar G__26621 = helix.core.extract_cljs_props(this$.props);\nvar G__26622 = this$.state;\nreturn (render.cljs$core$IFn$_invoke$arity$3 ? render.cljs$core$IFn$_invoke$arity$3(G__26620,G__26621,G__26622) : render.call(null,G__26620,G__26621,G__26622));\n});\ngoog.object.set(spec,\"render\",render_SINGLEQUOTE_);\n\nreturn helix.impl.classes.createComponent(module$node_modules$react$index.Component,spec,statics);\n});\n/**\n * Registers a component with the React Fresh runtime.\n *   `type` is the component function, and `id` is the unique ID assigned to it\n *   (e.g. component name) for cache invalidation.\n */\nhelix.core.register_BANG_ = (function helix$core$register_BANG_(type,id){\nif((!((window.$$Register$$ == null)))){\nreturn window.$$Register$$(type,id);\n} else {\nreturn null;\n}\n});\nhelix.core.signature_BANG_ = (function helix$core$signature_BANG_(){\nif((!((window.$$Signature$$ == null)))){\nreturn window.$$Signature$$();\n} else {\nreturn false;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","helix/core.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",15],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$type"]],"~:macros",["^ ","~$provider",["^ ","~:arglists",["~#list",[[["^ ","~:keys",["~$context","~$value"],"~:as","~$props"],"~$&","~$children"]]],"~:doc","Creates a Provider for a React Context value.\n\n  Example:\n\n    (def my-context (react/createContext))\n\n    (provider {:context my-context :value my-value} child1 child2 ...childN)","^7",57,"^8",1,"^6","helix/core.clj","~:name","~$helix.core/provider","~:ns","~$helix.core","~:macro",true],"~$defnc",["^ ","^H",["^I",[["~$display-name","~$&","~$form-body"]]],"^P","Creates a new functional React component. Used like:\n\n  (defnc component-name\n    \"Optional docstring\"\n    [props ?ref]\n    {,,,opts-map}\n    ,,,body)\n\n  \"component-name\" will now be a React function component that returns a React\n  Element.\n\n\n  Your component should adhere to the following:\n\n  First parameter is 'props', a map of properties passed to the component.\n\n  Second parameter is optional and is used with `React.forwardRef`.\n\n  'opts-map' is optional and can be used to pass some configuration options to the\n  macro. Current options:\n   - ':wrap' - ordered sequence of higher-order components to wrap the component in\n\n  'body' should return a React Element.","^7",107,"^8",1,"^6","helix/core.clj","^Q","~$helix.core/defnc","^S","^T","^U",true],"~$defcomponent",["^ ","^S","^T","^Q","~$helix.core/defcomponent","^6","helix/core.clj","^8",1,"^7",263,"^U",true,"~:style/indent",[1,"~:form",[1]],"^H",["^I",[["^W","~$&","~$spec"]]],"^P","Defines a React class component."],"~$suspense",["^ ","^H",["^I",[[["^ ","^J",["~$fallback"]],"~$&","^O"]]],"^P","Creates a React Suspense boundary.","^7",73,"^8",1,"^6","helix/core.clj","^Q","~$helix.core/suspense","^S","^T","^U",true],"~$$",["^ ","^H",["^I",[["^E","~$&","~$args"]]],"^P","Create a new React element from a valid React type.\n\n  Will try to statically convert props to a JS object. Falls back to `$$` when\n  ambiguous.\n\n  Example:\n  ```\n  ($ MyComponent\n   \"child1\"\n   ($ \"span\"\n     {:style {:color \"green\"}}\n     \"child2\" ))\n  ```","^7",7,"^8",1,"^6","helix/core.clj","^Q","~$helix.core/$","^S","^T","^U",true],"~$defhook",["^ ","^H",["^I",[["~$sym","~$&","~$body"]]],"^7",214,"^8",1,"^6","helix/core.clj","^Q","~$helix.core/defhook","^S","^T","^U",true],"~$<>",["^ ","^H",["^I",[["~$&","^O"]]],"^P","Creates a new React Fragment Element","^7",51,"^8",1,"^6","helix/core.clj","^Q","~$helix.core/<>","^S","^T","^U",true]],"^Q","^T","~:js-aliases",["^ ","react","~$module$node_modules$react$index"],"~:op","^S","~:imports",null,"~:requires",["^ ","~$impl.props","~$helix.impl.props","~$cljs-bean.core","^1F","~$bean","^1F","~$react","^1@","~$cljs.core","^1I","^1@","^1@","~$gobj","~$goog.object","~$goog","^1L","^1K","^1K","^1E","^1E","~$helix.impl.classes","^1M","~$helix.class","^1M"],"~:seen",["^D",["~:require","~:require-macros"]],"~:uses",null,"^1Q",["^ ","^T","^T","^1I","^1I","^1D","^1E","^1E","^1E"],"^11",["^I",["~$ns","^T",["^I",["~:refer-clojure","~:exclude",["^E"]]],["^I",["^1P",["^1K","^M","^1J"],["^1E","^M","^1D"],["^1M","^M","^1N"],["^1F","^M","^1G"],["react","^M","^1H"]]],["^I",["^1Q",["^T"]]]]],"~:flags",["^ ","^1P",["^D",[]],"^1Q",["^D",[]]],"~:js-deps",["^ ","^1?",["^ ","^M","^1H"]],"~:deps",["^1L","^1I","^1K","^1E","^1M","^1F","^1@"]],"^S","^T","~:resource-id",["~:shadow.build.classpath/resource","helix/core.cljs"],"~:compiled-at",1615904586247,"~:resource-name","helix/core.cljs","~:warnings",[],"~:source","(ns helix.core\n  (:refer-clojure :exclude [type])\n  (:require [goog.object :as gobj]\n            [helix.impl.props :as impl.props]\n            [helix.impl.classes :as helix.class]\n            [cljs-bean.core :as bean]\n            [\"react\" :as react])\n  (:require-macros [helix.core]))\n\n\n(when (exists? js/Symbol)\n  (extend-protocol IPrintWithWriter\n    js/Symbol\n    (-pr-writer [sym writer _]\n      (-write writer (str \"\\\"\" (.toString sym) \"\\\"\")))))\n\n\n(def Fragment react/Fragment)\n\n\n(def Suspense react/Suspense)\n\n\n(def create-element react/createElement)\n\n\n(def create-context react/createContext)\n\n\n;; this is to enable calling `(.createElement (get-react))` without doing\n;; a dynamic arity dispatch. See https://github.com/Lokeh/helix/issues/20\n(defn ^js/React get-react [] react)\n\n\n(defn $\n  \"Create a new React element from a valid React type.\n\n  Example:\n  ```\n  ($ MyComponent\n   \\\"child1\\\"\n   ($ \\\"span\\\"\n     {:style {:color \\\"green\\\"}}\n     \\\"child2\\\" ))\n  ```\"\n  [type & args]\n  (let [?p (first args)\n        ?c (rest args)\n        native? (or (keyword? type)\n                    (string? type)\n                    (:native (meta type)))\n        type' (if (keyword? type)\n                (name type)\n                type)]\n    (if (map? ?p)\n      (apply create-element\n             type'\n             (if native?\n               (impl.props/-native-props ?p)\n               (impl.props/-props ?p))\n             ?c)\n      (apply create-element\n             type'\n             nil\n             args))))\n\n\n(def ^:deprecated $$\n  \"Dynamically create a new React element from a valid React type.\n\n  `$` can typically be faster, because it will statically process the arguments\n  at macro-time if possible.\n\n  Example:\n  ```\n  ($$ MyComponent\n   \\\"child1\\\"\n   ($$ \\\"span\\\"\n     {:style {:color \\\"green\\\"}}\n     \\\"child2\\\" ))\n  ```\"\n $)\n\n\n(defprotocol IExtractType\n  (-type [factory] \"Extracts the underlying type from the factory function.\"))\n\n\n(defn type\n  [f]\n  (-type f))\n\n\n(defn factory\n  \"Creates a factory function for a React component\"\n  [type]\n  (-> (fn factory [& args]\n        (apply $ type args))\n      (specify! IExtractType\n        (-type [_] type))))\n\n\n(defn cljs-factory\n  [type]\n  (-> (fn factory [& args]\n        ;; put props detection here so it's easier to detect\n        ;; slow paths in render\n        (if (map? (first args))\n          (apply react/createElement\n                 type\n                 #js {\"helix/props\" (first args)}\n                 (rest args))\n          (apply react/createElement\n                 type\n                 #js {}\n                 args)))\n      (specify! IExtractType\n        (-type [_] type))))\n\n\n(defn extract-cljs-props\n  [o]\n  (when (and ^boolean goog/DEBUG (or (map? o) (nil? o)))\n    (throw (ex-info \"Props received were a map. This probably means you're calling your component as a function.\" {:props o})))\n  (if-let [props (gobj/get o \"helix/props\")]\n    (assoc props :children (gobj/get o \"children\"))\n    (bean/bean o)))\n\n\n(defn memo\n  \"Like React.memo, but passes props as CLJS map-likes instead of JS objects.\"\n  ([component] (react/memo component))\n  ([component compare]\n   (react/memo\n    component\n    (fn memo-compare\n      [o o']\n      (compare\n       (extract-cljs-props o)\n       (extract-cljs-props o'))))))\n\n\n\n;;\n;; -- class components\n;;\n\n\n\n(defn create-component [spec statics]\n  (let [render (.-render ^js spec)\n        render' (fn [this]\n                  (render\n                   this\n                   (extract-cljs-props (.-props ^js this))\n                   (.-state ^js this)))]\n    (gobj/set spec \"render\" render')\n    (helix.class/createComponent react/Component spec statics)))\n\n(comment\n  (def MyComponent\n    (create-component #js {:displayName \"Foo\"\n                           :constructor\n                           (fn [this]\n                             (set! (.-state this) #js {:count 3}))\n                           :render\n                           (fn [this props state]\n                             (prn props state)\n                             ($$ \"div\" (.-count (.-state this))))}\n                      nil))\n\n  (js/console.log MyComponent)\n\n  (rds/renderToString ($$ MyComponent {:foo \"baz\"})))\n\n\n;;\n;; -- React Fast Refresh\n;;\n\n\n(defn register!\n  \"Registers a component with the React Fresh runtime.\n  `type` is the component function, and `id` is the unique ID assigned to it\n  (e.g. component name) for cache invalidation.\"\n  [type id]\n  (when (exists? (.-$$Register$$ js/window))\n    (.$$Register$$ js/window type id)))\n\n\n(defn signature! []\n  ;; grrr `maybe` bug strikes again\n  (and (exists? (.-$$Signature$$ js/window))\n       (.$$Signature$$ js/window)))\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/Symbol","cljs.core/PROTOCOL_SENTINEL","sym","writer","_","cljs.core/-write","helix.core/Fragment","js/module$node_modules$react$index.Fragment","helix.core/Suspense","js/module$node_modules$react$index.Suspense","helix.core/create-element","js/module$node_modules$react$index.createElement","helix.core/create-context","js/module$node_modules$react$index.createContext","helix.core/get-react","js/module$node_modules$react$index","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","helix.core/$","seq26612","G__26613","cljs.core/first","cljs.core/next","self__4723__auto__","type","args","?p","?c","cljs.core/rest","native?","or__4126__auto__","cljs.core/Keyword","cljs.core/meta","type'","cljs.core/name","cljs.core/map?","cljs.core.apply","helix.impl.props._native_props","helix.impl.props._props","helix.core/$$","helix$core$IExtractType$_type$dyn","x__4428__auto__","m__4429__auto__","helix.core/-type","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","helix.core/IExtractType","factory","helix.core/type","f","helix.core/factory","x26614","helix.core/cljs-factory","x26615","helix.core/extract-cljs-props","o","goog/DEBUG","cljs.core.ex_info","temp__5733__auto__","props","goog.object/get","cljs.core.assoc","cljs_bean.core.bean","G__26617","helix.core/memo","js/Error","component","js/module$node_modules$react$index.memo","compare","o'","G__26618","G__26619","helix.core/create-component","spec","statics","render","render'","this","G__26620","G__26621","G__26622","goog.object/set","helix.impl.classes/createComponent","js/module$node_modules$react$index.Component","helix.core/register!","id","js/window","helix.core/signature!"]],"~:used-vars",["^D",["~$helix.core/signature!","~$cljs.core/PROTOCOL_SENTINEL","~$helix.core/Suspense","~$helix.core/type","~$helix.impl.props/-native-props","~$js/module$node_modules$react$index","~$cljs.core/-write","^17","~$cljs.core/apply","~$cljs-bean.core/bean","~$helix.core/factory","~$js/module$node_modules$react$index.createElement","~$js/Symbol","~$cljs.core/map?","~$helix.core/create-element","~$js/module$node_modules$react$index.Suspense","~$helix.core/register!","~$helix.core/$$","~$js/module$node_modules$react$index.Fragment","~$goog.object/set","~$helix.core/create-context","~$js/module$node_modules$react$index.memo","~$goog/DEBUG","~$cljs.core/ex-info","~$helix.impl.props/-props","~$cljs.core/not","~$helix.core/get-react","~$helix.impl.classes/createComponent","~$cljs.core/assoc","~$helix.core/extract-cljs-props","~$helix.core/Fragment","~$helix.core/cljs-factory","~$helix.core/IExtractType","~$helix.core/memo","~$helix.core/-type","~$js/module$node_modules$react$index.createContext","~$js/window","~$js/module$node_modules$react$index.Component","~$helix.core/create-component","~$js/Error","~$goog.object/get"]]],"~:cache-keys",["~#cmap",[["^1Z","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["^1L","~$goog.dom.HtmlElement"]]],["^1Z","helix/impl/classes.js"],["f77d617c1d61dfbfc793e3b789a7b1222fc854df","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["^1Z","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","~$goog.array","~$goog.asserts"]]],["^1Z","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["^1Z","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3=","~$goog.labs.userAgent.util","^1K","~$goog.string.internal"]]],["^1Z","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3>","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3@"]]],["^1Z","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3>"]]],["^1Z","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["^1Z","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["^1Z","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1Z","shadow/js.js"],["5681752b001c297606d765446310ff57302c45f4","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["^1Z","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["^1Z","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3>"]]],"~:SHADOW-TIMESTAMP",[1615899884000,1615899884000,1614681766000],["^3G","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^3H","~$module$node_modules$object_assign$index"]]],["^1Z","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3>","~$goog.reflect"]]],["^1Z","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3>","~$goog.html.trustedtypes","^3C","^3D","^3E","^3F"]]],["^1Z","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["^1Z","cljs_bean/core.cljs"],["48253381fc2e9a7be115de76154157bad516ea85","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^1I","~$cljs-bean.from.cljs.core","^1K"]]],["^1Z","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["^1Z","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3=","^3>","~$goog.html.SafeUrl","^3E","^3F","^3@"]]],["^1Z","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3>","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^3P","^3B","~$goog.html.uncheckedconversions","^3E","^3@"]]],["^1Z","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1Z","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3=","^3>","~$goog.dom.TagName","~$goog.dom.tags","^3T","^3U","~$goog.html.SafeStyleSheet","^3P","^3B","^3N","^3C","^3D","~$goog.labs.userAgent.browser","^1K","^3E","^3F","^3@"]]],["^1Z","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^1K"]]],["^1Z","helix/impl/props.cljc"],["f77d617c1d61dfbfc793e3b789a7b1222fc854df","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^1I","~$clojure.string","^1F","^1K"]]],["^1Z","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1Z","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3=","^3>","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1Z","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["^3G","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","519ffd5a4c91b67302cc9947b794966d629860cd","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^3H"]]],["^1Z","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["^1Z","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",[]]],["^1Z","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3=","^1K"]]],["^1Z","clojure/string.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^1I","^44","~$goog.string.StringBuffer"]]],["^3G","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","6093d43b27c84de58b9ce55e3a930469339c9e54","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^3H","^3L"]]],["^1Z","helix/core.cljs"],["f77d617c1d61dfbfc793e3b789a7b1222fc854df","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^1I","^1K","^1E","^1M","^1F","^1@"]]],["^1Z","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","~$goog.dom.safe","^3V","^3E","^3@"]]],["^1Z","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["^1Z","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3@"]]],["^1Z","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["^1Z","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3=","^3>","^3R","~$goog.math"]]],["^1Z","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3>","^3S","^3T","^3U","^3[","^3P","^3B","^3E","^3@"]]],["^1Z","cljs_bean/from/cljs/core.cljs"],["48253381fc2e9a7be115de76154157bad516ea85","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^1I"]]],["^1Z","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L"]]],["^1Z","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","~$goog.math.Long","~$goog.math.Integer","^44","^1K","^3=","~$goog.Uri","^4:"]]],["^1Z","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3>","^3N","^3E","^3F"]]],["^1Z","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3=","^3>","^3U","^1K","^3E","^3F","^3@"]]],["^1Z","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3M"]]],["^1Z","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3=","^3>","^44"]]],["^1Z","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^38",["^ ","^39",null,"^3:",["^D",[]],"^3;",["^1L","^3>","^3F"]]]]],"~:clj-info",["^ ","jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer/api.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/zip.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/lilactown/helix/0.0.12/helix-0.0.12.jar!/helix/impl/analyzer.clj",1614681773000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/lilactown/helix/0.0.12/helix-0.0.12.jar!/helix/core.clj",1614681773000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/lilactown/helix/0.0.12/helix-0.0.12.jar!/helix/impl/props.cljc",1614681773000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1606738673000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","helix/core.cljs","^7",1,"^8",5,"^9",1,"^:",15],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"~:shadow/protocol-prefixes",["^D",["helix$core$IExtractType$"]],"^B",null,"^C",["^D",["^E"]],"^F",["^ ","^G",["^ ","^H",["^I",[[["^ ","^J",["^K","^L"],"^M","^N"],"~$&","^O"]]],"^P","Creates a Provider for a React Context value.\n\n  Example:\n\n    (def my-context (react/createContext))\n\n    (provider {:context my-context :value my-value} child1 child2 ...childN)","^7",57,"^8",1,"^6","helix/core.clj","^Q","^R","^S","^T","^U",true],"^V",["^ ","^H",["^I",[["^W","~$&","^X"]]],"^P","Creates a new functional React component. Used like:\n\n  (defnc component-name\n    \"Optional docstring\"\n    [props ?ref]\n    {,,,opts-map}\n    ,,,body)\n\n  \"component-name\" will now be a React function component that returns a React\n  Element.\n\n\n  Your component should adhere to the following:\n\n  First parameter is 'props', a map of properties passed to the component.\n\n  Second parameter is optional and is used with `React.forwardRef`.\n\n  'opts-map' is optional and can be used to pass some configuration options to the\n  macro. Current options:\n   - ':wrap' - ordered sequence of higher-order components to wrap the component in\n\n  'body' should return a React Element.","^7",107,"^8",1,"^6","helix/core.clj","^Q","^Y","^S","^T","^U",true],"^Z",["^ ","^S","^T","^Q","^[","^6","helix/core.clj","^8",1,"^7",263,"^U",true,"^10",[1,"^11",[1]],"^H",["^I",[["^W","~$&","^12"]]],"^P","Defines a React class component."],"^13",["^ ","^H",["^I",[[["^ ","^J",["^14"]],"~$&","^O"]]],"^P","Creates a React Suspense boundary.","^7",73,"^8",1,"^6","helix/core.clj","^Q","^15","^S","^T","^U",true],"~$$",["^ ","^H",["^I",[["^E","~$&","^16"]]],"^P","Create a new React element from a valid React type.\n\n  Will try to statically convert props to a JS object. Falls back to `$$` when\n  ambiguous.\n\n  Example:\n  ```\n  ($ MyComponent\n   \"child1\"\n   ($ \"span\"\n     {:style {:color \"green\"}}\n     \"child2\" ))\n  ```","^7",7,"^8",1,"^6","helix/core.clj","^Q","^17","^S","^T","^U",true],"^18",["^ ","^H",["^I",[["^19","~$&","^1:"]]],"^7",214,"^8",1,"^6","helix/core.clj","^Q","^1;","^S","^T","^U",true],"^1<",["^ ","^H",["^I",[["~$&","^O"]]],"^P","Creates a new React Fragment Element","^7",51,"^8",1,"^6","helix/core.clj","^Q","^1=","^S","^T","^U",true]],"~:shadow/js-access-properties",["^D",["$$Signature$$","createElement","Fragment","$$Register$$","createContext","Suspense","Component","memo"]],"^Q","^T","^1>",["^ ","^1?","^1@"],"^1B",null,"^1C",["^ ","^1D","^1E","^1F","^1F","^1G","^1F","^1H","^1@","^1I","^1I","^1@","^1@","^1J","^1K","^1L","^1L","^1K","^1K","^1E","^1E","^1M","^1M","^1N","^1M"],"^1O",["^D",["^1P","^1Q"]],"~:shadow/js-access-global",["^D",["window","Symbol","Error"]],"^1R",null,"~:defs",["^ ","~$$$",["^ ","^5",["^ ","^6","helix/core.cljs","^7",68,"^8",19,"^9",68,"^:",21,"~:deprecated",true],"^Q","^2J","^6","helix/core.cljs","^:",21,"^8",1,"^7",68,"^58",true,"^9",68,"^P","Dynamically create a new React element from a valid React type.\n\n  `$` can typically be faster, because it will statically process the arguments\n  at macro-time if possible.\n\n  Example:\n  ```\n  ($$ MyComponent\n   \"child1\"\n   ($$ \"span\"\n     {:style {:color \"green\"}}\n     \"child2\" ))\n  ```"],"~$create-context",["^ ","^Q","^2M","^6","helix/core.cljs","^7",27,"^8",1,"^9",27,"^:",20,"^5",["^ ","^6","helix/core.cljs","^7",27,"^8",6,"^9",27,"^:",20],"~:tag","~$js"],"~$memo",["^ ","~:protocol-inline",null,"^5",["^ ","^6","helix/core.cljs","^7",130,"^8",7,"^9",130,"^:",11,"^H",["^I",["~$quote",["^I",[["~$component"],["^5?","~$compare"]]]]],"^P","Like React.memo, but passes props as CLJS map-likes instead of JS objects.","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^5?"],["^5?","^5@"]],"^H",["^I",[["^5?"],["^5?","^5@"]]],"~:arglists-meta",["^I",[null,null]]]],"^Q","^2Z","^6","helix/core.cljs","^:",11,"^5A",["^ ","^5B",false,"^5C",2,"^5D",2,"^5E",[["^5?"],["^5?","^5@"]],"^H",["^I",[["^5?"],["^5?","^5@"]]],"^5F",["^I",[null,null]]],"^5E",[["^5?"],["^5?","^5@"]],"~:protocol-impl",null,"^5C",2,"^5F",["^I",[null,null]],"^8",1,"^5B",false,"~:methods",[["^ ","^5C",1,"^5B",false,"^5:","^5;"],["^ ","^5C",2,"^5B",false,"^5:","^5;"]],"^7",130,"^9",130,"^5D",2,"~:fn-var",true,"^H",["^I",[["^5?"],["^5?","^5@"]]],"^P","Like React.memo, but passes props as CLJS map-likes instead of JS objects."],"~$IExtractType",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","helix/core.cljs","^:",26,"^8",14,"^7",85,"~:protocol-info",["^ ","^5H",["^ ","~$-type",[["~$factory"]]]],"^9",85,"~:sigs",["^ ","~:-type",["^ ","^Q","^5M","^H",["^I",[["^5N"]]],"^P","Extracts the underlying type from the factory function."]],"~:jsdoc",["^I",["@interface"]]],"^5K",true,"^Q","^2Y","^6","helix/core.cljs","^:",26,"^8",1,"^7",85,"^5L",["^ ","^5H",["^ ","^5M",[["^5N"]]]],"~:info",null,"^9",85,"^5:","~$any","^5O",["^ ","^5P",["^ ","^Q","^5M","^H",["^I",[["^5N"]]],"^P","Extracts the underlying type from the factory function."]],"~:impls",["^D",["~$x26615","~$x26614"]],"^5Q",["^I",["@interface"]]],"~$get-react",["^ ","^5=",null,"^5",["^ ","^6","helix/core.cljs","^7",32,"^8",17,"^9",32,"^:",26,"^5:","~$js/React","^H",["^I",["^5>",["^I",[[]]]]]],"^Q","^2S","^6","helix/core.cljs","^:",26,"^5E",["^I",[[]]],"^5G",null,"^5F",["^I",[null,null]],"^8",1,"^5B",false,"^7",32,"~:ret-tag","^5X","^9",32,"^5D",0,"^5:","^5X","^5I",true,"^H",["^I",["^5>",["^I",[[]]]]]],"~$create-component",["^ ","^5=",null,"^5",["^ ","^6","helix/core.cljs","^7",150,"^8",7,"^9",150,"^:",23,"^H",["^I",["^5>",["^I",[["^12","~$statics"]]]]]],"^Q","^33","^6","helix/core.cljs","^:",23,"^5E",["^I",[["^12","^5["]]],"^5G",null,"^5F",["^I",[null,null]],"^8",1,"^5B",false,"^7",150,"^5Y","^5S","^9",150,"^5D",2,"^5I",true,"^H",["^I",["^5>",["^I",[["^12","^5["]]]]]],"~$Fragment",["^ ","^Q","^2W","^6","helix/core.cljs","^7",18,"^8",1,"^9",18,"^:",14,"^5",["^ ","^6","helix/core.cljs","^7",18,"^8",6,"^9",18,"^:",14],"^5:","^5;"],"~$extract-cljs-props",["^ ","^5=",null,"^5",["^ ","^6","helix/core.cljs","^7",121,"^8",7,"^9",121,"^:",25,"^H",["^I",["^5>",["^I",[["~$o"]]]]]],"^Q","^2V","^6","helix/core.cljs","^:",25,"^5E",["^I",[["~$o"]]],"^5G",null,"^5F",["^I",[null,null]],"^8",1,"^5B",false,"^7",121,"^5Y",["^D",["~$clj","^5S","~$cljs-bean.core/Bean"]],"^9",121,"^5D",1,"^5I",true,"^H",["^I",["^5>",["^I",[["~$o"]]]]]],"~$cljs-factory",["^ ","^5=",null,"^5",["^ ","^6","helix/core.cljs","^7",103,"^8",7,"^9",103,"^:",19,"^H",["^I",["^5>",["^I",[["^E"]]]]]],"^Q","^2X","^6","helix/core.cljs","^:",19,"^5E",["^I",[["^E"]]],"^5G",null,"^5F",["^I",[null,null]],"^8",1,"^5B",false,"^7",103,"^5Y","~$function","^9",103,"^5D",1,"^5I",true,"^H",["^I",["^5>",["^I",[["^E"]]]]]],"^5M",["^ ","^5=",null,"^5",["^ ","^6","helix/core.cljs","^7",86,"^8",4,"^9",86,"^:",9,"~:protocol","^2Y","^P","Extracts the underlying type from the factory function.","^H",["^I",["^5>",["^I",[["^5N"]]]]]],"^66","^2Y","^Q","^2[","^6","helix/core.cljs","^:",9,"^5E",["^I",[["^5N"]]],"^5G",null,"^5F",["^I",[null,null]],"^8",1,"^5B",false,"^7",85,"^5Y","^5S","^9",86,"^5D",1,"^5I",true,"^H",["^I",["^5>",["^I",[["^5N"]]]]],"^P","Extracts the underlying type from the factory function."],"~$Suspense",["^ ","^Q","^2<","^6","helix/core.cljs","^7",21,"^8",1,"^9",21,"^:",14,"^5",["^ ","^6","helix/core.cljs","^7",21,"^8",6,"^9",21,"^:",14],"^5:","^5;"],"~$signature!",["^ ","^5=",null,"^5",["^ ","^6","helix/core.cljs","^7",191,"^8",7,"^9",191,"^:",17,"^H",["^I",["^5>",["^I",[[]]]]]],"^Q","^2:","^6","helix/core.cljs","^:",17,"^5E",["^I",[[]]],"^5G",null,"^5F",["^I",[null,null]],"^8",1,"^5B",false,"^7",191,"^5Y",["^D",["~$boolean","^5;"]],"^9",191,"^5D",0,"^5I",true,"^H",["^I",["^5>",["^I",[[]]]]]],"^E",["^ ","^5=",null,"^5",["^ ","^6","helix/core.cljs","^7",89,"^8",7,"^9",89,"^:",11,"^H",["^I",["^5>",["^I",[["~$f"]]]]]],"^Q","^2=","^6","helix/core.cljs","^:",11,"^5E",["^I",[["~$f"]]],"^5G",null,"^5F",["^I",[null,null]],"^8",1,"^5B",false,"^7",89,"^5Y","^5S","^9",89,"^5D",1,"^5I",true,"^H",["^I",["^5>",["^I",[["~$f"]]]]]],"~$$",["^ ","^5=",null,"^5",["^ ","^6","helix/core.cljs","^7",35,"^8",7,"^9",35,"^:",8,"^H",["^I",["^5>",["^I",[["^E","~$&","^16"]]]]],"^P","Create a new React element from a valid React type.\n\n  Example:\n  ```\n  ($ MyComponent\n   \"child1\"\n   ($ \"span\"\n     {:style {:color \"green\"}}\n     \"child2\" ))\n  ```","^5A",["^ ","^5B",true,"^5C",1,"^5D",1,"^5E",[["^I",["^E","^16"]]],"^H",["^I",[["^E","~$&","^16"]]],"^5F",["^I",[null]]]],"^Q","^17","^6","helix/core.cljs","^:",8,"^5A",["^ ","^5B",true,"^5C",1,"^5D",1,"^5E",[["^I",["^E","^16"]]],"^H",["^I",[["^E","~$&","^16"]]],"^5F",["^I",[null]]],"^5E",[["^I",["^E","^16"]]],"^5G",null,"^5C",1,"^5F",["^I",[null]],"^8",1,"^5B",true,"^5H",[["^ ","^5C",1,"^5B",true,"^5:","^5S"]],"^7",35,"^5Y","^5S","^9",35,"^5D",1,"^5I",true,"^H",["^I",[["^E","~$&","^16"]]],"^P","Create a new React element from a valid React type.\n\n  Example:\n  ```\n  ($ MyComponent\n   \"child1\"\n   ($ \"span\"\n     {:style {:color \"green\"}}\n     \"child2\" ))\n  ```"],"^5N",["^ ","^5=",null,"^5",["^ ","^6","helix/core.cljs","^7",94,"^8",7,"^9",94,"^:",14,"^H",["^I",["^5>",["^I",[["^E"]]]]],"^P","Creates a factory function for a React component"],"^Q","^2C","^6","helix/core.cljs","^:",14,"^5E",["^I",[["^E"]]],"^5G",null,"^5F",["^I",[null,null]],"^8",1,"^5B",false,"^7",94,"^5Y","^65","^9",94,"^5D",1,"^5I",true,"^H",["^I",["^5>",["^I",[["^E"]]]]],"^P","Creates a factory function for a React component"],"~$create-element",["^ ","^Q","^2G","^6","helix/core.cljs","^7",24,"^8",1,"^9",24,"^:",20,"^5",["^ ","^6","helix/core.cljs","^7",24,"^8",6,"^9",24,"^:",20],"^5:","^5;"],"~$register!",["^ ","^5=",null,"^5",["^ ","^6","helix/core.cljs","^7",182,"^8",7,"^9",182,"^:",16,"^H",["^I",["^5>",["^I",[["^E","~$id"]]]]],"^P","Registers a component with the React Fresh runtime.\n  `type` is the component function, and `id` is the unique ID assigned to it\n  (e.g. component name) for cache invalidation."],"^Q","^2I","^6","helix/core.cljs","^:",16,"^5E",["^I",[["^E","^6<"]]],"^5G",null,"^5F",["^I",[null,null]],"^8",1,"^5B",false,"^7",182,"^5Y",["^D",["^5;","~$clj-nil"]],"^9",182,"^5D",2,"^5I",true,"^H",["^I",["^5>",["^I",[["^E","^6<"]]]]],"^P","Registers a component with the React Fresh runtime.\n  `type` is the component function, and `id` is the unique ID assigned to it\n  (e.g. component name) for cache invalidation."]],"^1Q",["^ ","^T","^T","^1I","^1I","^1D","^1E","^1E","^1E"],"~:cljs.analyzer/constants",["^ ","^1O",["^D",["~:children","~:native","~:props"]],"~:order",["^6@","^6A","^6?"]],"^1V",["^ ","^1P",["^D",[]],"^1Q",["^D",[]]],"^1W",["^ ","^1?",["^ ","^M","^1H"]],"^1X",["^1L","^1I","^1K","^1E","^1M","^1F","^1@"]],"^S","^T","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^37",[["^6E","~:static-fns"],true,["^6E","~:shadow-tweaks"],null,["^6E","~:source-map-inline"],null,["^6E","~:elide-asserts"],false,["^6E","~:optimize-constants"],null,["^6E","^21"],null,["^6E","~:external-config"],null,["^6E","~:tooling-config"],null,["^6E","~:emit-constants"],null,["^6E","~:load-tests"],null,["^6E","~:form-size-threshold"],null,["^6E","~:data-readers"],null,["^6E","~:infer-externs"],"~:auto",["^6E","^23"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6E","~:fn-invoke-direct"],null,["^6E","~:source-map"],"/dev/null"]]]