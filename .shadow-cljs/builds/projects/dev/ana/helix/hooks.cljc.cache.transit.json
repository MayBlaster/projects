["^ ","~:output",["^ ","~:js","goog.provide('helix.hooks');\nvar module$node_modules$react$index=shadow.js.require(\"module$node_modules$react$index\", {});\nhelix.hooks.raw_use_effect = module$node_modules$react$index.useEffect;\n\nhelix.hooks.raw_use_layout_effect = module$node_modules$react$index.useLayoutEffect;\n\nhelix.hooks.raw_use_memo = module$node_modules$react$index.useMemo;\n\nhelix.hooks.raw_use_callback = module$node_modules$react$index.useCallback;\n\nhelix.hooks.raw_use_imperative_handle = module$node_modules$react$index.useImperativeHandle;\n/**\n * Like `react/useState`, but the update function returned can be used similar\n *   to `swap!`.\n * \n *   Example:\n *   ```\n *   (let [[state set-state] (use-state {:count 0})]\n * ;; ...\n * (set-state update :count inc))\n *   ```\n */\nhelix.hooks.use_state = (function helix$hooks$use_state(initial){\nvar vec__32490 = module$node_modules$react$index.useState(initial);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32490,(0),null);\nvar u = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32490,(1),null);\nvar updater = module$node_modules$react$index.useCallback((function() {\nvar helix$hooks$use_state_$_updater = null;\nvar helix$hooks$use_state_$_updater__1 = (function (x){\nreturn (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(x) : u.call(null,x));\n});\nvar helix$hooks$use_state_$_updater__2 = (function() { \nvar G__32519__delegate = function (f,xs){\nreturn helix$hooks$use_state_$_updater.cljs$core$IFn$_invoke$arity$1((function helix$hooks$use_state_$_updater_$_spread_updater(x){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,x,xs);\n}));\n};\nvar G__32519 = function (f,var_args){\nvar xs = null;\nif (arguments.length > 1) {\nvar G__32520__i = 0, G__32520__a = new Array(arguments.length -  1);\nwhile (G__32520__i < G__32520__a.length) {G__32520__a[G__32520__i] = arguments[G__32520__i + 1]; ++G__32520__i;}\n  xs = new cljs.core.IndexedSeq(G__32520__a,0,null);\n} \nreturn G__32519__delegate.call(this,f,xs);};\nG__32519.cljs$lang$maxFixedArity = 1;\nG__32519.cljs$lang$applyTo = (function (arglist__32521){\nvar f = cljs.core.first(arglist__32521);\nvar xs = cljs.core.rest(arglist__32521);\nreturn G__32519__delegate(f,xs);\n});\nG__32519.cljs$core$IFn$_invoke$arity$variadic = G__32519__delegate;\nreturn G__32519;\n})()\n;\nhelix$hooks$use_state_$_updater = function(f,var_args){\nvar xs = var_args;\nswitch(arguments.length){\ncase 1:\nreturn helix$hooks$use_state_$_updater__1.call(this,f);\ndefault:\nvar G__32522 = null;\nif (arguments.length > 1) {\nvar G__32523__i = 0, G__32523__a = new Array(arguments.length -  1);\nwhile (G__32523__i < G__32523__a.length) {G__32523__a[G__32523__i] = arguments[G__32523__i + 1]; ++G__32523__i;}\nG__32522 = new cljs.core.IndexedSeq(G__32523__a,0,null);\n}\nreturn helix$hooks$use_state_$_updater__2.cljs$core$IFn$_invoke$arity$variadic(f, G__32522);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhelix$hooks$use_state_$_updater.cljs$lang$maxFixedArity = 1;\nhelix$hooks$use_state_$_updater.cljs$lang$applyTo = helix$hooks$use_state_$_updater__2.cljs$lang$applyTo;\nhelix$hooks$use_state_$_updater.cljs$core$IFn$_invoke$arity$1 = helix$hooks$use_state_$_updater__1;\nhelix$hooks$use_state_$_updater.cljs$core$IFn$_invoke$arity$variadic = helix$hooks$use_state_$_updater__2.cljs$core$IFn$_invoke$arity$variadic;\nreturn helix$hooks$use_state_$_updater;\n})()\n,[]);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v,updater], null);\n});\n/**\n * Just like react/useRef. Supports accessing the \"current\" property via\n *   dereference (@) and updating the \"current\" property via `reset!` and `swap!`\n */\nhelix.hooks.use_ref = (function helix$hooks$use_ref(x){\nvar ref = module$node_modules$react$index.useRef(null);\nif((ref.current == null)){\n(ref.current = (function (){var x32493 = ({\"current\": x});\n(x32493.cljs$core$IDeref$ = cljs.core.PROTOCOL_SENTINEL);\n\n(x32493.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar this$__$1 = this;\nreturn this$__$1.current;\n}));\n\n(x32493.cljs$core$IReset$ = cljs.core.PROTOCOL_SENTINEL);\n\n(x32493.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,v){\nvar this$__$1 = this;\nreturn goog.object.set(this$__$1,\"current\",v);\n}));\n\n(x32493.cljs$core$ISwap$ = cljs.core.PROTOCOL_SENTINEL);\n\n(x32493.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (this$,f){\nvar this$__$1 = this;\nreturn goog.object.set(this$__$1,\"current\",(function (){var G__32494 = this$__$1.current;\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32494) : f.call(null,G__32494));\n})());\n}));\n\n(x32493.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (this$,f,a){\nvar this$__$1 = this;\nreturn goog.object.set(this$__$1,\"current\",(function (){var G__32495 = this$__$1.current;\nvar G__32496 = a;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32495,G__32496) : f.call(null,G__32495,G__32496));\n})());\n}));\n\n(x32493.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (this$,f,a,b){\nvar this$__$1 = this;\nreturn goog.object.set(this$__$1,\"current\",(function (){var G__32497 = this$__$1.current;\nvar G__32498 = a;\nvar G__32499 = b;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32497,G__32498,G__32499) : f.call(null,G__32497,G__32498,G__32499));\n})());\n}));\n\n(x32493.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (this$,f,a,b,xs){\nvar this$__$1 = this;\nreturn goog.object.set(this$__$1,\"current\",cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,this$__$1.current,a,b,xs));\n}));\n\nreturn x32493;\n})());\n} else {\n}\n\nreturn ref.current;\n});\n/**\n * Just react/useReducer.\n */\nhelix.hooks.use_reducer = (function helix$hooks$use_reducer(var_args){\nvar G__32501 = arguments.length;\nswitch (G__32501) {\ncase 2:\nreturn helix.hooks.use_reducer.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn helix.hooks.use_reducer.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(helix.hooks.use_reducer.cljs$core$IFn$_invoke$arity$2 = (function (reducer,init_state){\nreturn helix.hooks.use_reducer.cljs$core$IFn$_invoke$arity$3(reducer,init_state,undefined);\n}));\n\n(helix.hooks.use_reducer.cljs$core$IFn$_invoke$arity$3 = (function (reducer,init_state,init){\nreturn module$node_modules$react$index.useReducer(module$node_modules$react$index.useMemo((function (){\nif((((!(cljs.core.fn_QMARK_(reducer)))) && (cljs.core.ifn_QMARK_(reducer)))){\nreturn (function helix$hooks$wrap_ifn(state,action){\nreturn (reducer.cljs$core$IFn$_invoke$arity$2 ? reducer.cljs$core$IFn$_invoke$arity$2(state,action) : reducer.call(null,state,action));\n});\n} else {\nreturn reducer;\n}\n}),[reducer]),init_state,init);\n}));\n\n(helix.hooks.use_reducer.cljs$lang$maxFixedArity = 3);\n\n/**\n * Just react/useContext\n */\nhelix.hooks.use_context = module$node_modules$react$index.useContext;\nhelix.hooks.wrap_fx = (function helix$hooks$wrap_fx(f){\nreturn (function helix$hooks$wrap_fx_$_wrap_fx_return(){\nvar x = (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\nif(cljs.core.fn_QMARK_(x)){\nreturn x;\n} else {\nreturn undefined;\n}\n});\n});\nhelix.hooks.simple_body_QMARK_ = (function helix$hooks$simple_body_QMARK_(body){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(body),(1))) && ((cljs.core.first(body) instanceof cljs.core.Symbol)));\n});\nhelix.hooks.determine_deps = (function helix$hooks$determine_deps(deps){\nvar G__32502 = deps;\nvar G__32502__$1 = (((G__32502 instanceof cljs.core.Keyword))?G__32502.fqn:null);\nswitch (G__32502__$1) {\ncase \"once\":\nreturn [];\n\nbreak;\ncase \"always\":\nreturn undefined;\n\nbreak;\ncase \"auto-deps\":\nthrow (new Error(\"Cannot use :auto-deps outside of macro.\"));\n\nbreak;\ndefault:\nreturn cljs.core.to_array(deps);\n\n}\n});\nhelix.hooks.use_effect_STAR_ = (function helix$hooks$use_effect_STAR_(var_args){\nvar G__32504 = arguments.length;\nswitch (G__32504) {\ncase 1:\nreturn helix.hooks.use_effect_STAR_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn helix.hooks.use_effect_STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(helix.hooks.use_effect_STAR_.cljs$core$IFn$_invoke$arity$1 = (function (f){\nreturn module$node_modules$react$index.useEffect(helix.hooks.wrap_fx(f));\n}));\n\n(helix.hooks.use_effect_STAR_.cljs$core$IFn$_invoke$arity$2 = (function (f,deps){\nif(cljs.core.truth_(goog.DEBUG)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(deps,new cljs.core.Keyword(null,\"auto-deps\",\"auto-deps\",-2124919365))){\nthrow (new Error(\"Can't use `:auto-deps` with `use-effect*`; use `use-effect` macro for that\"));\n} else {\n}\n} else {\n}\n\nreturn module$node_modules$react$index.useEffect(helix.hooks.wrap_fx(f),cljs.core.to_array(deps));\n}));\n\n(helix.hooks.use_effect_STAR_.cljs$lang$maxFixedArity = 2);\n\nhelix.hooks.use_layout_effect_STAR_ = (function helix$hooks$use_layout_effect_STAR_(var_args){\nvar G__32506 = arguments.length;\nswitch (G__32506) {\ncase 1:\nreturn helix.hooks.use_layout_effect_STAR_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn helix.hooks.use_layout_effect_STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(helix.hooks.use_layout_effect_STAR_.cljs$core$IFn$_invoke$arity$1 = (function (f){\nreturn module$node_modules$react$index.useLayoutEffect(helix.hooks.wrap_fx(f));\n}));\n\n(helix.hooks.use_layout_effect_STAR_.cljs$core$IFn$_invoke$arity$2 = (function (f,deps){\nif(cljs.core.truth_(goog.DEBUG)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(deps,new cljs.core.Keyword(null,\"auto-deps\",\"auto-deps\",-2124919365))){\nthrow (new Error(\"Can't use `:auto-deps` with `use-layout-effect*`; use `use-layout-effect` macro for that\"));\n} else {\n}\n} else {\n}\n\nreturn module$node_modules$react$index.useLayoutEffect(helix.hooks.wrap_fx(f),cljs.core.to_array(deps));\n}));\n\n(helix.hooks.use_layout_effect_STAR_.cljs$lang$maxFixedArity = 2);\n\nhelix.hooks.use_memo_STAR_ = (function helix$hooks$use_memo_STAR_(var_args){\nvar G__32508 = arguments.length;\nswitch (G__32508) {\ncase 1:\nreturn helix.hooks.use_memo_STAR_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn helix.hooks.use_memo_STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(helix.hooks.use_memo_STAR_.cljs$core$IFn$_invoke$arity$1 = (function (f){\nreturn module$node_modules$react$index.useMemo(f);\n}));\n\n(helix.hooks.use_memo_STAR_.cljs$core$IFn$_invoke$arity$2 = (function (f,deps){\nif(cljs.core.truth_(goog.DEBUG)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(deps,new cljs.core.Keyword(null,\"auto-deps\",\"auto-deps\",-2124919365))){\nthrow (new Error(\"Can't use `:auto-deps` with `use-memo*`; use `use-memo` macro for that\"));\n} else {\n}\n} else {\n}\n\nreturn module$node_modules$react$index.useMemo(f,cljs.core.to_array(deps));\n}));\n\n(helix.hooks.use_memo_STAR_.cljs$lang$maxFixedArity = 2);\n\nhelix.hooks.use_callback_STAR_ = (function helix$hooks$use_callback_STAR_(var_args){\nvar G__32510 = arguments.length;\nswitch (G__32510) {\ncase 1:\nreturn helix.hooks.use_callback_STAR_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn helix.hooks.use_callback_STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(helix.hooks.use_callback_STAR_.cljs$core$IFn$_invoke$arity$1 = (function (f){\nreturn module$node_modules$react$index.useCallback(f);\n}));\n\n(helix.hooks.use_callback_STAR_.cljs$core$IFn$_invoke$arity$2 = (function (f,deps){\nif(cljs.core.truth_(goog.DEBUG)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(deps,new cljs.core.Keyword(null,\"auto-deps\",\"auto-deps\",-2124919365))){\nthrow (new Error(\"Can't use `:auto-deps` with `use-callback*`; use `use-callback` macro for that\"));\n} else {\n}\n} else {\n}\n\nreturn module$node_modules$react$index.useCallback(f,cljs.core.to_array(deps));\n}));\n\n(helix.hooks.use_callback_STAR_.cljs$lang$maxFixedArity = 2);\n\nhelix.hooks.use_imperative_handle_STAR_ = (function helix$hooks$use_imperative_handle_STAR_(var_args){\nvar G__32512 = arguments.length;\nswitch (G__32512) {\ncase 2:\nreturn helix.hooks.use_imperative_handle_STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn helix.hooks.use_imperative_handle_STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(helix.hooks.use_imperative_handle_STAR_.cljs$core$IFn$_invoke$arity$2 = (function (ref,f){\nreturn module$node_modules$react$index.useImperativeHandle(ref,f);\n}));\n\n(helix.hooks.use_imperative_handle_STAR_.cljs$core$IFn$_invoke$arity$3 = (function (ref,f,deps){\nif(cljs.core.truth_(goog.DEBUG)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(deps,new cljs.core.Keyword(null,\"auto-deps\",\"auto-deps\",-2124919365))){\nthrow (new Error(\"Can't use `:auto-deps` with `use-imperative-handle*`; use `use-imperative-handle` macro for that\"));\n} else {\n}\n} else {\n}\n\nreturn module$node_modules$react$index.useImperativeHandle(ref,f,cljs.core.to_array(deps));\n}));\n\n(helix.hooks.use_imperative_handle_STAR_.cljs$lang$maxFixedArity = 3);\n\n/**\n * just react/useDebugValue\n */\nhelix.hooks.use_debug_value = module$node_modules$react$index.debugValue;\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","helix/hooks.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$use-memo",["^ ","~:arglists",["~#list",[["~$deps","~$&","~$body"]]],"^7",197,"^8",4,"^6","helix/hooks.cljc","~:name","~$helix.hooks/use-memo","~:ns","~$helix.hooks","~:macro",true],"~$use-imperative-handle",["^ ","^G",["^H",[["~$ref","^I","~$&","^J"]]],"^7",246,"^8",4,"^6","helix/hooks.cljc","^K","~$helix.hooks/use-imperative-handle","^M","^N","^O",true],"~$use-layout-effect",["^ ","^G",["^H",[["^I","~$&","^J"]]],"^7",177,"^8",4,"^6","helix/hooks.cljc","^K","~$helix.hooks/use-layout-effect","^M","^N","^O",true],"~$use-effect",["^ ","^G",["^H",[["^I","~$&","^J"]]],"^7",153,"^8",4,"^6","helix/hooks.cljc","^K","~$helix.hooks/use-effect","^M","^N","^O",true],"~$use-callback",["^ ","^G",["^H",[["^I","~$&","^J"]]],"^7",226,"^8",4,"^6","helix/hooks.cljc","^K","~$helix.hooks/use-callback","^M","^N","^O",true]],"^K","^N","~:js-aliases",["^ ","react","~$module$node_modules$react$index"],"~:op","^M","~:imports",null,"~:requires",["^ ","~$goog.object","^13","~$gobj","^13","~$cljs.core","^15","~$goog","^16","^[","^[","~$react","^["],"~:seen",["^D",["~:require","~:require-macros"]],"~:uses",null,"^1:",["^ ","^N","^N","^15","^15"],"~:form",["^H",["~$ns","^N",["^H",["^19",["react","~:as","^17"],["^13","^1>","^14"]]],["^H",["^1:",["^N"]]]]],"~:flags",["^ ","^19",["^D",[]],"^1:",["^D",[]]],"~:js-deps",["^ ","^Z",["^ ","^1>","^17"]],"~:deps",["^16","^15","^[","^13"]],"^M","^N","~:resource-id",["~:shadow.build.classpath/resource","helix/hooks.cljc"],"~:compiled-at",1615913982883,"~:resource-name","helix/hooks.cljc","~:warnings",[],"~:source","(ns helix.hooks\n  #?(:clj (:require [helix.impl.analyzer :as hana])\n     :cljs (:require\n             [\"react\" :as react]\n             [goog.object :as gobj]))\n  #?(:cljs (:require-macros [helix.hooks])))\n\n#?(:cljs\n   (do (def raw-use-effect react/useEffect)\n       (def raw-use-layout-effect react/useLayoutEffect)\n       (def raw-use-memo react/useMemo)\n       (def raw-use-callback react/useCallback)\n       (def raw-use-imperative-handle react/useImperativeHandle)))\n\n\n\n\n\n#?(:cljs\n   (defn use-state\n     \"Like `react/useState`, but the update function returned can be used similar\n  to `swap!`.\n\n  Example:\n  ```\n  (let [[state set-state] (use-state {:count 0})]\n   ;; ...\n   (set-state update :count inc))\n  ```\"\n     [initial]\n     (let [[v u] (react/useState initial)\n           updater (react/useCallback (fn updater\n                                        ([x] (u x))\n                                        ([f & xs]\n                                         (updater (fn spread-updater [x]\n                                                    (apply f x xs)))))\n                                      ;; `u` is guaranteed to be stable so we elide it\n                                      #js [])]\n       [v updater])))\n\n\n#?(:cljs\n   (defn use-ref\n     \"Just like react/useRef. Supports accessing the \\\"current\\\" property via\n  dereference (@) and updating the \\\"current\\\" property via `reset!` and `swap!`\"\n     [x]\n     (let [ref (react/useRef nil)]\n       (when (nil? (.-current ^js ref))\n         (set! (.-current ^js ref)\n               (specify! #js {:current x}\n                 IDeref\n                 (-deref [this]\n                   (.-current ^js this))\n\n                 IReset\n                 (-reset! [this v]\n                   (gobj/set this \"current\" v))\n\n                 ISwap\n                 (-swap!\n                   ([this f]\n                    (gobj/set this \"current\" (f (.-current ^js this))))\n                   ([this f a]\n                    (gobj/set this \"current\" (f (.-current ^js this) a)))\n                   ([this f a b]\n                    (gobj/set this \"current\" (f (.-current ^js this) a b)))\n                   ([this f a b xs]\n                    (gobj/set this \"current\" (apply f (.-current ^js this) a b xs)))))))\n       (.-current ^js ref))))\n\n\n#?(:cljs\n   (defn use-reducer\n     \"Just react/useReducer.\"\n     ([reducer init-state]\n      (use-reducer reducer init-state js/undefined))\n     ([reducer init-state init]\n      (react/useReducer\n       ;; handle ifn, e.g. multi-methods\n       (react/useMemo\n        #(if (and (not (fn? reducer)) (ifn? reducer))\n           (fn wrap-ifn [state action]\n             (reducer state action))\n           reducer)\n        #js [reducer])\n       init-state\n       init))))\n\n\n#?(:cljs\n   (def use-context\n     \"Just react/useContext\"\n     react/useContext))\n\n\n;; React `useEffect` expects either a function or undefined to be returned\n#?(:cljs\n   (defn wrap-fx [f]\n     (fn wrap-fx-return []\n       (let [x (f)]\n         (if (fn? x)\n           x\n           js/undefined)))))\n\n\n(defn simple-body? [body]\n  (and (= (count body) 1) (symbol? (first body))))\n\n\n#?(:clj\n   (defn deps-macro-body [env deps body deps->hook-body]\n     (cond\n       ;;\n       ;; Warn on typical errors writing body\n       ;;\n\n       ;; a single symbol\n       (and (= (count body) 1) (symbol? (first body)))\n       (do (hana/warn hana/warning-simple-body env {:form body})\n           nil)\n\n\n       ;;\n       ;; Different variations of deps\n       ;;\n\n       ;; deps are passed in as a vector\n       (vector? deps) (deps->hook-body `(cljs.core/array ~@deps)\n                                       body)\n\n       ;; auto deps is passed in\n       (= deps :auto-deps) (deps->hook-body\n                            `(cljs.core/array ~@(hana/resolve-local-vars env body))\n                            body)\n\n       ;; always fire it (don't pass any deps in to hook)\n       (= deps :always) (deps->hook-body body)\n\n       ;; pass an empty array for things that should only run once\n       (= deps :once) (deps->hook-body '(cljs.core/array) body)\n\n       :else (deps->hook-body `(determine-deps ~deps) body)))\n\n   :cljs (defn determine-deps [deps]\n           (case deps\n             :once (array)\n             :always js/undefined\n             :auto-deps (throw (js/Error. \"Cannot use :auto-deps outside of macro.\"))\n             (to-array deps))))\n\n\n#?(:clj\n   (defmacro use-effect\n     [deps & body]\n     (deps-macro-body\n      &env deps body\n      (fn\n        ([fn-body] `^clj-nil (raw-use-effect (wrap-fx (fn [] ~@fn-body))))\n        ([deps fn-body]\n         `^clj-nil (raw-use-effect (wrap-fx (fn [] ~@fn-body)) ~deps))))))\n\n\n#?(:cljs\n   ;; we provide a CLJS defn in the case when we need to pass around the hook\n   ;; as a value. This will be slower, `:auto-deps` won't work and devtools will\n   ;; be harder to read\n   (defn use-effect*\n     ([f] (react/useEffect (wrap-fx f)))\n     ([f deps]\n      (when js/goog.DEBUG\n        (when (= deps :auto-deps)\n          (throw (js/Error. \"Can't use `:auto-deps` with `use-effect*`; use `use-effect` macro for that\"))))\n      (react/useEffect (wrap-fx f) (to-array deps)))))\n\n\n#?(:clj\n   (defmacro use-layout-effect [deps & body]\n     (deps-macro-body\n      &env deps body\n      (fn\n        ([fn-body] `^clj-nil (raw-use-layout-effect (wrap-fx (fn [] ~@fn-body))))\n        ([deps fn-body]\n         `^clj-nil (raw-use-layout-effect (wrap-fx (fn [] ~@fn-body)) ~deps))))))\n\n\n#?(:cljs\n   (defn use-layout-effect*\n     ([f] (react/useLayoutEffect (wrap-fx f)))\n     ([f deps]\n      (when js/goog.DEBUG\n        (when (= deps :auto-deps)\n          (throw (js/Error. \"Can't use `:auto-deps` with `use-layout-effect*`; use `use-layout-effect` macro for that\"))))\n      (react/useLayoutEffect (wrap-fx f) (to-array deps)))))\n\n\n#?(:clj\n   (defmacro use-memo\n     [deps & body]\n     (deps-macro-body\n      &env deps body\n      (fn\n        ([fn-body]\n         (vary-meta\n          `(raw-use-memo (fn [] ~@fn-body))\n          merge\n          {:tag (hana/inferred-type &env fn-body)}))\n        ([deps fn-body]\n         (vary-meta\n          `(raw-use-memo (fn [] ~@fn-body)\n                         ~deps)\n          merge\n          {:tag (hana/inferred-type &env (last fn-body))}))))))\n\n\n#?(:cljs\n   (defn use-memo*\n     ([f] (react/useMemo f))\n     ([f deps]\n      (when js/goog.DEBUG\n        (when (= deps :auto-deps)\n          (throw (js/Error. \"Can't use `:auto-deps` with `use-memo*`; use `use-memo` macro for that\"))))\n      (react/useMemo f (to-array deps)))))\n\n\n#?(:clj\n   (defmacro use-callback\n     [deps & body]\n     (deps-macro-body\n      &env deps body\n      (fn\n        ([fn-body] `^function (raw-use-callback ~@fn-body))\n        ([deps fn-body] `^function (raw-use-callback ~@fn-body\n                                                     ~deps))))))\n\n#?(:cljs\n   (defn use-callback*\n     ([f] (react/useCallback f))\n     ([f deps]\n      (when js/goog.DEBUG\n        (when (= deps :auto-deps)\n          (throw (js/Error. \"Can't use `:auto-deps` with `use-callback*`; use `use-callback` macro for that\"))))\n      (react/useCallback f (to-array deps)))))\n\n\n#?(:clj\n   (defmacro use-imperative-handle\n     [ref deps & body]\n     (deps-macro-body\n      &env deps body\n      (fn\n        ([fn-body] `(raw-use-imperative-handle ref (fn [] ~@fn-body)))\n        ([deps fn-body] `(raw-use-imperative-handle\n                          (fn [] ~@fn-body)\n                          ~deps))))))\n\n\n#?(:cljs\n   (defn use-imperative-handle*\n     ([ref f] (react/useImperativeHandle ref f))\n     ([ref f deps]\n      (when js/goog.DEBUG\n        (when (= deps :auto-deps)\n          (throw (js/Error. \"Can't use `:auto-deps` with `use-imperative-handle*`; use `use-imperative-handle` macro for that\"))))\n      (react/useImperativeHandle ref f (to-array deps)))))\n\n\n#?(:cljs\n   (def use-debug-value\n     \"just react/useDebugValue\"\n     react/debugValue))\n\n","~:reader-features",["^D",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["helix.hooks/raw-use-effect","js/module$node_modules$react$index.useEffect","helix.hooks/raw-use-layout-effect","js/module$node_modules$react$index.useLayoutEffect","helix.hooks/raw-use-memo","js/module$node_modules$react$index.useMemo","helix.hooks/raw-use-callback","js/module$node_modules$react$index.useCallback","helix.hooks/raw-use-imperative-handle","js/module$node_modules$react$index.useImperativeHandle","helix.hooks/use-state","initial","vec__32490","cljs.core.nth","v","u","js/module$node_modules$react$index.useState","updater","x","f","xs","helix$hooks$use_state_$_updater","cljs.core.apply","helix.hooks/use-ref","ref","js/module$node_modules$react$index.useRef","x32493","cljs.core/PROTOCOL_SENTINEL","this","goog.object/set","G__32494","a","G__32495","G__32496","b","G__32497","G__32498","G__32499","var_args","G__32501","helix.hooks/use-reducer","js/Error","reducer","init-state","helix.hooks.use_reducer","js/undefined","init","js/module$node_modules$react$index.useReducer","cljs.core/fn?","cljs.core/ifn?","state","action","helix.hooks/use-context","js/module$node_modules$react$index.useContext","helix.hooks/wrap-fx","helix.hooks/simple-body?","body","cljs.core._EQ_","cljs.core/count","cljs.core/Symbol","cljs.core/first","helix.hooks/determine-deps","deps","G__32502","cljs.core/Keyword","cljs.core/to-array","G__32504","helix.hooks/use-effect*","js/goog.DEBUG","G__32506","helix.hooks/use-layout-effect*","G__32508","helix.hooks/use-memo*","G__32510","helix.hooks/use-callback*","G__32512","helix.hooks/use-imperative-handle*","helix.hooks/use-debug-value","js/module$node_modules$react$index.debugValue"]],"~:used-vars",["^D",["~$js/module$node_modules$react$index.useMemo","~$helix.hooks/use-ref","~$cljs.core/to-array","~$cljs.core/PROTOCOL_SENTINEL","~$js/undefined","~$helix.hooks/use-callback*","~$helix.hooks/use-memo*","~$helix.hooks/use-reducer","~$cljs.core/=","~$cljs.core/ifn?","~$cljs.core/count","~$cljs.core/apply","~$helix.hooks/raw-use-imperative-handle","~$helix.hooks/raw-use-layout-effect","~$helix.hooks/wrap-fx","~$helix.hooks/simple-body?","~$helix.hooks/use-imperative-handle*","~$cljs.core/fn?","~$js/module$node_modules$react$index.useCallback","~$goog.object/set","~$js/module$node_modules$react$index.useContext","~$helix.hooks/determine-deps","~$js/module$node_modules$react$index.useLayoutEffect","~$helix.hooks/use-effect*","~$helix.hooks/use-layout-effect*","~$js/goog.DEBUG","~$js/module$node_modules$react$index.useReducer","~$cljs.core/not","~$helix.hooks/raw-use-callback","~$helix.hooks/raw-use-effect","~$cljs.core/Symbol","~$js/module$node_modules$react$index.useEffect","~$js/module$node_modules$react$index.debugValue","~$js/module$node_modules$react$index.useImperativeHandle","~$helix.hooks/use-state","~$cljs.core/first","~$helix.hooks/use-context","~$helix.hooks/use-debug-value","~$js/Error","~$helix.hooks/raw-use-memo"]]],"~:cache-keys",["~#cmap",[["^1C","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^D",[]],"~:deps-syms",["^16","~$goog.dom.HtmlElement"]]],["^1C","helix/hooks.cljc"],["f77d617c1d61dfbfc793e3b789a7b1222fc854df","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^15","^[","^13"]]],["^1C","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","~$goog.array","~$goog.asserts"]]],["^1C","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16"]]],["^1C","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2R","~$goog.labs.userAgent.util","^13","~$goog.string.internal"]]],["^1C","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2S","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^2U"]]],["^1C","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2S"]]],["^1C","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16"]]],["^1C","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16"]]],["^1C","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1C","shadow/js.js"],["5681752b001c297606d765446310ff57302c45f4","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16"]]],["^1C","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16"]]],["^1C","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2S"]]],"~:SHADOW-TIMESTAMP",[1615899884000,1615899884000,1614681766000],["^30","node_modules/react/cjs/react.development.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","2d5bc5b3fb2e19279e31e634b0695b1fd96a54f3","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^31","~$module$node_modules$object_assign$index"]]],["^1C","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2S","~$goog.reflect"]]],["^1C","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2S","~$goog.html.trustedtypes","^2X","^2Y","^2Z","^2["]]],["^1C","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16"]]],["^1C","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16"]]],["^1C","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2R","^2S","~$goog.html.SafeUrl","^2Z","^2[","^2U"]]],["^1C","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2S","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^38","^2W","~$goog.html.uncheckedconversions","^2Z","^2U"]]],["^1C","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1C","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2R","^2S","~$goog.dom.TagName","~$goog.dom.tags","^3<","^3=","~$goog.html.SafeStyleSheet","^38","^2W","^37","^2X","^2Y","~$goog.labs.userAgent.browser","^13","^2Z","^2[","^2U"]]],["^1C","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^13"]]],["^1C","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1C","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2R","^2S","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1C","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16"]]],["^30","node_modules/object-assign/index.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","519ffd5a4c91b67302cc9947b794966d629860cd","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^31"]]],["^1C","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16"]]],["^1C","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",[]]],["^1C","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2R","^13"]]],["^30","node_modules/react/cjs/react.production.min.js"],["d2b3d9e8fa8186b8aeddfc91d01d70689433d1f4","91f343238d339a21b91ac3d4f1d804783ecfdecb","6093d43b27c84de58b9ce55e3a930469339c9e54","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^31","^35"]]],["^1C","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","~$goog.dom.safe","^3>","^2Z","^2U"]]],["^1C","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16"]]],["^1C","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2U"]]],["^1C","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16"]]],["^1C","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2R","^2S","^3:","~$goog.math"]]],["^1C","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2S","^3;","^3<","^3=","^3C","^38","^2W","^2Z","^2U"]]],["^1C","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16"]]],["^1C","cljs/core.cljs"],["9f9729dbbf9b814c83dc189977b447d2ae92b6cd","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","~$goog.math.Long","~$goog.math.Integer","^3G","^13","^2R","~$goog.Uri","~$goog.string.StringBuffer"]]],["^1C","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2S","^37","^2Z","^2["]]],["^1C","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2R","^2S","^3=","^13","^2Z","^2[","^2U"]]],["^1C","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^36"]]],["^1C","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2R","^2S","^3G"]]],["^1C","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^2M",["^ ","^2N",null,"^2O",["^D",[]],"^2P",["^16","^2S","^2["]]]]],"~:clj-info",["^ ","jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer/api.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64_vlq.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/zip.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/js_deps.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/lilactown/helix/0.0.12/helix-0.0.12.jar!/helix/impl/analyzer.clj",1614681773000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/analyzer.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/util.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/lilactown/helix/0.0.12/helix-0.0.12.jar!/helix/hooks.cljc",1614681773000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/tagged_literals.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1614681765000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/externs.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/compiler.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/core.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/env.cljc",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojurescript/1.10.773/clojurescript-1.10.773.jar!/cljs/source_map/base64.clj",1614681766000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1606738673000,"jar:file:/home/dennis/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1606738673000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","helix/hooks.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A"],"^B",null,"^C",["^D",[]],"^E",["^ ","^F",["^ ","^G",["^H",[["^I","~$&","^J"]]],"^7",197,"^8",4,"^6","helix/hooks.cljc","^K","^L","^M","^N","^O",true],"^P",["^ ","^G",["^H",[["^Q","^I","~$&","^J"]]],"^7",246,"^8",4,"^6","helix/hooks.cljc","^K","^R","^M","^N","^O",true],"^S",["^ ","^G",["^H",[["^I","~$&","^J"]]],"^7",177,"^8",4,"^6","helix/hooks.cljc","^K","^T","^M","^N","^O",true],"^U",["^ ","^G",["^H",[["^I","~$&","^J"]]],"^7",153,"^8",4,"^6","helix/hooks.cljc","^K","^V","^M","^N","^O",true],"^W",["^ ","^G",["^H",[["^I","~$&","^J"]]],"^7",226,"^8",4,"^6","helix/hooks.cljc","^K","^X","^M","^N","^O",true]],"~:shadow/js-access-properties",["^D",["useLayoutEffect","useRef","useCallback","useImperativeHandle","debugValue","useMemo","useReducer","useEffect","useState","useContext"]],"^K","^N","^Y",["^ ","^Z","^["],"^11",null,"^12",["^ ","^13","^13","^14","^13","^15","^15","^16","^16","^[","^[","^17","^["],"^18",["^D",["^19","^1:"]],"~:shadow/js-access-global",["^D",["undefined","Error"]],"^1;",null,"~:defs",["^ ","~$use-ref",["^ ","~:protocol-inline",null,"^5",["^ ","^6","helix/hooks.cljc","^7",43,"^8",10,"^9",43,"^:",17,"^G",["^H",["~$quote",["^H",[["~$x"]]]]],"~:doc","Just like react/useRef. Supports accessing the \"current\" property via\n  dereference (@) and updating the \"current\" property via `reset!` and `swap!`"],"^K","^1P","^6","helix/hooks.cljc","^:",17,"~:method-params",["^H",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^8",4,"~:variadic?",false,"^7",43,"~:ret-tag","~$js","^9",43,"~:max-fixed-arity",1,"~:fn-var",true,"^G",["^H",["^4J",["^H",[["~$x"]]]]],"^4K","Just like react/useRef. Supports accessing the \"current\" property via\n  dereference (@) and updating the \"current\" property via `reset!` and `swap!`"],"~$use-memo*",["^ ","^4I",null,"^5",["^ ","^6","helix/hooks.cljc","^7",216,"^8",10,"^9",216,"^:",19,"^G",["^H",["^4J",["^H",[["~$f"],["~$f","^I"]]]]],"~:top-fn",["^ ","^4O",false,"~:fixed-arity",2,"^4R",2,"^4L",[["~$f"],["~$f","^I"]],"^G",["^H",[["~$f"],["~$f","^I"]]],"^4N",["^H",[null,null]]]],"^K","^1U","^6","helix/hooks.cljc","^:",19,"^4U",["^ ","^4O",false,"^4V",2,"^4R",2,"^4L",[["~$f"],["~$f","^I"]],"^G",["^H",[["~$f"],["~$f","^I"]]],"^4N",["^H",[null,null]]],"^4L",[["~$f"],["~$f","^I"]],"^4M",null,"^4V",2,"^4N",["^H",[null,null]],"^8",4,"^4O",false,"~:methods",[["^ ","^4V",1,"^4O",false,"~:tag","^4Q"],["^ ","^4V",2,"^4O",false,"^4X","^4Q"]],"^7",216,"^9",216,"^4R",2,"^4S",true,"^G",["^H",[["~$f"],["~$f","^I"]]]],"~$use-reducer",["^ ","^4I",null,"^5",["^ ","^6","helix/hooks.cljc","^7",73,"^8",10,"^9",73,"^:",21,"^G",["^H",["^4J",["^H",[["~$reducer","~$init-state"],["^4Z","^4[","~$init"]]]]],"^4K","Just react/useReducer.","^4U",["^ ","^4O",false,"^4V",3,"^4R",3,"^4L",[["^4Z","^4["],["^4Z","^4[","^50"]],"^G",["^H",[["^4Z","^4["],["^4Z","^4[","^50"]]],"^4N",["^H",[null,null]]]],"^K","^1V","^6","helix/hooks.cljc","^:",21,"^4U",["^ ","^4O",false,"^4V",3,"^4R",3,"^4L",[["^4Z","^4["],["^4Z","^4[","^50"]],"^G",["^H",[["^4Z","^4["],["^4Z","^4[","^50"]]],"^4N",["^H",[null,null]]],"^4L",[["^4Z","^4["],["^4Z","^4[","^50"]],"^4M",null,"^4V",3,"^4N",["^H",[null,null]],"^8",4,"^4O",false,"^4W",[["^ ","^4V",2,"^4O",false,"^4X","~$any"],["^ ","^4V",3,"^4O",false,"^4X","^4Q"]],"^7",73,"^9",73,"^4R",3,"^4S",true,"^G",["^H",[["^4Z","^4["],["^4Z","^4[","^50"]]],"^4K","Just react/useReducer."],"~$use-callback*",["^ ","^4I",null,"^5",["^ ","^6","helix/hooks.cljc","^7",236,"^8",10,"^9",236,"^:",23,"^G",["^H",["^4J",["^H",[["~$f"],["~$f","^I"]]]]],"^4U",["^ ","^4O",false,"^4V",2,"^4R",2,"^4L",[["~$f"],["~$f","^I"]],"^G",["^H",[["~$f"],["~$f","^I"]]],"^4N",["^H",[null,null]]]],"^K","^1T","^6","helix/hooks.cljc","^:",23,"^4U",["^ ","^4O",false,"^4V",2,"^4R",2,"^4L",[["~$f"],["~$f","^I"]],"^G",["^H",[["~$f"],["~$f","^I"]]],"^4N",["^H",[null,null]]],"^4L",[["~$f"],["~$f","^I"]],"^4M",null,"^4V",2,"^4N",["^H",[null,null]],"^8",4,"^4O",false,"^4W",[["^ ","^4V",1,"^4O",false,"^4X","^4Q"],["^ ","^4V",2,"^4O",false,"^4X","^4Q"]],"^7",236,"^9",236,"^4R",2,"^4S",true,"^G",["^H",[["~$f"],["~$f","^I"]]]],"~$raw-use-layout-effect",["^ ","^K","^20","^6","helix/hooks.cljc","^7",10,"^8",8,"^9",10,"^:",34,"^5",["^ ","^6","helix/hooks.cljc","^7",10,"^8",13,"^9",10,"^:",34],"^4X","^4Q"],"~$raw-use-imperative-handle",["^ ","^K","^1[","^6","helix/hooks.cljc","^7",13,"^8",8,"^9",13,"^:",38,"^5",["^ ","^6","helix/hooks.cljc","^7",13,"^8",13,"^9",13,"^:",38],"^4X","^4Q"],"~$wrap-fx",["^ ","^4I",null,"^5",["^ ","^6","helix/hooks.cljc","^7",98,"^8",10,"^9",98,"^:",17,"^G",["^H",["^4J",["^H",[["~$f"]]]]]],"^K","^21","^6","helix/hooks.cljc","^:",17,"^4L",["^H",[["~$f"]]],"^4M",null,"^4N",["^H",[null,null]],"^8",4,"^4O",false,"^7",98,"^4P","~$function","^9",98,"^4R",1,"^4S",true,"^G",["^H",["^4J",["^H",[["~$f"]]]]]],"~$simple-body?",["^ ","^4I",null,"^5",["^ ","^6","helix/hooks.cljc","^7",106,"^8",7,"^9",106,"^:",19,"^G",["^H",["^4J",["^H",[["^J"]]]]]],"^K","^22","^6","helix/hooks.cljc","^:",19,"^4L",["^H",[["^J"]]],"^4M",null,"^4N",["^H",[null,null]],"^8",1,"^4O",false,"^7",106,"^4P","~$boolean","^9",106,"^4R",1,"^4S",true,"^G",["^H",["^4J",["^H",[["^J"]]]]]],"~$use-imperative-handle*",["^ ","^4I",null,"^5",["^ ","^6","helix/hooks.cljc","^7",258,"^8",10,"^9",258,"^:",32,"^G",["^H",["^4J",["^H",[["^Q","~$f"],["^Q","~$f","^I"]]]]],"^4U",["^ ","^4O",false,"^4V",3,"^4R",3,"^4L",[["^Q","~$f"],["^Q","~$f","^I"]],"^G",["^H",[["^Q","~$f"],["^Q","~$f","^I"]]],"^4N",["^H",[null,null]]]],"^K","^23","^6","helix/hooks.cljc","^:",32,"^4U",["^ ","^4O",false,"^4V",3,"^4R",3,"^4L",[["^Q","~$f"],["^Q","~$f","^I"]],"^G",["^H",[["^Q","~$f"],["^Q","~$f","^I"]]],"^4N",["^H",[null,null]]],"^4L",[["^Q","~$f"],["^Q","~$f","^I"]],"^4M",null,"^4V",3,"^4N",["^H",[null,null]],"^8",4,"^4O",false,"^4W",[["^ ","^4V",2,"^4O",false,"^4X","^4Q"],["^ ","^4V",3,"^4O",false,"^4X","^4Q"]],"^7",258,"^9",258,"^4R",3,"^4S",true,"^G",["^H",[["^Q","~$f"],["^Q","~$f","^I"]]]],"~$determine-deps",["^ ","^4I",null,"^5",["^ ","^6","helix/hooks.cljc","^7",144,"^8",16,"^9",144,"^:",30,"^G",["^H",["^4J",["^H",[["^I"]]]]]],"^K","^28","^6","helix/hooks.cljc","^:",30,"^4L",["^H",[["^I"]]],"^4M",null,"^4N",["^H",[null,null]],"^8",10,"^4O",false,"^7",144,"^9",144,"^4R",1,"^4S",true,"^G",["^H",["^4J",["^H",[["^I"]]]]]],"~$use-layout-effect*",["^ ","^4I",null,"^5",["^ ","^6","helix/hooks.cljc","^7",187,"^8",10,"^9",187,"^:",28,"^G",["^H",["^4J",["^H",[["~$f"],["~$f","^I"]]]]],"^4U",["^ ","^4O",false,"^4V",2,"^4R",2,"^4L",[["~$f"],["~$f","^I"]],"^G",["^H",[["~$f"],["~$f","^I"]]],"^4N",["^H",[null,null]]]],"^K","^2;","^6","helix/hooks.cljc","^:",28,"^4U",["^ ","^4O",false,"^4V",2,"^4R",2,"^4L",[["~$f"],["~$f","^I"]],"^G",["^H",[["~$f"],["~$f","^I"]]],"^4N",["^H",[null,null]]],"^4L",[["~$f"],["~$f","^I"]],"^4M",null,"^4V",2,"^4N",["^H",[null,null]],"^8",4,"^4O",false,"^4W",[["^ ","^4V",1,"^4O",false,"^4X","^4Q"],["^ ","^4V",2,"^4O",false,"^4X","^4Q"]],"^7",187,"^9",187,"^4R",2,"^4S",true,"^G",["^H",[["~$f"],["~$f","^I"]]]],"~$use-effect*",["^ ","^4I",null,"^5",["^ ","^6","helix/hooks.cljc","^7",167,"^8",10,"^9",167,"^:",21,"^G",["^H",["^4J",["^H",[["~$f"],["~$f","^I"]]]]],"^4U",["^ ","^4O",false,"^4V",2,"^4R",2,"^4L",[["~$f"],["~$f","^I"]],"^G",["^H",[["~$f"],["~$f","^I"]]],"^4N",["^H",[null,null]]]],"^K","^2:","^6","helix/hooks.cljc","^:",21,"^4U",["^ ","^4O",false,"^4V",2,"^4R",2,"^4L",[["~$f"],["~$f","^I"]],"^G",["^H",[["~$f"],["~$f","^I"]]],"^4N",["^H",[null,null]]],"^4L",[["~$f"],["~$f","^I"]],"^4M",null,"^4V",2,"^4N",["^H",[null,null]],"^8",4,"^4O",false,"^4W",[["^ ","^4V",1,"^4O",false,"^4X","^4Q"],["^ ","^4V",2,"^4O",false,"^4X","^4Q"]],"^7",167,"^9",167,"^4R",2,"^4S",true,"^G",["^H",[["~$f"],["~$f","^I"]]]],"~$raw-use-callback",["^ ","^K","^2?","^6","helix/hooks.cljc","^7",12,"^8",8,"^9",12,"^:",29,"^5",["^ ","^6","helix/hooks.cljc","^7",12,"^8",13,"^9",12,"^:",29],"^4X","^4Q"],"~$raw-use-effect",["^ ","^K","^2@","^6","helix/hooks.cljc","^7",9,"^8",8,"^9",9,"^:",27,"^5",["^ ","^6","helix/hooks.cljc","^7",9,"^8",13,"^9",9,"^:",27],"^4X","^4Q"],"~$use-state",["^ ","^4I",null,"^5",["^ ","^6","helix/hooks.cljc","^7",20,"^8",10,"^9",20,"^:",19,"^G",["^H",["^4J",["^H",[["~$initial"]]]]],"^4K","Like `react/useState`, but the update function returned can be used similar\n  to `swap!`.\n\n  Example:\n  ```\n  (let [[state set-state] (use-state {:count 0})]\n   ;; ...\n   (set-state update :count inc))\n  ```"],"^K","^2E","^6","helix/hooks.cljc","^:",19,"^4L",["^H",[["^5@"]]],"^4M",null,"^4N",["^H",[null,null]],"^8",4,"^4O",false,"^7",20,"^4P","~$cljs.core/IVector","^9",20,"^4R",1,"^4S",true,"^G",["^H",["^4J",["^H",[["^5@"]]]]],"^4K","Like `react/useState`, but the update function returned can be used similar\n  to `swap!`.\n\n  Example:\n  ```\n  (let [[state set-state] (use-state {:count 0})]\n   ;; ...\n   (set-state update :count inc))\n  ```"],"~$use-context",["^ ","^5",["^ ","^6","helix/hooks.cljc","^7",91,"^8",9,"^9",91,"^:",20],"^K","^2G","^6","helix/hooks.cljc","^:",20,"^8",4,"^7",91,"^9",91,"^4X","^4Q","^4K","Just react/useContext"],"~$use-debug-value",["^ ","^5",["^ ","^6","helix/hooks.cljc","^7",268,"^8",9,"^9",268,"^:",24],"^K","^2H","^6","helix/hooks.cljc","^:",24,"^8",4,"^7",268,"^9",268,"^4X","^4Q","^4K","just react/useDebugValue"],"~$raw-use-memo",["^ ","^K","^2J","^6","helix/hooks.cljc","^7",11,"^8",8,"^9",11,"^:",25,"^5",["^ ","^6","helix/hooks.cljc","^7",11,"^8",13,"^9",11,"^:",25],"^4X","^4Q"]],"^1:",["^ ","^N","^N","^15","^15"],"~:cljs.analyzer/constants",["^ ","^18",["^D",["~:auto-deps"]],"~:order",["^5F"]],"^1?",["^ ","^19",["^D",[]],"^1:",["^D",[]]],"^1@",["^ ","^Z",["^ ","^1>","^17"]],"^1A",["^16","^15","^[","^13"]],"^M","^N","~:ns-specs",["^ "],"~:ns-spec-vars",["^D",[]],"~:compiler-options",["^2L",[["^5J","~:static-fns"],true,["^5J","~:shadow-tweaks"],null,["^5J","~:source-map-inline"],null,["^5J","~:elide-asserts"],false,["^5J","~:optimize-constants"],null,["^5J","^1F"],null,["^5J","~:external-config"],null,["^5J","~:tooling-config"],null,["^5J","~:emit-constants"],null,["^5J","~:load-tests"],null,["^5J","~:form-size-threshold"],null,["^5J","~:data-readers"],null,["^5J","~:infer-externs"],"~:auto",["^5J","^1H"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^5J","~:fn-invoke-direct"],null,["^5J","~:source-map"],"/dev/null"]]]